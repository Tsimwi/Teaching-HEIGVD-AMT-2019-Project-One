/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 81405.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 2.0], [93.1, 2.0], [93.2, 2.0], [93.3, 2.0], [93.4, 2.0], [93.5, 2.0], [93.6, 2.0], [93.7, 2.0], [93.8, 2.0], [93.9, 2.0], [94.0, 2.0], [94.1, 2.0], [94.2, 2.0], [94.3, 2.0], [94.4, 2.0], [94.5, 2.0], [94.6, 2.0], [94.7, 2.0], [94.8, 2.0], [94.9, 2.0], [95.0, 3.0], [95.1, 3.0], [95.2, 3.0], [95.3, 3.0], [95.4, 3.0], [95.5, 3.0], [95.6, 3.0], [95.7, 3.0], [95.8, 3.0], [95.9, 3.0], [96.0, 5.0], [96.1, 5.0], [96.2, 5.0], [96.3, 5.0], [96.4, 5.0], [96.5, 5.0], [96.6, 5.0], [96.7, 5.0], [96.8, 5.0], [96.9, 5.0], [97.0, 7.0], [97.1, 7.0], [97.2, 7.0], [97.3, 7.0], [97.4, 7.0], [97.5, 7.0], [97.6, 7.0], [97.7, 7.0], [97.8, 7.0], [97.9, 7.0], [98.0, 38.0], [98.1, 38.0], [98.2, 38.0], [98.3, 38.0], [98.4, 38.0], [98.5, 38.0], [98.6, 38.0], [98.7, 38.0], [98.8, 38.0], [98.9, 38.0], [99.0, 38.0], [99.1, 38.0], [99.2, 38.0], [99.3, 38.0], [99.4, 38.0], [99.5, 38.0], [99.6, 38.0], [99.7, 38.0], [99.8, 38.0], [99.9, 38.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[0.0, 30619.0], [0.1, 30619.0], [0.2, 30619.0], [0.3, 30619.0], [0.4, 30619.0], [0.5, 30619.0], [0.6, 30619.0], [0.7, 30619.0], [0.8, 30619.0], [0.9, 30619.0], [1.0, 30642.0], [1.1, 30642.0], [1.2, 30642.0], [1.3, 30642.0], [1.4, 30642.0], [1.5, 30642.0], [1.6, 30642.0], [1.7, 30642.0], [1.8, 30642.0], [1.9, 30642.0], [2.0, 30653.0], [2.1, 30653.0], [2.2, 30653.0], [2.3, 30653.0], [2.4, 30653.0], [2.5, 30653.0], [2.6, 30653.0], [2.7, 30653.0], [2.8, 30653.0], [2.9, 30653.0], [3.0, 30655.0], [3.1, 30655.0], [3.2, 30655.0], [3.3, 30655.0], [3.4, 30655.0], [3.5, 30655.0], [3.6, 30655.0], [3.7, 30655.0], [3.8, 30655.0], [3.9, 30655.0], [4.0, 30676.0], [4.1, 30676.0], [4.2, 30676.0], [4.3, 30676.0], [4.4, 30676.0], [4.5, 30676.0], [4.6, 30676.0], [4.7, 30676.0], [4.8, 30676.0], [4.9, 30676.0], [5.0, 30687.0], [5.1, 30687.0], [5.2, 30687.0], [5.3, 30687.0], [5.4, 30687.0], [5.5, 30687.0], [5.6, 30687.0], [5.7, 30687.0], [5.8, 30687.0], [5.9, 30687.0], [6.0, 30693.0], [6.1, 30693.0], [6.2, 30693.0], [6.3, 30693.0], [6.4, 30693.0], [6.5, 30693.0], [6.6, 30693.0], [6.7, 30693.0], [6.8, 30693.0], [6.9, 30693.0], [7.0, 30738.0], [7.1, 30738.0], [7.2, 30738.0], [7.3, 30738.0], [7.4, 30738.0], [7.5, 30738.0], [7.6, 30738.0], [7.7, 30738.0], [7.8, 30738.0], [7.9, 30738.0], [8.0, 30750.0], [8.1, 30750.0], [8.2, 30750.0], [8.3, 30750.0], [8.4, 30750.0], [8.5, 30750.0], [8.6, 30750.0], [8.7, 30750.0], [8.8, 30750.0], [8.9, 30750.0], [9.0, 30760.0], [9.1, 30760.0], [9.2, 30760.0], [9.3, 30760.0], [9.4, 30760.0], [9.5, 30760.0], [9.6, 30760.0], [9.7, 30760.0], [9.8, 30760.0], [9.9, 30760.0], [10.0, 30769.0], [10.1, 30769.0], [10.2, 30769.0], [10.3, 30769.0], [10.4, 30769.0], [10.5, 30769.0], [10.6, 30769.0], [10.7, 30769.0], [10.8, 30769.0], [10.9, 30769.0], [11.0, 30775.0], [11.1, 30775.0], [11.2, 30775.0], [11.3, 30775.0], [11.4, 30775.0], [11.5, 30775.0], [11.6, 30775.0], [11.7, 30775.0], [11.8, 30775.0], [11.9, 30775.0], [12.0, 30782.0], [12.1, 30782.0], [12.2, 30782.0], [12.3, 30782.0], [12.4, 30782.0], [12.5, 30782.0], [12.6, 30782.0], [12.7, 30782.0], [12.8, 30782.0], [12.9, 30782.0], [13.0, 30790.0], [13.1, 30790.0], [13.2, 30790.0], [13.3, 30790.0], [13.4, 30790.0], [13.5, 30790.0], [13.6, 30790.0], [13.7, 30790.0], [13.8, 30790.0], [13.9, 30790.0], [14.0, 30790.0], [14.1, 30790.0], [14.2, 30790.0], [14.3, 30790.0], [14.4, 30790.0], [14.5, 30790.0], [14.6, 30790.0], [14.7, 30790.0], [14.8, 30790.0], [14.9, 30790.0], [15.0, 30811.0], [15.1, 30811.0], [15.2, 30811.0], [15.3, 30811.0], [15.4, 30811.0], [15.5, 30811.0], [15.6, 30811.0], [15.7, 30811.0], [15.8, 30811.0], [15.9, 30811.0], [16.0, 30816.0], [16.1, 30816.0], [16.2, 30816.0], [16.3, 30816.0], [16.4, 30816.0], [16.5, 30816.0], [16.6, 30816.0], [16.7, 30816.0], [16.8, 30816.0], [16.9, 30816.0], [17.0, 30818.0], [17.1, 30818.0], [17.2, 30818.0], [17.3, 30818.0], [17.4, 30818.0], [17.5, 30818.0], [17.6, 30818.0], [17.7, 30818.0], [17.8, 30818.0], [17.9, 30818.0], [18.0, 30820.0], [18.1, 30820.0], [18.2, 30820.0], [18.3, 30820.0], [18.4, 30820.0], [18.5, 30820.0], [18.6, 30820.0], [18.7, 30820.0], [18.8, 30820.0], [18.9, 30820.0], [19.0, 30839.0], [19.1, 30839.0], [19.2, 30839.0], [19.3, 30839.0], [19.4, 30839.0], [19.5, 30839.0], [19.6, 30839.0], [19.7, 30839.0], [19.8, 30839.0], [19.9, 30839.0], [20.0, 31730.0], [20.1, 31730.0], [20.2, 31730.0], [20.3, 31730.0], [20.4, 31730.0], [20.5, 31730.0], [20.6, 31730.0], [20.7, 31730.0], [20.8, 31730.0], [20.9, 31730.0], [21.0, 31759.0], [21.1, 31759.0], [21.2, 31759.0], [21.3, 31759.0], [21.4, 31759.0], [21.5, 31759.0], [21.6, 31759.0], [21.7, 31759.0], [21.8, 31759.0], [21.9, 31759.0], [22.0, 37032.0], [22.1, 37032.0], [22.2, 37032.0], [22.3, 37032.0], [22.4, 37032.0], [22.5, 37032.0], [22.6, 37032.0], [22.7, 37032.0], [22.8, 37032.0], [22.9, 37032.0], [23.0, 37216.0], [23.1, 37216.0], [23.2, 37216.0], [23.3, 37216.0], [23.4, 37216.0], [23.5, 37216.0], [23.6, 37216.0], [23.7, 37216.0], [23.8, 37216.0], [23.9, 37216.0], [24.0, 37241.0], [24.1, 37241.0], [24.2, 37241.0], [24.3, 37241.0], [24.4, 37241.0], [24.5, 37241.0], [24.6, 37241.0], [24.7, 37241.0], [24.8, 37241.0], [24.9, 37241.0], [25.0, 37247.0], [25.1, 37247.0], [25.2, 37247.0], [25.3, 37247.0], [25.4, 37247.0], [25.5, 37247.0], [25.6, 37247.0], [25.7, 37247.0], [25.8, 37247.0], [25.9, 37247.0], [26.0, 37265.0], [26.1, 37265.0], [26.2, 37265.0], [26.3, 37265.0], [26.4, 37265.0], [26.5, 37265.0], [26.6, 37265.0], [26.7, 37265.0], [26.8, 37265.0], [26.9, 37265.0], [27.0, 37277.0], [27.1, 37277.0], [27.2, 37277.0], [27.3, 37277.0], [27.4, 37277.0], [27.5, 37277.0], [27.6, 37277.0], [27.7, 37277.0], [27.8, 37277.0], [27.9, 37277.0], [28.0, 37447.0], [28.1, 37447.0], [28.2, 37447.0], [28.3, 37447.0], [28.4, 37447.0], [28.5, 37447.0], [28.6, 37447.0], [28.7, 37447.0], [28.8, 37447.0], [28.9, 37447.0], [29.0, 37482.0], [29.1, 37482.0], [29.2, 37482.0], [29.3, 37482.0], [29.4, 37482.0], [29.5, 37482.0], [29.6, 37482.0], [29.7, 37482.0], [29.8, 37482.0], [29.9, 37482.0], [30.0, 37722.0], [30.1, 37722.0], [30.2, 37722.0], [30.3, 37722.0], [30.4, 37722.0], [30.5, 37722.0], [30.6, 37722.0], [30.7, 37722.0], [30.8, 37722.0], [30.9, 37722.0], [31.0, 41205.0], [31.1, 41205.0], [31.2, 41205.0], [31.3, 41205.0], [31.4, 41205.0], [31.5, 41205.0], [31.6, 41205.0], [31.7, 41205.0], [31.8, 41205.0], [31.9, 41205.0], [32.0, 43200.0], [32.1, 43200.0], [32.2, 43200.0], [32.3, 43200.0], [32.4, 43200.0], [32.5, 43200.0], [32.6, 43200.0], [32.7, 43200.0], [32.8, 43200.0], [32.9, 43200.0], [33.0, 46218.0], [33.1, 46218.0], [33.2, 46218.0], [33.3, 46218.0], [33.4, 46218.0], [33.5, 46218.0], [33.6, 46218.0], [33.7, 46218.0], [33.8, 46218.0], [33.9, 46218.0], [34.0, 46262.0], [34.1, 46262.0], [34.2, 46262.0], [34.3, 46262.0], [34.4, 46262.0], [34.5, 46262.0], [34.6, 46262.0], [34.7, 46262.0], [34.8, 46262.0], [34.9, 46262.0], [35.0, 46740.0], [35.1, 46740.0], [35.2, 46740.0], [35.3, 46740.0], [35.4, 46740.0], [35.5, 46740.0], [35.6, 46740.0], [35.7, 46740.0], [35.8, 46740.0], [35.9, 46740.0], [36.0, 46949.0], [36.1, 46949.0], [36.2, 46949.0], [36.3, 46949.0], [36.4, 46949.0], [36.5, 46949.0], [36.6, 46949.0], [36.7, 46949.0], [36.8, 46949.0], [36.9, 46949.0], [37.0, 46951.0], [37.1, 46951.0], [37.2, 46951.0], [37.3, 46951.0], [37.4, 46951.0], [37.5, 46951.0], [37.6, 46951.0], [37.7, 46951.0], [37.8, 46951.0], [37.9, 46951.0], [38.0, 46967.0], [38.1, 46967.0], [38.2, 46967.0], [38.3, 46967.0], [38.4, 46967.0], [38.5, 46967.0], [38.6, 46967.0], [38.7, 46967.0], [38.8, 46967.0], [38.9, 46967.0], [39.0, 46969.0], [39.1, 46969.0], [39.2, 46969.0], [39.3, 46969.0], [39.4, 46969.0], [39.5, 46969.0], [39.6, 46969.0], [39.7, 46969.0], [39.8, 46969.0], [39.9, 46969.0], [40.0, 46973.0], [40.1, 46973.0], [40.2, 46973.0], [40.3, 46973.0], [40.4, 46973.0], [40.5, 46973.0], [40.6, 46973.0], [40.7, 46973.0], [40.8, 46973.0], [40.9, 46973.0], [41.0, 46983.0], [41.1, 46983.0], [41.2, 46983.0], [41.3, 46983.0], [41.4, 46983.0], [41.5, 46983.0], [41.6, 46983.0], [41.7, 46983.0], [41.8, 46983.0], [41.9, 46983.0], [42.0, 46984.0], [42.1, 46984.0], [42.2, 46984.0], [42.3, 46984.0], [42.4, 46984.0], [42.5, 46984.0], [42.6, 46984.0], [42.7, 46984.0], [42.8, 46984.0], [42.9, 46984.0], [43.0, 46991.0], [43.1, 46991.0], [43.2, 46991.0], [43.3, 46991.0], [43.4, 46991.0], [43.5, 46991.0], [43.6, 46991.0], [43.7, 46991.0], [43.8, 46991.0], [43.9, 46991.0], [44.0, 46995.0], [44.1, 46995.0], [44.2, 46995.0], [44.3, 46995.0], [44.4, 46995.0], [44.5, 46995.0], [44.6, 46995.0], [44.7, 46995.0], [44.8, 46995.0], [44.9, 46995.0], [45.0, 47039.0], [45.1, 47039.0], [45.2, 47039.0], [45.3, 47039.0], [45.4, 47039.0], [45.5, 47039.0], [45.6, 47039.0], [45.7, 47039.0], [45.8, 47039.0], [45.9, 47039.0], [46.0, 47042.0], [46.1, 47042.0], [46.2, 47042.0], [46.3, 47042.0], [46.4, 47042.0], [46.5, 47042.0], [46.6, 47042.0], [46.7, 47042.0], [46.8, 47042.0], [46.9, 47042.0], [47.0, 47054.0], [47.1, 47054.0], [47.2, 47054.0], [47.3, 47054.0], [47.4, 47054.0], [47.5, 47054.0], [47.6, 47054.0], [47.7, 47054.0], [47.8, 47054.0], [47.9, 47054.0], [48.0, 47067.0], [48.1, 47067.0], [48.2, 47067.0], [48.3, 47067.0], [48.4, 47067.0], [48.5, 47067.0], [48.6, 47067.0], [48.7, 47067.0], [48.8, 47067.0], [48.9, 47067.0], [49.0, 47088.0], [49.1, 47088.0], [49.2, 47088.0], [49.3, 47088.0], [49.4, 47088.0], [49.5, 47088.0], [49.6, 47088.0], [49.7, 47088.0], [49.8, 47088.0], [49.9, 47088.0], [50.0, 47099.0], [50.1, 47099.0], [50.2, 47099.0], [50.3, 47099.0], [50.4, 47099.0], [50.5, 47099.0], [50.6, 47099.0], [50.7, 47099.0], [50.8, 47099.0], [50.9, 47099.0], [51.0, 47099.0], [51.1, 47099.0], [51.2, 47099.0], [51.3, 47099.0], [51.4, 47099.0], [51.5, 47099.0], [51.6, 47099.0], [51.7, 47099.0], [51.8, 47099.0], [51.9, 47099.0], [52.0, 47120.0], [52.1, 47120.0], [52.2, 47120.0], [52.3, 47120.0], [52.4, 47120.0], [52.5, 47120.0], [52.6, 47120.0], [52.7, 47120.0], [52.8, 47120.0], [52.9, 47120.0], [53.0, 47138.0], [53.1, 47138.0], [53.2, 47138.0], [53.3, 47138.0], [53.4, 47138.0], [53.5, 47138.0], [53.6, 47138.0], [53.7, 47138.0], [53.8, 47138.0], [53.9, 47138.0], [54.0, 47138.0], [54.1, 47138.0], [54.2, 47138.0], [54.3, 47138.0], [54.4, 47138.0], [54.5, 47138.0], [54.6, 47138.0], [54.7, 47138.0], [54.8, 47138.0], [54.9, 47138.0], [55.0, 47140.0], [55.1, 47140.0], [55.2, 47140.0], [55.3, 47140.0], [55.4, 47140.0], [55.5, 47140.0], [55.6, 47140.0], [55.7, 47140.0], [55.8, 47140.0], [55.9, 47140.0], [56.0, 47146.0], [56.1, 47146.0], [56.2, 47146.0], [56.3, 47146.0], [56.4, 47146.0], [56.5, 47146.0], [56.6, 47146.0], [56.7, 47146.0], [56.8, 47146.0], [56.9, 47146.0], [57.0, 47151.0], [57.1, 47151.0], [57.2, 47151.0], [57.3, 47151.0], [57.4, 47151.0], [57.5, 47151.0], [57.6, 47151.0], [57.7, 47151.0], [57.8, 47151.0], [57.9, 47151.0], [58.0, 47162.0], [58.1, 47162.0], [58.2, 47162.0], [58.3, 47162.0], [58.4, 47162.0], [58.5, 47162.0], [58.6, 47162.0], [58.7, 47162.0], [58.8, 47162.0], [58.9, 47162.0], [59.0, 47200.0], [59.1, 47200.0], [59.2, 47200.0], [59.3, 47200.0], [59.4, 47200.0], [59.5, 47200.0], [59.6, 47200.0], [59.7, 47200.0], [59.8, 47200.0], [59.9, 47200.0], [60.0, 47207.0], [60.1, 47207.0], [60.2, 47207.0], [60.3, 47207.0], [60.4, 47207.0], [60.5, 47207.0], [60.6, 47207.0], [60.7, 47207.0], [60.8, 47207.0], [60.9, 47207.0], [61.0, 47208.0], [61.1, 47208.0], [61.2, 47208.0], [61.3, 47208.0], [61.4, 47208.0], [61.5, 47208.0], [61.6, 47208.0], [61.7, 47208.0], [61.8, 47208.0], [61.9, 47208.0], [62.0, 47245.0], [62.1, 47245.0], [62.2, 47245.0], [62.3, 47245.0], [62.4, 47245.0], [62.5, 47245.0], [62.6, 47245.0], [62.7, 47245.0], [62.8, 47245.0], [62.9, 47245.0], [63.0, 47250.0], [63.1, 47250.0], [63.2, 47250.0], [63.3, 47250.0], [63.4, 47250.0], [63.5, 47250.0], [63.6, 47250.0], [63.7, 47250.0], [63.8, 47250.0], [63.9, 47250.0], [64.0, 47251.0], [64.1, 47251.0], [64.2, 47251.0], [64.3, 47251.0], [64.4, 47251.0], [64.5, 47251.0], [64.6, 47251.0], [64.7, 47251.0], [64.8, 47251.0], [64.9, 47251.0], [65.0, 47300.0], [65.1, 47300.0], [65.2, 47300.0], [65.3, 47300.0], [65.4, 47300.0], [65.5, 47300.0], [65.6, 47300.0], [65.7, 47300.0], [65.8, 47300.0], [65.9, 47300.0], [66.0, 47303.0], [66.1, 47303.0], [66.2, 47303.0], [66.3, 47303.0], [66.4, 47303.0], [66.5, 47303.0], [66.6, 47303.0], [66.7, 47303.0], [66.8, 47303.0], [66.9, 47303.0], [67.0, 47305.0], [67.1, 47305.0], [67.2, 47305.0], [67.3, 47305.0], [67.4, 47305.0], [67.5, 47305.0], [67.6, 47305.0], [67.7, 47305.0], [67.8, 47305.0], [67.9, 47305.0], [68.0, 47477.0], [68.1, 47477.0], [68.2, 47477.0], [68.3, 47477.0], [68.4, 47477.0], [68.5, 47477.0], [68.6, 47477.0], [68.7, 47477.0], [68.8, 47477.0], [68.9, 47477.0], [69.0, 47546.0], [69.1, 47546.0], [69.2, 47546.0], [69.3, 47546.0], [69.4, 47546.0], [69.5, 47546.0], [69.6, 47546.0], [69.7, 47546.0], [69.8, 47546.0], [69.9, 47546.0], [70.0, 47602.0], [70.1, 47602.0], [70.2, 47602.0], [70.3, 47602.0], [70.4, 47602.0], [70.5, 47602.0], [70.6, 47602.0], [70.7, 47602.0], [70.8, 47602.0], [70.9, 47602.0], [71.0, 47633.0], [71.1, 47633.0], [71.2, 47633.0], [71.3, 47633.0], [71.4, 47633.0], [71.5, 47633.0], [71.6, 47633.0], [71.7, 47633.0], [71.8, 47633.0], [71.9, 47633.0], [72.0, 47674.0], [72.1, 47674.0], [72.2, 47674.0], [72.3, 47674.0], [72.4, 47674.0], [72.5, 47674.0], [72.6, 47674.0], [72.7, 47674.0], [72.8, 47674.0], [72.9, 47674.0], [73.0, 47703.0], [73.1, 47703.0], [73.2, 47703.0], [73.3, 47703.0], [73.4, 47703.0], [73.5, 47703.0], [73.6, 47703.0], [73.7, 47703.0], [73.8, 47703.0], [73.9, 47703.0], [74.0, 47724.0], [74.1, 47724.0], [74.2, 47724.0], [74.3, 47724.0], [74.4, 47724.0], [74.5, 47724.0], [74.6, 47724.0], [74.7, 47724.0], [74.8, 47724.0], [74.9, 47724.0], [75.0, 47775.0], [75.1, 47775.0], [75.2, 47775.0], [75.3, 47775.0], [75.4, 47775.0], [75.5, 47775.0], [75.6, 47775.0], [75.7, 47775.0], [75.8, 47775.0], [75.9, 47775.0], [76.0, 47782.0], [76.1, 47782.0], [76.2, 47782.0], [76.3, 47782.0], [76.4, 47782.0], [76.5, 47782.0], [76.6, 47782.0], [76.7, 47782.0], [76.8, 47782.0], [76.9, 47782.0], [77.0, 47829.0], [77.1, 47829.0], [77.2, 47829.0], [77.3, 47829.0], [77.4, 47829.0], [77.5, 47829.0], [77.6, 47829.0], [77.7, 47829.0], [77.8, 47829.0], [77.9, 47829.0], [78.0, 47845.0], [78.1, 47845.0], [78.2, 47845.0], [78.3, 47845.0], [78.4, 47845.0], [78.5, 47845.0], [78.6, 47845.0], [78.7, 47845.0], [78.8, 47845.0], [78.9, 47845.0], [79.0, 47908.0], [79.1, 47908.0], [79.2, 47908.0], [79.3, 47908.0], [79.4, 47908.0], [79.5, 47908.0], [79.6, 47908.0], [79.7, 47908.0], [79.8, 47908.0], [79.9, 47908.0], [80.0, 47921.0], [80.1, 47921.0], [80.2, 47921.0], [80.3, 47921.0], [80.4, 47921.0], [80.5, 47921.0], [80.6, 47921.0], [80.7, 47921.0], [80.8, 47921.0], [80.9, 47921.0], [81.0, 48164.0], [81.1, 48164.0], [81.2, 48164.0], [81.3, 48164.0], [81.4, 48164.0], [81.5, 48164.0], [81.6, 48164.0], [81.7, 48164.0], [81.8, 48164.0], [81.9, 48164.0], [82.0, 49328.0], [82.1, 49328.0], [82.2, 49328.0], [82.3, 49328.0], [82.4, 49328.0], [82.5, 49328.0], [82.6, 49328.0], [82.7, 49328.0], [82.8, 49328.0], [82.9, 49328.0], [83.0, 49935.0], [83.1, 49935.0], [83.2, 49935.0], [83.3, 49935.0], [83.4, 49935.0], [83.5, 49935.0], [83.6, 49935.0], [83.7, 49935.0], [83.8, 49935.0], [83.9, 49935.0], [84.0, 51184.0], [84.1, 51184.0], [84.2, 51184.0], [84.3, 51184.0], [84.4, 51184.0], [84.5, 51184.0], [84.6, 51184.0], [84.7, 51184.0], [84.8, 51184.0], [84.9, 51184.0], [85.0, 51755.0], [85.1, 51755.0], [85.2, 51755.0], [85.3, 51755.0], [85.4, 51755.0], [85.5, 51755.0], [85.6, 51755.0], [85.7, 51755.0], [85.8, 51755.0], [85.9, 51755.0], [86.0, 52168.0], [86.1, 52168.0], [86.2, 52168.0], [86.3, 52168.0], [86.4, 52168.0], [86.5, 52168.0], [86.6, 52168.0], [86.7, 52168.0], [86.8, 52168.0], [86.9, 52168.0], [87.0, 52290.0], [87.1, 52290.0], [87.2, 52290.0], [87.3, 52290.0], [87.4, 52290.0], [87.5, 52290.0], [87.6, 52290.0], [87.7, 52290.0], [87.8, 52290.0], [87.9, 52290.0], [88.0, 52480.0], [88.1, 52480.0], [88.2, 52480.0], [88.3, 52480.0], [88.4, 52480.0], [88.5, 52480.0], [88.6, 52480.0], [88.7, 52480.0], [88.8, 52480.0], [88.9, 52480.0], [89.0, 52804.0], [89.1, 52804.0], [89.2, 52804.0], [89.3, 52804.0], [89.4, 52804.0], [89.5, 52804.0], [89.6, 52804.0], [89.7, 52804.0], [89.8, 52804.0], [89.9, 52804.0], [90.0, 52870.0], [90.1, 52870.0], [90.2, 52870.0], [90.3, 52870.0], [90.4, 52870.0], [90.5, 52870.0], [90.6, 52870.0], [90.7, 52870.0], [90.8, 52870.0], [90.9, 52870.0], [91.0, 53451.0], [91.1, 53451.0], [91.2, 53451.0], [91.3, 53451.0], [91.4, 53451.0], [91.5, 53451.0], [91.6, 53451.0], [91.7, 53451.0], [91.8, 53451.0], [91.9, 53451.0], [92.0, 53528.0], [92.1, 53528.0], [92.2, 53528.0], [92.3, 53528.0], [92.4, 53528.0], [92.5, 53528.0], [92.6, 53528.0], [92.7, 53528.0], [92.8, 53528.0], [92.9, 53528.0], [93.0, 53987.0], [93.1, 53987.0], [93.2, 53987.0], [93.3, 53987.0], [93.4, 53987.0], [93.5, 53987.0], [93.6, 53987.0], [93.7, 53987.0], [93.8, 53987.0], [93.9, 53987.0], [94.0, 54208.0], [94.1, 54208.0], [94.2, 54208.0], [94.3, 54208.0], [94.4, 54208.0], [94.5, 54208.0], [94.6, 54208.0], [94.7, 54208.0], [94.8, 54208.0], [94.9, 54208.0], [95.0, 54233.0], [95.1, 54233.0], [95.2, 54233.0], [95.3, 54233.0], [95.4, 54233.0], [95.5, 54233.0], [95.6, 54233.0], [95.7, 54233.0], [95.8, 54233.0], [95.9, 54233.0], [96.0, 80446.0], [96.1, 80446.0], [96.2, 80446.0], [96.3, 80446.0], [96.4, 80446.0], [96.5, 80446.0], [96.6, 80446.0], [96.7, 80446.0], [96.8, 80446.0], [96.9, 80446.0], [97.0, 80937.0], [97.1, 80937.0], [97.2, 80937.0], [97.3, 80937.0], [97.4, 80937.0], [97.5, 80937.0], [97.6, 80937.0], [97.7, 80937.0], [97.8, 80937.0], [97.9, 80937.0], [98.0, 81298.0], [98.1, 81298.0], [98.2, 81298.0], [98.3, 81298.0], [98.4, 81298.0], [98.5, 81298.0], [98.6, 81298.0], [98.7, 81298.0], [98.8, 81298.0], [98.9, 81298.0], [99.0, 81405.0], [99.1, 81405.0], [99.2, 81405.0], [99.3, 81405.0], [99.4, 81405.0], [99.5, 81405.0], [99.6, 81405.0], [99.7, 81405.0], [99.8, 81405.0], [99.9, 81405.0]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[0.0, 1407.0], [0.1, 1407.0], [0.2, 1407.0], [0.3, 1407.0], [0.4, 1407.0], [0.5, 1407.0], [0.6, 1407.0], [0.7, 1407.0], [0.8, 1407.0], [0.9, 1407.0], [1.0, 1412.0], [1.1, 1412.0], [1.2, 1412.0], [1.3, 1412.0], [1.4, 1412.0], [1.5, 1412.0], [1.6, 1412.0], [1.7, 1412.0], [1.8, 1412.0], [1.9, 1412.0], [2.0, 1420.0], [2.1, 1420.0], [2.2, 1420.0], [2.3, 1420.0], [2.4, 1420.0], [2.5, 1420.0], [2.6, 1420.0], [2.7, 1420.0], [2.8, 1420.0], [2.9, 1420.0], [3.0, 1431.0], [3.1, 1431.0], [3.2, 1431.0], [3.3, 1431.0], [3.4, 1431.0], [3.5, 1431.0], [3.6, 1431.0], [3.7, 1431.0], [3.8, 1431.0], [3.9, 1431.0], [4.0, 1432.0], [4.1, 1432.0], [4.2, 1432.0], [4.3, 1432.0], [4.4, 1432.0], [4.5, 1432.0], [4.6, 1432.0], [4.7, 1432.0], [4.8, 1432.0], [4.9, 1432.0], [5.0, 1566.0], [5.1, 1566.0], [5.2, 1566.0], [5.3, 1566.0], [5.4, 1566.0], [5.5, 1566.0], [5.6, 1566.0], [5.7, 1566.0], [5.8, 1566.0], [5.9, 1566.0], [6.0, 1584.0], [6.1, 1584.0], [6.2, 1584.0], [6.3, 1584.0], [6.4, 1584.0], [6.5, 1584.0], [6.6, 1584.0], [6.7, 1584.0], [6.8, 1584.0], [6.9, 1584.0], [7.0, 1632.0], [7.1, 1632.0], [7.2, 1632.0], [7.3, 1632.0], [7.4, 1632.0], [7.5, 1632.0], [7.6, 1632.0], [7.7, 1632.0], [7.8, 1632.0], [7.9, 1632.0], [8.0, 1637.0], [8.1, 1637.0], [8.2, 1637.0], [8.3, 1637.0], [8.4, 1637.0], [8.5, 1637.0], [8.6, 1637.0], [8.7, 1637.0], [8.8, 1637.0], [8.9, 1637.0], [9.0, 1656.0], [9.1, 1656.0], [9.2, 1656.0], [9.3, 1656.0], [9.4, 1656.0], [9.5, 1656.0], [9.6, 1656.0], [9.7, 1656.0], [9.8, 1656.0], [9.9, 1656.0], [10.0, 1863.0], [10.1, 1863.0], [10.2, 1863.0], [10.3, 1863.0], [10.4, 1863.0], [10.5, 1863.0], [10.6, 1863.0], [10.7, 1863.0], [10.8, 1863.0], [10.9, 1863.0], [11.0, 1877.0], [11.1, 1877.0], [11.2, 1877.0], [11.3, 1877.0], [11.4, 1877.0], [11.5, 1877.0], [11.6, 1877.0], [11.7, 1877.0], [11.8, 1877.0], [11.9, 1877.0], [12.0, 1879.0], [12.1, 1879.0], [12.2, 1879.0], [12.3, 1879.0], [12.4, 1879.0], [12.5, 1879.0], [12.6, 1879.0], [12.7, 1879.0], [12.8, 1879.0], [12.9, 1879.0], [13.0, 1885.0], [13.1, 1885.0], [13.2, 1885.0], [13.3, 1885.0], [13.4, 1885.0], [13.5, 1885.0], [13.6, 1885.0], [13.7, 1885.0], [13.8, 1885.0], [13.9, 1885.0], [14.0, 1957.0], [14.1, 1957.0], [14.2, 1957.0], [14.3, 1957.0], [14.4, 1957.0], [14.5, 1957.0], [14.6, 1957.0], [14.7, 1957.0], [14.8, 1957.0], [14.9, 1957.0], [15.0, 2149.0], [15.1, 2149.0], [15.2, 2149.0], [15.3, 2149.0], [15.4, 2149.0], [15.5, 2149.0], [15.6, 2149.0], [15.7, 2149.0], [15.8, 2149.0], [15.9, 2149.0], [16.0, 2163.0], [16.1, 2163.0], [16.2, 2163.0], [16.3, 2163.0], [16.4, 2163.0], [16.5, 2163.0], [16.6, 2163.0], [16.7, 2163.0], [16.8, 2163.0], [16.9, 2163.0], [17.0, 2174.0], [17.1, 2174.0], [17.2, 2174.0], [17.3, 2174.0], [17.4, 2174.0], [17.5, 2174.0], [17.6, 2174.0], [17.7, 2174.0], [17.8, 2174.0], [17.9, 2174.0], [18.0, 2195.0], [18.1, 2195.0], [18.2, 2195.0], [18.3, 2195.0], [18.4, 2195.0], [18.5, 2195.0], [18.6, 2195.0], [18.7, 2195.0], [18.8, 2195.0], [18.9, 2195.0], [19.0, 2217.0], [19.1, 2217.0], [19.2, 2217.0], [19.3, 2217.0], [19.4, 2217.0], [19.5, 2217.0], [19.6, 2217.0], [19.7, 2217.0], [19.8, 2217.0], [19.9, 2217.0], [20.0, 2388.0], [20.1, 2388.0], [20.2, 2388.0], [20.3, 2388.0], [20.4, 2388.0], [20.5, 2388.0], [20.6, 2388.0], [20.7, 2388.0], [20.8, 2388.0], [20.9, 2388.0], [21.0, 2400.0], [21.1, 2400.0], [21.2, 2400.0], [21.3, 2400.0], [21.4, 2400.0], [21.5, 2400.0], [21.6, 2400.0], [21.7, 2400.0], [21.8, 2400.0], [21.9, 2400.0], [22.0, 2412.0], [22.1, 2412.0], [22.2, 2412.0], [22.3, 2412.0], [22.4, 2412.0], [22.5, 2412.0], [22.6, 2412.0], [22.7, 2412.0], [22.8, 2412.0], [22.9, 2412.0], [23.0, 2486.0], [23.1, 2486.0], [23.2, 2486.0], [23.3, 2486.0], [23.4, 2486.0], [23.5, 2486.0], [23.6, 2486.0], [23.7, 2486.0], [23.8, 2486.0], [23.9, 2486.0], [24.0, 2492.0], [24.1, 2492.0], [24.2, 2492.0], [24.3, 2492.0], [24.4, 2492.0], [24.5, 2492.0], [24.6, 2492.0], [24.7, 2492.0], [24.8, 2492.0], [24.9, 2492.0], [25.0, 2564.0], [25.1, 2564.0], [25.2, 2564.0], [25.3, 2564.0], [25.4, 2564.0], [25.5, 2564.0], [25.6, 2564.0], [25.7, 2564.0], [25.8, 2564.0], [25.9, 2564.0], [26.0, 2569.0], [26.1, 2569.0], [26.2, 2569.0], [26.3, 2569.0], [26.4, 2569.0], [26.5, 2569.0], [26.6, 2569.0], [26.7, 2569.0], [26.8, 2569.0], [26.9, 2569.0], [27.0, 2578.0], [27.1, 2578.0], [27.2, 2578.0], [27.3, 2578.0], [27.4, 2578.0], [27.5, 2578.0], [27.6, 2578.0], [27.7, 2578.0], [27.8, 2578.0], [27.9, 2578.0], [28.0, 2585.0], [28.1, 2585.0], [28.2, 2585.0], [28.3, 2585.0], [28.4, 2585.0], [28.5, 2585.0], [28.6, 2585.0], [28.7, 2585.0], [28.8, 2585.0], [28.9, 2585.0], [29.0, 2596.0], [29.1, 2596.0], [29.2, 2596.0], [29.3, 2596.0], [29.4, 2596.0], [29.5, 2596.0], [29.6, 2596.0], [29.7, 2596.0], [29.8, 2596.0], [29.9, 2596.0], [30.0, 2601.0], [30.1, 2601.0], [30.2, 2601.0], [30.3, 2601.0], [30.4, 2601.0], [30.5, 2601.0], [30.6, 2601.0], [30.7, 2601.0], [30.8, 2601.0], [30.9, 2601.0], [31.0, 2602.0], [31.1, 2602.0], [31.2, 2602.0], [31.3, 2602.0], [31.4, 2602.0], [31.5, 2602.0], [31.6, 2602.0], [31.7, 2602.0], [31.8, 2602.0], [31.9, 2602.0], [32.0, 2604.0], [32.1, 2604.0], [32.2, 2604.0], [32.3, 2604.0], [32.4, 2604.0], [32.5, 2604.0], [32.6, 2604.0], [32.7, 2604.0], [32.8, 2604.0], [32.9, 2604.0], [33.0, 2608.0], [33.1, 2608.0], [33.2, 2608.0], [33.3, 2608.0], [33.4, 2608.0], [33.5, 2608.0], [33.6, 2608.0], [33.7, 2608.0], [33.8, 2608.0], [33.9, 2608.0], [34.0, 2609.0], [34.1, 2609.0], [34.2, 2609.0], [34.3, 2609.0], [34.4, 2609.0], [34.5, 2609.0], [34.6, 2609.0], [34.7, 2609.0], [34.8, 2609.0], [34.9, 2609.0], [35.0, 2620.0], [35.1, 2620.0], [35.2, 2620.0], [35.3, 2620.0], [35.4, 2620.0], [35.5, 2620.0], [35.6, 2620.0], [35.7, 2620.0], [35.8, 2620.0], [35.9, 2620.0], [36.0, 2632.0], [36.1, 2632.0], [36.2, 2632.0], [36.3, 2632.0], [36.4, 2632.0], [36.5, 2632.0], [36.6, 2632.0], [36.7, 2632.0], [36.8, 2632.0], [36.9, 2632.0], [37.0, 2635.0], [37.1, 2635.0], [37.2, 2635.0], [37.3, 2635.0], [37.4, 2635.0], [37.5, 2635.0], [37.6, 2635.0], [37.7, 2635.0], [37.8, 2635.0], [37.9, 2635.0], [38.0, 2645.0], [38.1, 2645.0], [38.2, 2645.0], [38.3, 2645.0], [38.4, 2645.0], [38.5, 2645.0], [38.6, 2645.0], [38.7, 2645.0], [38.8, 2645.0], [38.9, 2645.0], [39.0, 2649.0], [39.1, 2649.0], [39.2, 2649.0], [39.3, 2649.0], [39.4, 2649.0], [39.5, 2649.0], [39.6, 2649.0], [39.7, 2649.0], [39.8, 2649.0], [39.9, 2649.0], [40.0, 2653.0], [40.1, 2653.0], [40.2, 2653.0], [40.3, 2653.0], [40.4, 2653.0], [40.5, 2653.0], [40.6, 2653.0], [40.7, 2653.0], [40.8, 2653.0], [40.9, 2653.0], [41.0, 2659.0], [41.1, 2659.0], [41.2, 2659.0], [41.3, 2659.0], [41.4, 2659.0], [41.5, 2659.0], [41.6, 2659.0], [41.7, 2659.0], [41.8, 2659.0], [41.9, 2659.0], [42.0, 2661.0], [42.1, 2661.0], [42.2, 2661.0], [42.3, 2661.0], [42.4, 2661.0], [42.5, 2661.0], [42.6, 2661.0], [42.7, 2661.0], [42.8, 2661.0], [42.9, 2661.0], [43.0, 2664.0], [43.1, 2664.0], [43.2, 2664.0], [43.3, 2664.0], [43.4, 2664.0], [43.5, 2664.0], [43.6, 2664.0], [43.7, 2664.0], [43.8, 2664.0], [43.9, 2664.0], [44.0, 2666.0], [44.1, 2666.0], [44.2, 2666.0], [44.3, 2666.0], [44.4, 2666.0], [44.5, 2666.0], [44.6, 2666.0], [44.7, 2666.0], [44.8, 2666.0], [44.9, 2666.0], [45.0, 2673.0], [45.1, 2673.0], [45.2, 2673.0], [45.3, 2673.0], [45.4, 2673.0], [45.5, 2673.0], [45.6, 2673.0], [45.7, 2673.0], [45.8, 2673.0], [45.9, 2673.0], [46.0, 2678.0], [46.1, 2678.0], [46.2, 2678.0], [46.3, 2678.0], [46.4, 2678.0], [46.5, 2678.0], [46.6, 2678.0], [46.7, 2678.0], [46.8, 2678.0], [46.9, 2678.0], [47.0, 2682.0], [47.1, 2682.0], [47.2, 2682.0], [47.3, 2682.0], [47.4, 2682.0], [47.5, 2682.0], [47.6, 2682.0], [47.7, 2682.0], [47.8, 2682.0], [47.9, 2682.0], [48.0, 2683.0], [48.1, 2683.0], [48.2, 2683.0], [48.3, 2683.0], [48.4, 2683.0], [48.5, 2683.0], [48.6, 2683.0], [48.7, 2683.0], [48.8, 2683.0], [48.9, 2683.0], [49.0, 2684.0], [49.1, 2684.0], [49.2, 2684.0], [49.3, 2684.0], [49.4, 2684.0], [49.5, 2684.0], [49.6, 2684.0], [49.7, 2684.0], [49.8, 2684.0], [49.9, 2684.0], [50.0, 2698.0], [50.1, 2698.0], [50.2, 2698.0], [50.3, 2698.0], [50.4, 2698.0], [50.5, 2698.0], [50.6, 2698.0], [50.7, 2698.0], [50.8, 2698.0], [50.9, 2698.0], [51.0, 2698.0], [51.1, 2698.0], [51.2, 2698.0], [51.3, 2698.0], [51.4, 2698.0], [51.5, 2698.0], [51.6, 2698.0], [51.7, 2698.0], [51.8, 2698.0], [51.9, 2698.0], [52.0, 2710.0], [52.1, 2710.0], [52.2, 2710.0], [52.3, 2710.0], [52.4, 2710.0], [52.5, 2710.0], [52.6, 2710.0], [52.7, 2710.0], [52.8, 2710.0], [52.9, 2710.0], [53.0, 2722.0], [53.1, 2722.0], [53.2, 2722.0], [53.3, 2722.0], [53.4, 2722.0], [53.5, 2722.0], [53.6, 2722.0], [53.7, 2722.0], [53.8, 2722.0], [53.9, 2722.0], [54.0, 2730.0], [54.1, 2730.0], [54.2, 2730.0], [54.3, 2730.0], [54.4, 2730.0], [54.5, 2730.0], [54.6, 2730.0], [54.7, 2730.0], [54.8, 2730.0], [54.9, 2730.0], [55.0, 2730.0], [55.1, 2730.0], [55.2, 2730.0], [55.3, 2730.0], [55.4, 2730.0], [55.5, 2730.0], [55.6, 2730.0], [55.7, 2730.0], [55.8, 2730.0], [55.9, 2730.0], [56.0, 12040.0], [56.1, 12040.0], [56.2, 12040.0], [56.3, 12040.0], [56.4, 12040.0], [56.5, 12040.0], [56.6, 12040.0], [56.7, 12040.0], [56.8, 12040.0], [56.9, 12040.0], [57.0, 12048.0], [57.1, 12048.0], [57.2, 12048.0], [57.3, 12048.0], [57.4, 12048.0], [57.5, 12048.0], [57.6, 12048.0], [57.7, 12048.0], [57.8, 12048.0], [57.9, 12048.0], [58.0, 12183.0], [58.1, 12183.0], [58.2, 12183.0], [58.3, 12183.0], [58.4, 12183.0], [58.5, 12183.0], [58.6, 12183.0], [58.7, 12183.0], [58.8, 12183.0], [58.9, 12183.0], [59.0, 12190.0], [59.1, 12190.0], [59.2, 12190.0], [59.3, 12190.0], [59.4, 12190.0], [59.5, 12190.0], [59.6, 12190.0], [59.7, 12190.0], [59.8, 12190.0], [59.9, 12190.0], [60.0, 12193.0], [60.1, 12193.0], [60.2, 12193.0], [60.3, 12193.0], [60.4, 12193.0], [60.5, 12193.0], [60.6, 12193.0], [60.7, 12193.0], [60.8, 12193.0], [60.9, 12193.0], [61.0, 12195.0], [61.1, 12195.0], [61.2, 12195.0], [61.3, 12195.0], [61.4, 12195.0], [61.5, 12195.0], [61.6, 12195.0], [61.7, 12195.0], [61.8, 12195.0], [61.9, 12195.0], [62.0, 12204.0], [62.1, 12204.0], [62.2, 12204.0], [62.3, 12204.0], [62.4, 12204.0], [62.5, 12204.0], [62.6, 12204.0], [62.7, 12204.0], [62.8, 12204.0], [62.9, 12204.0], [63.0, 12206.0], [63.1, 12206.0], [63.2, 12206.0], [63.3, 12206.0], [63.4, 12206.0], [63.5, 12206.0], [63.6, 12206.0], [63.7, 12206.0], [63.8, 12206.0], [63.9, 12206.0], [64.0, 12208.0], [64.1, 12208.0], [64.2, 12208.0], [64.3, 12208.0], [64.4, 12208.0], [64.5, 12208.0], [64.6, 12208.0], [64.7, 12208.0], [64.8, 12208.0], [64.9, 12208.0], [65.0, 49182.0], [65.1, 49182.0], [65.2, 49182.0], [65.3, 49182.0], [65.4, 49182.0], [65.5, 49182.0], [65.6, 49182.0], [65.7, 49182.0], [65.8, 49182.0], [65.9, 49182.0], [66.0, 49205.0], [66.1, 49205.0], [66.2, 49205.0], [66.3, 49205.0], [66.4, 49205.0], [66.5, 49205.0], [66.6, 49205.0], [66.7, 49205.0], [66.8, 49205.0], [66.9, 49205.0], [67.0, 49216.0], [67.1, 49216.0], [67.2, 49216.0], [67.3, 49216.0], [67.4, 49216.0], [67.5, 49216.0], [67.6, 49216.0], [67.7, 49216.0], [67.8, 49216.0], [67.9, 49216.0], [68.0, 49238.0], [68.1, 49238.0], [68.2, 49238.0], [68.3, 49238.0], [68.4, 49238.0], [68.5, 49238.0], [68.6, 49238.0], [68.7, 49238.0], [68.8, 49238.0], [68.9, 49238.0], [69.0, 49245.0], [69.1, 49245.0], [69.2, 49245.0], [69.3, 49245.0], [69.4, 49245.0], [69.5, 49245.0], [69.6, 49245.0], [69.7, 49245.0], [69.8, 49245.0], [69.9, 49245.0], [70.0, 49257.0], [70.1, 49257.0], [70.2, 49257.0], [70.3, 49257.0], [70.4, 49257.0], [70.5, 49257.0], [70.6, 49257.0], [70.7, 49257.0], [70.8, 49257.0], [70.9, 49257.0], [71.0, 49270.0], [71.1, 49270.0], [71.2, 49270.0], [71.3, 49270.0], [71.4, 49270.0], [71.5, 49270.0], [71.6, 49270.0], [71.7, 49270.0], [71.8, 49270.0], [71.9, 49270.0], [72.0, 49277.0], [72.1, 49277.0], [72.2, 49277.0], [72.3, 49277.0], [72.4, 49277.0], [72.5, 49277.0], [72.6, 49277.0], [72.7, 49277.0], [72.8, 49277.0], [72.9, 49277.0], [73.0, 49292.0], [73.1, 49292.0], [73.2, 49292.0], [73.3, 49292.0], [73.4, 49292.0], [73.5, 49292.0], [73.6, 49292.0], [73.7, 49292.0], [73.8, 49292.0], [73.9, 49292.0], [74.0, 49300.0], [74.1, 49300.0], [74.2, 49300.0], [74.3, 49300.0], [74.4, 49300.0], [74.5, 49300.0], [74.6, 49300.0], [74.7, 49300.0], [74.8, 49300.0], [74.9, 49300.0], [75.0, 49321.0], [75.1, 49321.0], [75.2, 49321.0], [75.3, 49321.0], [75.4, 49321.0], [75.5, 49321.0], [75.6, 49321.0], [75.7, 49321.0], [75.8, 49321.0], [75.9, 49321.0], [76.0, 49324.0], [76.1, 49324.0], [76.2, 49324.0], [76.3, 49324.0], [76.4, 49324.0], [76.5, 49324.0], [76.6, 49324.0], [76.7, 49324.0], [76.8, 49324.0], [76.9, 49324.0], [77.0, 49337.0], [77.1, 49337.0], [77.2, 49337.0], [77.3, 49337.0], [77.4, 49337.0], [77.5, 49337.0], [77.6, 49337.0], [77.7, 49337.0], [77.8, 49337.0], [77.9, 49337.0], [78.0, 49340.0], [78.1, 49340.0], [78.2, 49340.0], [78.3, 49340.0], [78.4, 49340.0], [78.5, 49340.0], [78.6, 49340.0], [78.7, 49340.0], [78.8, 49340.0], [78.9, 49340.0], [79.0, 49342.0], [79.1, 49342.0], [79.2, 49342.0], [79.3, 49342.0], [79.4, 49342.0], [79.5, 49342.0], [79.6, 49342.0], [79.7, 49342.0], [79.8, 49342.0], [79.9, 49342.0], [80.0, 49361.0], [80.1, 49361.0], [80.2, 49361.0], [80.3, 49361.0], [80.4, 49361.0], [80.5, 49361.0], [80.6, 49361.0], [80.7, 49361.0], [80.8, 49361.0], [80.9, 49361.0], [81.0, 49372.0], [81.1, 49372.0], [81.2, 49372.0], [81.3, 49372.0], [81.4, 49372.0], [81.5, 49372.0], [81.6, 49372.0], [81.7, 49372.0], [81.8, 49372.0], [81.9, 49372.0], [82.0, 49391.0], [82.1, 49391.0], [82.2, 49391.0], [82.3, 49391.0], [82.4, 49391.0], [82.5, 49391.0], [82.6, 49391.0], [82.7, 49391.0], [82.8, 49391.0], [82.9, 49391.0], [83.0, 49394.0], [83.1, 49394.0], [83.2, 49394.0], [83.3, 49394.0], [83.4, 49394.0], [83.5, 49394.0], [83.6, 49394.0], [83.7, 49394.0], [83.8, 49394.0], [83.9, 49394.0], [84.0, 49404.0], [84.1, 49404.0], [84.2, 49404.0], [84.3, 49404.0], [84.4, 49404.0], [84.5, 49404.0], [84.6, 49404.0], [84.7, 49404.0], [84.8, 49404.0], [84.9, 49404.0], [85.0, 49404.0], [85.1, 49404.0], [85.2, 49404.0], [85.3, 49404.0], [85.4, 49404.0], [85.5, 49404.0], [85.6, 49404.0], [85.7, 49404.0], [85.8, 49404.0], [85.9, 49404.0], [86.0, 49417.0], [86.1, 49417.0], [86.2, 49417.0], [86.3, 49417.0], [86.4, 49417.0], [86.5, 49417.0], [86.6, 49417.0], [86.7, 49417.0], [86.8, 49417.0], [86.9, 49417.0], [87.0, 49428.0], [87.1, 49428.0], [87.2, 49428.0], [87.3, 49428.0], [87.4, 49428.0], [87.5, 49428.0], [87.6, 49428.0], [87.7, 49428.0], [87.8, 49428.0], [87.9, 49428.0], [88.0, 49428.0], [88.1, 49428.0], [88.2, 49428.0], [88.3, 49428.0], [88.4, 49428.0], [88.5, 49428.0], [88.6, 49428.0], [88.7, 49428.0], [88.8, 49428.0], [88.9, 49428.0], [89.0, 49449.0], [89.1, 49449.0], [89.2, 49449.0], [89.3, 49449.0], [89.4, 49449.0], [89.5, 49449.0], [89.6, 49449.0], [89.7, 49449.0], [89.8, 49449.0], [89.9, 49449.0], [90.0, 49461.0], [90.1, 49461.0], [90.2, 49461.0], [90.3, 49461.0], [90.4, 49461.0], [90.5, 49461.0], [90.6, 49461.0], [90.7, 49461.0], [90.8, 49461.0], [90.9, 49461.0], [91.0, 49473.0], [91.1, 49473.0], [91.2, 49473.0], [91.3, 49473.0], [91.4, 49473.0], [91.5, 49473.0], [91.6, 49473.0], [91.7, 49473.0], [91.8, 49473.0], [91.9, 49473.0], [92.0, 49473.0], [92.1, 49473.0], [92.2, 49473.0], [92.3, 49473.0], [92.4, 49473.0], [92.5, 49473.0], [92.6, 49473.0], [92.7, 49473.0], [92.8, 49473.0], [92.9, 49473.0], [93.0, 49487.0], [93.1, 49487.0], [93.2, 49487.0], [93.3, 49487.0], [93.4, 49487.0], [93.5, 49487.0], [93.6, 49487.0], [93.7, 49487.0], [93.8, 49487.0], [93.9, 49487.0], [94.0, 49496.0], [94.1, 49496.0], [94.2, 49496.0], [94.3, 49496.0], [94.4, 49496.0], [94.5, 49496.0], [94.6, 49496.0], [94.7, 49496.0], [94.8, 49496.0], [94.9, 49496.0], [95.0, 49531.0], [95.1, 49531.0], [95.2, 49531.0], [95.3, 49531.0], [95.4, 49531.0], [95.5, 49531.0], [95.6, 49531.0], [95.7, 49531.0], [95.8, 49531.0], [95.9, 49531.0], [96.0, 49533.0], [96.1, 49533.0], [96.2, 49533.0], [96.3, 49533.0], [96.4, 49533.0], [96.5, 49533.0], [96.6, 49533.0], [96.7, 49533.0], [96.8, 49533.0], [96.9, 49533.0], [97.0, 49568.0], [97.1, 49568.0], [97.2, 49568.0], [97.3, 49568.0], [97.4, 49568.0], [97.5, 49568.0], [97.6, 49568.0], [97.7, 49568.0], [97.8, 49568.0], [97.9, 49568.0], [98.0, 49571.0], [98.1, 49571.0], [98.2, 49571.0], [98.3, 49571.0], [98.4, 49571.0], [98.5, 49571.0], [98.6, 49571.0], [98.7, 49571.0], [98.8, 49571.0], [98.9, 49571.0], [99.0, 49599.0], [99.1, 49599.0], [99.2, 49599.0], [99.3, 49599.0], [99.4, 49599.0], [99.5, 49599.0], [99.6, 49599.0], [99.7, 49599.0], [99.8, 49599.0], [99.9, 49599.0]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[0.0, 144.0], [0.1, 144.0], [0.2, 144.0], [0.3, 144.0], [0.4, 144.0], [0.5, 144.0], [0.6, 144.0], [0.7, 144.0], [0.8, 144.0], [0.9, 144.0], [1.0, 157.0], [1.1, 157.0], [1.2, 157.0], [1.3, 157.0], [1.4, 157.0], [1.5, 157.0], [1.6, 157.0], [1.7, 157.0], [1.8, 157.0], [1.9, 157.0], [2.0, 172.0], [2.1, 172.0], [2.2, 172.0], [2.3, 172.0], [2.4, 172.0], [2.5, 172.0], [2.6, 172.0], [2.7, 172.0], [2.8, 172.0], [2.9, 172.0], [3.0, 174.0], [3.1, 174.0], [3.2, 174.0], [3.3, 174.0], [3.4, 174.0], [3.5, 174.0], [3.6, 174.0], [3.7, 174.0], [3.8, 174.0], [3.9, 174.0], [4.0, 189.0], [4.1, 189.0], [4.2, 189.0], [4.3, 189.0], [4.4, 189.0], [4.5, 189.0], [4.6, 189.0], [4.7, 189.0], [4.8, 189.0], [4.9, 189.0], [5.0, 240.0], [5.1, 240.0], [5.2, 240.0], [5.3, 240.0], [5.4, 240.0], [5.5, 240.0], [5.6, 240.0], [5.7, 240.0], [5.8, 240.0], [5.9, 240.0], [6.0, 283.0], [6.1, 283.0], [6.2, 283.0], [6.3, 283.0], [6.4, 283.0], [6.5, 283.0], [6.6, 283.0], [6.7, 283.0], [6.8, 283.0], [6.9, 283.0], [7.0, 284.0], [7.1, 284.0], [7.2, 284.0], [7.3, 284.0], [7.4, 284.0], [7.5, 284.0], [7.6, 284.0], [7.7, 284.0], [7.8, 284.0], [7.9, 284.0], [8.0, 297.0], [8.1, 297.0], [8.2, 297.0], [8.3, 297.0], [8.4, 297.0], [8.5, 297.0], [8.6, 297.0], [8.7, 297.0], [8.8, 297.0], [8.9, 297.0], [9.0, 313.0], [9.1, 313.0], [9.2, 313.0], [9.3, 313.0], [9.4, 313.0], [9.5, 313.0], [9.6, 313.0], [9.7, 313.0], [9.8, 313.0], [9.9, 313.0], [10.0, 421.0], [10.1, 421.0], [10.2, 421.0], [10.3, 421.0], [10.4, 421.0], [10.5, 421.0], [10.6, 421.0], [10.7, 421.0], [10.8, 421.0], [10.9, 421.0], [11.0, 424.0], [11.1, 424.0], [11.2, 424.0], [11.3, 424.0], [11.4, 424.0], [11.5, 424.0], [11.6, 424.0], [11.7, 424.0], [11.8, 424.0], [11.9, 424.0], [12.0, 429.0], [12.1, 429.0], [12.2, 429.0], [12.3, 429.0], [12.4, 429.0], [12.5, 429.0], [12.6, 429.0], [12.7, 429.0], [12.8, 429.0], [12.9, 429.0], [13.0, 435.0], [13.1, 435.0], [13.2, 435.0], [13.3, 435.0], [13.4, 435.0], [13.5, 435.0], [13.6, 435.0], [13.7, 435.0], [13.8, 435.0], [13.9, 435.0], [14.0, 464.0], [14.1, 464.0], [14.2, 464.0], [14.3, 464.0], [14.4, 464.0], [14.5, 464.0], [14.6, 464.0], [14.7, 464.0], [14.8, 464.0], [14.9, 464.0], [15.0, 532.0], [15.1, 532.0], [15.2, 532.0], [15.3, 532.0], [15.4, 532.0], [15.5, 532.0], [15.6, 532.0], [15.7, 532.0], [15.8, 532.0], [15.9, 532.0], [16.0, 537.0], [16.1, 537.0], [16.2, 537.0], [16.3, 537.0], [16.4, 537.0], [16.5, 537.0], [16.6, 537.0], [16.7, 537.0], [16.8, 537.0], [16.9, 537.0], [17.0, 540.0], [17.1, 540.0], [17.2, 540.0], [17.3, 540.0], [17.4, 540.0], [17.5, 540.0], [17.6, 540.0], [17.7, 540.0], [17.8, 540.0], [17.9, 540.0], [18.0, 552.0], [18.1, 552.0], [18.2, 552.0], [18.3, 552.0], [18.4, 552.0], [18.5, 552.0], [18.6, 552.0], [18.7, 552.0], [18.8, 552.0], [18.9, 552.0], [19.0, 573.0], [19.1, 573.0], [19.2, 573.0], [19.3, 573.0], [19.4, 573.0], [19.5, 573.0], [19.6, 573.0], [19.7, 573.0], [19.8, 573.0], [19.9, 573.0], [20.0, 630.0], [20.1, 630.0], [20.2, 630.0], [20.3, 630.0], [20.4, 630.0], [20.5, 630.0], [20.6, 630.0], [20.7, 630.0], [20.8, 630.0], [20.9, 630.0], [21.0, 643.0], [21.1, 643.0], [21.2, 643.0], [21.3, 643.0], [21.4, 643.0], [21.5, 643.0], [21.6, 643.0], [21.7, 643.0], [21.8, 643.0], [21.9, 643.0], [22.0, 644.0], [22.1, 644.0], [22.2, 644.0], [22.3, 644.0], [22.4, 644.0], [22.5, 644.0], [22.6, 644.0], [22.7, 644.0], [22.8, 644.0], [22.9, 644.0], [23.0, 660.0], [23.1, 660.0], [23.2, 660.0], [23.3, 660.0], [23.4, 660.0], [23.5, 660.0], [23.6, 660.0], [23.7, 660.0], [23.8, 660.0], [23.9, 660.0], [24.0, 676.0], [24.1, 676.0], [24.2, 676.0], [24.3, 676.0], [24.4, 676.0], [24.5, 676.0], [24.6, 676.0], [24.7, 676.0], [24.8, 676.0], [24.9, 676.0], [25.0, 696.0], [25.1, 696.0], [25.2, 696.0], [25.3, 696.0], [25.4, 696.0], [25.5, 696.0], [25.6, 696.0], [25.7, 696.0], [25.8, 696.0], [25.9, 696.0], [26.0, 696.0], [26.1, 696.0], [26.2, 696.0], [26.3, 696.0], [26.4, 696.0], [26.5, 696.0], [26.6, 696.0], [26.7, 696.0], [26.8, 696.0], [26.9, 696.0], [27.0, 707.0], [27.1, 707.0], [27.2, 707.0], [27.3, 707.0], [27.4, 707.0], [27.5, 707.0], [27.6, 707.0], [27.7, 707.0], [27.8, 707.0], [27.9, 707.0], [28.0, 714.0], [28.1, 714.0], [28.2, 714.0], [28.3, 714.0], [28.4, 714.0], [28.5, 714.0], [28.6, 714.0], [28.7, 714.0], [28.8, 714.0], [28.9, 714.0], [29.0, 726.0], [29.1, 726.0], [29.2, 726.0], [29.3, 726.0], [29.4, 726.0], [29.5, 726.0], [29.6, 726.0], [29.7, 726.0], [29.8, 726.0], [29.9, 726.0], [30.0, 727.0], [30.1, 727.0], [30.2, 727.0], [30.3, 727.0], [30.4, 727.0], [30.5, 727.0], [30.6, 727.0], [30.7, 727.0], [30.8, 727.0], [30.9, 727.0], [31.0, 732.0], [31.1, 732.0], [31.2, 732.0], [31.3, 732.0], [31.4, 732.0], [31.5, 732.0], [31.6, 732.0], [31.7, 732.0], [31.8, 732.0], [31.9, 732.0], [32.0, 744.0], [32.1, 744.0], [32.2, 744.0], [32.3, 744.0], [32.4, 744.0], [32.5, 744.0], [32.6, 744.0], [32.7, 744.0], [32.8, 744.0], [32.9, 744.0], [33.0, 745.0], [33.1, 745.0], [33.2, 745.0], [33.3, 745.0], [33.4, 745.0], [33.5, 745.0], [33.6, 745.0], [33.7, 745.0], [33.8, 745.0], [33.9, 745.0], [34.0, 753.0], [34.1, 753.0], [34.2, 753.0], [34.3, 753.0], [34.4, 753.0], [34.5, 753.0], [34.6, 753.0], [34.7, 753.0], [34.8, 753.0], [34.9, 753.0], [35.0, 760.0], [35.1, 760.0], [35.2, 760.0], [35.3, 760.0], [35.4, 760.0], [35.5, 760.0], [35.6, 760.0], [35.7, 760.0], [35.8, 760.0], [35.9, 760.0], [36.0, 806.0], [36.1, 806.0], [36.2, 806.0], [36.3, 806.0], [36.4, 806.0], [36.5, 806.0], [36.6, 806.0], [36.7, 806.0], [36.8, 806.0], [36.9, 806.0], [37.0, 820.0], [37.1, 820.0], [37.2, 820.0], [37.3, 820.0], [37.4, 820.0], [37.5, 820.0], [37.6, 820.0], [37.7, 820.0], [37.8, 820.0], [37.9, 820.0], [38.0, 825.0], [38.1, 825.0], [38.2, 825.0], [38.3, 825.0], [38.4, 825.0], [38.5, 825.0], [38.6, 825.0], [38.7, 825.0], [38.8, 825.0], [38.9, 825.0], [39.0, 960.0], [39.1, 960.0], [39.2, 960.0], [39.3, 960.0], [39.4, 960.0], [39.5, 960.0], [39.6, 960.0], [39.7, 960.0], [39.8, 960.0], [39.9, 960.0], [40.0, 1084.0], [40.1, 1084.0], [40.2, 1084.0], [40.3, 1084.0], [40.4, 1084.0], [40.5, 1084.0], [40.6, 1084.0], [40.7, 1084.0], [40.8, 1084.0], [40.9, 1084.0], [41.0, 1294.0], [41.1, 1294.0], [41.2, 1294.0], [41.3, 1294.0], [41.4, 1294.0], [41.5, 1294.0], [41.6, 1294.0], [41.7, 1294.0], [41.8, 1294.0], [41.9, 1294.0], [42.0, 1307.0], [42.1, 1307.0], [42.2, 1307.0], [42.3, 1307.0], [42.4, 1307.0], [42.5, 1307.0], [42.6, 1307.0], [42.7, 1307.0], [42.8, 1307.0], [42.9, 1307.0], [43.0, 1333.0], [43.1, 1333.0], [43.2, 1333.0], [43.3, 1333.0], [43.4, 1333.0], [43.5, 1333.0], [43.6, 1333.0], [43.7, 1333.0], [43.8, 1333.0], [43.9, 1333.0], [44.0, 1340.0], [44.1, 1340.0], [44.2, 1340.0], [44.3, 1340.0], [44.4, 1340.0], [44.5, 1340.0], [44.6, 1340.0], [44.7, 1340.0], [44.8, 1340.0], [44.9, 1340.0], [45.0, 1366.0], [45.1, 1366.0], [45.2, 1366.0], [45.3, 1366.0], [45.4, 1366.0], [45.5, 1366.0], [45.6, 1366.0], [45.7, 1366.0], [45.8, 1366.0], [45.9, 1366.0], [46.0, 1367.0], [46.1, 1367.0], [46.2, 1367.0], [46.3, 1367.0], [46.4, 1367.0], [46.5, 1367.0], [46.6, 1367.0], [46.7, 1367.0], [46.8, 1367.0], [46.9, 1367.0], [47.0, 1381.0], [47.1, 1381.0], [47.2, 1381.0], [47.3, 1381.0], [47.4, 1381.0], [47.5, 1381.0], [47.6, 1381.0], [47.7, 1381.0], [47.8, 1381.0], [47.9, 1381.0], [48.0, 1383.0], [48.1, 1383.0], [48.2, 1383.0], [48.3, 1383.0], [48.4, 1383.0], [48.5, 1383.0], [48.6, 1383.0], [48.7, 1383.0], [48.8, 1383.0], [48.9, 1383.0], [49.0, 1387.0], [49.1, 1387.0], [49.2, 1387.0], [49.3, 1387.0], [49.4, 1387.0], [49.5, 1387.0], [49.6, 1387.0], [49.7, 1387.0], [49.8, 1387.0], [49.9, 1387.0], [50.0, 1389.0], [50.1, 1389.0], [50.2, 1389.0], [50.3, 1389.0], [50.4, 1389.0], [50.5, 1389.0], [50.6, 1389.0], [50.7, 1389.0], [50.8, 1389.0], [50.9, 1389.0], [51.0, 1422.0], [51.1, 1422.0], [51.2, 1422.0], [51.3, 1422.0], [51.4, 1422.0], [51.5, 1422.0], [51.6, 1422.0], [51.7, 1422.0], [51.8, 1422.0], [51.9, 1422.0], [52.0, 1425.0], [52.1, 1425.0], [52.2, 1425.0], [52.3, 1425.0], [52.4, 1425.0], [52.5, 1425.0], [52.6, 1425.0], [52.7, 1425.0], [52.8, 1425.0], [52.9, 1425.0], [53.0, 1425.0], [53.1, 1425.0], [53.2, 1425.0], [53.3, 1425.0], [53.4, 1425.0], [53.5, 1425.0], [53.6, 1425.0], [53.7, 1425.0], [53.8, 1425.0], [53.9, 1425.0], [54.0, 1432.0], [54.1, 1432.0], [54.2, 1432.0], [54.3, 1432.0], [54.4, 1432.0], [54.5, 1432.0], [54.6, 1432.0], [54.7, 1432.0], [54.8, 1432.0], [54.9, 1432.0], [55.0, 1444.0], [55.1, 1444.0], [55.2, 1444.0], [55.3, 1444.0], [55.4, 1444.0], [55.5, 1444.0], [55.6, 1444.0], [55.7, 1444.0], [55.8, 1444.0], [55.9, 1444.0], [56.0, 1464.0], [56.1, 1464.0], [56.2, 1464.0], [56.3, 1464.0], [56.4, 1464.0], [56.5, 1464.0], [56.6, 1464.0], [56.7, 1464.0], [56.8, 1464.0], [56.9, 1464.0], [57.0, 1472.0], [57.1, 1472.0], [57.2, 1472.0], [57.3, 1472.0], [57.4, 1472.0], [57.5, 1472.0], [57.6, 1472.0], [57.7, 1472.0], [57.8, 1472.0], [57.9, 1472.0], [58.0, 1475.0], [58.1, 1475.0], [58.2, 1475.0], [58.3, 1475.0], [58.4, 1475.0], [58.5, 1475.0], [58.6, 1475.0], [58.7, 1475.0], [58.8, 1475.0], [58.9, 1475.0], [59.0, 1478.0], [59.1, 1478.0], [59.2, 1478.0], [59.3, 1478.0], [59.4, 1478.0], [59.5, 1478.0], [59.6, 1478.0], [59.7, 1478.0], [59.8, 1478.0], [59.9, 1478.0], [60.0, 1496.0], [60.1, 1496.0], [60.2, 1496.0], [60.3, 1496.0], [60.4, 1496.0], [60.5, 1496.0], [60.6, 1496.0], [60.7, 1496.0], [60.8, 1496.0], [60.9, 1496.0], [61.0, 1527.0], [61.1, 1527.0], [61.2, 1527.0], [61.3, 1527.0], [61.4, 1527.0], [61.5, 1527.0], [61.6, 1527.0], [61.7, 1527.0], [61.8, 1527.0], [61.9, 1527.0], [62.0, 1538.0], [62.1, 1538.0], [62.2, 1538.0], [62.3, 1538.0], [62.4, 1538.0], [62.5, 1538.0], [62.6, 1538.0], [62.7, 1538.0], [62.8, 1538.0], [62.9, 1538.0], [63.0, 1555.0], [63.1, 1555.0], [63.2, 1555.0], [63.3, 1555.0], [63.4, 1555.0], [63.5, 1555.0], [63.6, 1555.0], [63.7, 1555.0], [63.8, 1555.0], [63.9, 1555.0], [64.0, 1556.0], [64.1, 1556.0], [64.2, 1556.0], [64.3, 1556.0], [64.4, 1556.0], [64.5, 1556.0], [64.6, 1556.0], [64.7, 1556.0], [64.8, 1556.0], [64.9, 1556.0], [65.0, 1562.0], [65.1, 1562.0], [65.2, 1562.0], [65.3, 1562.0], [65.4, 1562.0], [65.5, 1562.0], [65.6, 1562.0], [65.7, 1562.0], [65.8, 1562.0], [65.9, 1562.0], [66.0, 1592.0], [66.1, 1592.0], [66.2, 1592.0], [66.3, 1592.0], [66.4, 1592.0], [66.5, 1592.0], [66.6, 1592.0], [66.7, 1592.0], [66.8, 1592.0], [66.9, 1592.0], [67.0, 1615.0], [67.1, 1615.0], [67.2, 1615.0], [67.3, 1615.0], [67.4, 1615.0], [67.5, 1615.0], [67.6, 1615.0], [67.7, 1615.0], [67.8, 1615.0], [67.9, 1615.0], [68.0, 1621.0], [68.1, 1621.0], [68.2, 1621.0], [68.3, 1621.0], [68.4, 1621.0], [68.5, 1621.0], [68.6, 1621.0], [68.7, 1621.0], [68.8, 1621.0], [68.9, 1621.0], [69.0, 1636.0], [69.1, 1636.0], [69.2, 1636.0], [69.3, 1636.0], [69.4, 1636.0], [69.5, 1636.0], [69.6, 1636.0], [69.7, 1636.0], [69.8, 1636.0], [69.9, 1636.0], [70.0, 1636.0], [70.1, 1636.0], [70.2, 1636.0], [70.3, 1636.0], [70.4, 1636.0], [70.5, 1636.0], [70.6, 1636.0], [70.7, 1636.0], [70.8, 1636.0], [70.9, 1636.0], [71.0, 1637.0], [71.1, 1637.0], [71.2, 1637.0], [71.3, 1637.0], [71.4, 1637.0], [71.5, 1637.0], [71.6, 1637.0], [71.7, 1637.0], [71.8, 1637.0], [71.9, 1637.0], [72.0, 1665.0], [72.1, 1665.0], [72.2, 1665.0], [72.3, 1665.0], [72.4, 1665.0], [72.5, 1665.0], [72.6, 1665.0], [72.7, 1665.0], [72.8, 1665.0], [72.9, 1665.0], [73.0, 1683.0], [73.1, 1683.0], [73.2, 1683.0], [73.3, 1683.0], [73.4, 1683.0], [73.5, 1683.0], [73.6, 1683.0], [73.7, 1683.0], [73.8, 1683.0], [73.9, 1683.0], [74.0, 1700.0], [74.1, 1700.0], [74.2, 1700.0], [74.3, 1700.0], [74.4, 1700.0], [74.5, 1700.0], [74.6, 1700.0], [74.7, 1700.0], [74.8, 1700.0], [74.9, 1700.0], [75.0, 1738.0], [75.1, 1738.0], [75.2, 1738.0], [75.3, 1738.0], [75.4, 1738.0], [75.5, 1738.0], [75.6, 1738.0], [75.7, 1738.0], [75.8, 1738.0], [75.9, 1738.0], [76.0, 1748.0], [76.1, 1748.0], [76.2, 1748.0], [76.3, 1748.0], [76.4, 1748.0], [76.5, 1748.0], [76.6, 1748.0], [76.7, 1748.0], [76.8, 1748.0], [76.9, 1748.0], [77.0, 1758.0], [77.1, 1758.0], [77.2, 1758.0], [77.3, 1758.0], [77.4, 1758.0], [77.5, 1758.0], [77.6, 1758.0], [77.7, 1758.0], [77.8, 1758.0], [77.9, 1758.0], [78.0, 1769.0], [78.1, 1769.0], [78.2, 1769.0], [78.3, 1769.0], [78.4, 1769.0], [78.5, 1769.0], [78.6, 1769.0], [78.7, 1769.0], [78.8, 1769.0], [78.9, 1769.0], [79.0, 1769.0], [79.1, 1769.0], [79.2, 1769.0], [79.3, 1769.0], [79.4, 1769.0], [79.5, 1769.0], [79.6, 1769.0], [79.7, 1769.0], [79.8, 1769.0], [79.9, 1769.0], [80.0, 1795.0], [80.1, 1795.0], [80.2, 1795.0], [80.3, 1795.0], [80.4, 1795.0], [80.5, 1795.0], [80.6, 1795.0], [80.7, 1795.0], [80.8, 1795.0], [80.9, 1795.0], [81.0, 1801.0], [81.1, 1801.0], [81.2, 1801.0], [81.3, 1801.0], [81.4, 1801.0], [81.5, 1801.0], [81.6, 1801.0], [81.7, 1801.0], [81.8, 1801.0], [81.9, 1801.0], [82.0, 1842.0], [82.1, 1842.0], [82.2, 1842.0], [82.3, 1842.0], [82.4, 1842.0], [82.5, 1842.0], [82.6, 1842.0], [82.7, 1842.0], [82.8, 1842.0], [82.9, 1842.0], [83.0, 1844.0], [83.1, 1844.0], [83.2, 1844.0], [83.3, 1844.0], [83.4, 1844.0], [83.5, 1844.0], [83.6, 1844.0], [83.7, 1844.0], [83.8, 1844.0], [83.9, 1844.0], [84.0, 1878.0], [84.1, 1878.0], [84.2, 1878.0], [84.3, 1878.0], [84.4, 1878.0], [84.5, 1878.0], [84.6, 1878.0], [84.7, 1878.0], [84.8, 1878.0], [84.9, 1878.0], [85.0, 1915.0], [85.1, 1915.0], [85.2, 1915.0], [85.3, 1915.0], [85.4, 1915.0], [85.5, 1915.0], [85.6, 1915.0], [85.7, 1915.0], [85.8, 1915.0], [85.9, 1915.0], [86.0, 1934.0], [86.1, 1934.0], [86.2, 1934.0], [86.3, 1934.0], [86.4, 1934.0], [86.5, 1934.0], [86.6, 1934.0], [86.7, 1934.0], [86.8, 1934.0], [86.9, 1934.0], [87.0, 1940.0], [87.1, 1940.0], [87.2, 1940.0], [87.3, 1940.0], [87.4, 1940.0], [87.5, 1940.0], [87.6, 1940.0], [87.7, 1940.0], [87.8, 1940.0], [87.9, 1940.0], [88.0, 1943.0], [88.1, 1943.0], [88.2, 1943.0], [88.3, 1943.0], [88.4, 1943.0], [88.5, 1943.0], [88.6, 1943.0], [88.7, 1943.0], [88.8, 1943.0], [88.9, 1943.0], [89.0, 1947.0], [89.1, 1947.0], [89.2, 1947.0], [89.3, 1947.0], [89.4, 1947.0], [89.5, 1947.0], [89.6, 1947.0], [89.7, 1947.0], [89.8, 1947.0], [89.9, 1947.0], [90.0, 1989.0], [90.1, 1989.0], [90.2, 1989.0], [90.3, 1989.0], [90.4, 1989.0], [90.5, 1989.0], [90.6, 1989.0], [90.7, 1989.0], [90.8, 1989.0], [90.9, 1989.0], [91.0, 1998.0], [91.1, 1998.0], [91.2, 1998.0], [91.3, 1998.0], [91.4, 1998.0], [91.5, 1998.0], [91.6, 1998.0], [91.7, 1998.0], [91.8, 1998.0], [91.9, 1998.0], [92.0, 2005.0], [92.1, 2005.0], [92.2, 2005.0], [92.3, 2005.0], [92.4, 2005.0], [92.5, 2005.0], [92.6, 2005.0], [92.7, 2005.0], [92.8, 2005.0], [92.9, 2005.0], [93.0, 2009.0], [93.1, 2009.0], [93.2, 2009.0], [93.3, 2009.0], [93.4, 2009.0], [93.5, 2009.0], [93.6, 2009.0], [93.7, 2009.0], [93.8, 2009.0], [93.9, 2009.0], [94.0, 2021.0], [94.1, 2021.0], [94.2, 2021.0], [94.3, 2021.0], [94.4, 2021.0], [94.5, 2021.0], [94.6, 2021.0], [94.7, 2021.0], [94.8, 2021.0], [94.9, 2021.0], [95.0, 2051.0], [95.1, 2051.0], [95.2, 2051.0], [95.3, 2051.0], [95.4, 2051.0], [95.5, 2051.0], [95.6, 2051.0], [95.7, 2051.0], [95.8, 2051.0], [95.9, 2051.0], [96.0, 2087.0], [96.1, 2087.0], [96.2, 2087.0], [96.3, 2087.0], [96.4, 2087.0], [96.5, 2087.0], [96.6, 2087.0], [96.7, 2087.0], [96.8, 2087.0], [96.9, 2087.0], [97.0, 2088.0], [97.1, 2088.0], [97.2, 2088.0], [97.3, 2088.0], [97.4, 2088.0], [97.5, 2088.0], [97.6, 2088.0], [97.7, 2088.0], [97.8, 2088.0], [97.9, 2088.0], [98.0, 2102.0], [98.1, 2102.0], [98.2, 2102.0], [98.3, 2102.0], [98.4, 2102.0], [98.5, 2102.0], [98.6, 2102.0], [98.7, 2102.0], [98.8, 2102.0], [98.9, 2102.0], [99.0, 2160.0], [99.1, 2160.0], [99.2, 2160.0], [99.3, 2160.0], [99.4, 2160.0], [99.5, 2160.0], [99.6, 2160.0], [99.7, 2160.0], [99.8, 2160.0], [99.9, 2160.0]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[0.0, 1139.0], [0.1, 1139.0], [0.2, 1139.0], [0.3, 1139.0], [0.4, 1139.0], [0.5, 1139.0], [0.6, 1139.0], [0.7, 1139.0], [0.8, 1139.0], [0.9, 1139.0], [1.0, 1146.0], [1.1, 1146.0], [1.2, 1146.0], [1.3, 1146.0], [1.4, 1146.0], [1.5, 1146.0], [1.6, 1146.0], [1.7, 1146.0], [1.8, 1146.0], [1.9, 1146.0], [2.0, 1147.0], [2.1, 1147.0], [2.2, 1147.0], [2.3, 1147.0], [2.4, 1147.0], [2.5, 1147.0], [2.6, 1147.0], [2.7, 1147.0], [2.8, 1147.0], [2.9, 1147.0], [3.0, 1158.0], [3.1, 1158.0], [3.2, 1158.0], [3.3, 1158.0], [3.4, 1158.0], [3.5, 1158.0], [3.6, 1158.0], [3.7, 1158.0], [3.8, 1158.0], [3.9, 1158.0], [4.0, 1179.0], [4.1, 1179.0], [4.2, 1179.0], [4.3, 1179.0], [4.4, 1179.0], [4.5, 1179.0], [4.6, 1179.0], [4.7, 1179.0], [4.8, 1179.0], [4.9, 1179.0], [5.0, 1202.0], [5.1, 1202.0], [5.2, 1202.0], [5.3, 1202.0], [5.4, 1202.0], [5.5, 1202.0], [5.6, 1202.0], [5.7, 1202.0], [5.8, 1202.0], [5.9, 1202.0], [6.0, 1215.0], [6.1, 1215.0], [6.2, 1215.0], [6.3, 1215.0], [6.4, 1215.0], [6.5, 1215.0], [6.6, 1215.0], [6.7, 1215.0], [6.8, 1215.0], [6.9, 1215.0], [7.0, 1221.0], [7.1, 1221.0], [7.2, 1221.0], [7.3, 1221.0], [7.4, 1221.0], [7.5, 1221.0], [7.6, 1221.0], [7.7, 1221.0], [7.8, 1221.0], [7.9, 1221.0], [8.0, 1234.0], [8.1, 1234.0], [8.2, 1234.0], [8.3, 1234.0], [8.4, 1234.0], [8.5, 1234.0], [8.6, 1234.0], [8.7, 1234.0], [8.8, 1234.0], [8.9, 1234.0], [9.0, 1243.0], [9.1, 1243.0], [9.2, 1243.0], [9.3, 1243.0], [9.4, 1243.0], [9.5, 1243.0], [9.6, 1243.0], [9.7, 1243.0], [9.8, 1243.0], [9.9, 1243.0], [10.0, 1245.0], [10.1, 1245.0], [10.2, 1245.0], [10.3, 1245.0], [10.4, 1245.0], [10.5, 1245.0], [10.6, 1245.0], [10.7, 1245.0], [10.8, 1245.0], [10.9, 1245.0], [11.0, 1246.0], [11.1, 1246.0], [11.2, 1246.0], [11.3, 1246.0], [11.4, 1246.0], [11.5, 1246.0], [11.6, 1246.0], [11.7, 1246.0], [11.8, 1246.0], [11.9, 1246.0], [12.0, 1253.0], [12.1, 1253.0], [12.2, 1253.0], [12.3, 1253.0], [12.4, 1253.0], [12.5, 1253.0], [12.6, 1253.0], [12.7, 1253.0], [12.8, 1253.0], [12.9, 1253.0], [13.0, 1257.0], [13.1, 1257.0], [13.2, 1257.0], [13.3, 1257.0], [13.4, 1257.0], [13.5, 1257.0], [13.6, 1257.0], [13.7, 1257.0], [13.8, 1257.0], [13.9, 1257.0], [14.0, 1258.0], [14.1, 1258.0], [14.2, 1258.0], [14.3, 1258.0], [14.4, 1258.0], [14.5, 1258.0], [14.6, 1258.0], [14.7, 1258.0], [14.8, 1258.0], [14.9, 1258.0], [15.0, 1283.0], [15.1, 1283.0], [15.2, 1283.0], [15.3, 1283.0], [15.4, 1283.0], [15.5, 1283.0], [15.6, 1283.0], [15.7, 1283.0], [15.8, 1283.0], [15.9, 1283.0], [16.0, 1295.0], [16.1, 1295.0], [16.2, 1295.0], [16.3, 1295.0], [16.4, 1295.0], [16.5, 1295.0], [16.6, 1295.0], [16.7, 1295.0], [16.8, 1295.0], [16.9, 1295.0], [17.0, 1308.0], [17.1, 1308.0], [17.2, 1308.0], [17.3, 1308.0], [17.4, 1308.0], [17.5, 1308.0], [17.6, 1308.0], [17.7, 1308.0], [17.8, 1308.0], [17.9, 1308.0], [18.0, 1311.0], [18.1, 1311.0], [18.2, 1311.0], [18.3, 1311.0], [18.4, 1311.0], [18.5, 1311.0], [18.6, 1311.0], [18.7, 1311.0], [18.8, 1311.0], [18.9, 1311.0], [19.0, 1312.0], [19.1, 1312.0], [19.2, 1312.0], [19.3, 1312.0], [19.4, 1312.0], [19.5, 1312.0], [19.6, 1312.0], [19.7, 1312.0], [19.8, 1312.0], [19.9, 1312.0], [20.0, 1314.0], [20.1, 1314.0], [20.2, 1314.0], [20.3, 1314.0], [20.4, 1314.0], [20.5, 1314.0], [20.6, 1314.0], [20.7, 1314.0], [20.8, 1314.0], [20.9, 1314.0], [21.0, 1340.0], [21.1, 1340.0], [21.2, 1340.0], [21.3, 1340.0], [21.4, 1340.0], [21.5, 1340.0], [21.6, 1340.0], [21.7, 1340.0], [21.8, 1340.0], [21.9, 1340.0], [22.0, 1343.0], [22.1, 1343.0], [22.2, 1343.0], [22.3, 1343.0], [22.4, 1343.0], [22.5, 1343.0], [22.6, 1343.0], [22.7, 1343.0], [22.8, 1343.0], [22.9, 1343.0], [23.0, 1344.0], [23.1, 1344.0], [23.2, 1344.0], [23.3, 1344.0], [23.4, 1344.0], [23.5, 1344.0], [23.6, 1344.0], [23.7, 1344.0], [23.8, 1344.0], [23.9, 1344.0], [24.0, 1347.0], [24.1, 1347.0], [24.2, 1347.0], [24.3, 1347.0], [24.4, 1347.0], [24.5, 1347.0], [24.6, 1347.0], [24.7, 1347.0], [24.8, 1347.0], [24.9, 1347.0], [25.0, 1441.0], [25.1, 1441.0], [25.2, 1441.0], [25.3, 1441.0], [25.4, 1441.0], [25.5, 1441.0], [25.6, 1441.0], [25.7, 1441.0], [25.8, 1441.0], [25.9, 1441.0], [26.0, 1450.0], [26.1, 1450.0], [26.2, 1450.0], [26.3, 1450.0], [26.4, 1450.0], [26.5, 1450.0], [26.6, 1450.0], [26.7, 1450.0], [26.8, 1450.0], [26.9, 1450.0], [27.0, 1451.0], [27.1, 1451.0], [27.2, 1451.0], [27.3, 1451.0], [27.4, 1451.0], [27.5, 1451.0], [27.6, 1451.0], [27.7, 1451.0], [27.8, 1451.0], [27.9, 1451.0], [28.0, 1452.0], [28.1, 1452.0], [28.2, 1452.0], [28.3, 1452.0], [28.4, 1452.0], [28.5, 1452.0], [28.6, 1452.0], [28.7, 1452.0], [28.8, 1452.0], [28.9, 1452.0], [29.0, 1493.0], [29.1, 1493.0], [29.2, 1493.0], [29.3, 1493.0], [29.4, 1493.0], [29.5, 1493.0], [29.6, 1493.0], [29.7, 1493.0], [29.8, 1493.0], [29.9, 1493.0], [30.0, 1569.0], [30.1, 1569.0], [30.2, 1569.0], [30.3, 1569.0], [30.4, 1569.0], [30.5, 1569.0], [30.6, 1569.0], [30.7, 1569.0], [30.8, 1569.0], [30.9, 1569.0], [31.0, 1612.0], [31.1, 1612.0], [31.2, 1612.0], [31.3, 1612.0], [31.4, 1612.0], [31.5, 1612.0], [31.6, 1612.0], [31.7, 1612.0], [31.8, 1612.0], [31.9, 1612.0], [32.0, 1632.0], [32.1, 1632.0], [32.2, 1632.0], [32.3, 1632.0], [32.4, 1632.0], [32.5, 1632.0], [32.6, 1632.0], [32.7, 1632.0], [32.8, 1632.0], [32.9, 1632.0], [33.0, 1635.0], [33.1, 1635.0], [33.2, 1635.0], [33.3, 1635.0], [33.4, 1635.0], [33.5, 1635.0], [33.6, 1635.0], [33.7, 1635.0], [33.8, 1635.0], [33.9, 1635.0], [34.0, 1643.0], [34.1, 1643.0], [34.2, 1643.0], [34.3, 1643.0], [34.4, 1643.0], [34.5, 1643.0], [34.6, 1643.0], [34.7, 1643.0], [34.8, 1643.0], [34.9, 1643.0], [35.0, 1644.0], [35.1, 1644.0], [35.2, 1644.0], [35.3, 1644.0], [35.4, 1644.0], [35.5, 1644.0], [35.6, 1644.0], [35.7, 1644.0], [35.8, 1644.0], [35.9, 1644.0], [36.0, 1699.0], [36.1, 1699.0], [36.2, 1699.0], [36.3, 1699.0], [36.4, 1699.0], [36.5, 1699.0], [36.6, 1699.0], [36.7, 1699.0], [36.8, 1699.0], [36.9, 1699.0], [37.0, 1757.0], [37.1, 1757.0], [37.2, 1757.0], [37.3, 1757.0], [37.4, 1757.0], [37.5, 1757.0], [37.6, 1757.0], [37.7, 1757.0], [37.8, 1757.0], [37.9, 1757.0], [38.0, 1757.0], [38.1, 1757.0], [38.2, 1757.0], [38.3, 1757.0], [38.4, 1757.0], [38.5, 1757.0], [38.6, 1757.0], [38.7, 1757.0], [38.8, 1757.0], [38.9, 1757.0], [39.0, 1768.0], [39.1, 1768.0], [39.2, 1768.0], [39.3, 1768.0], [39.4, 1768.0], [39.5, 1768.0], [39.6, 1768.0], [39.7, 1768.0], [39.8, 1768.0], [39.9, 1768.0], [40.0, 1816.0], [40.1, 1816.0], [40.2, 1816.0], [40.3, 1816.0], [40.4, 1816.0], [40.5, 1816.0], [40.6, 1816.0], [40.7, 1816.0], [40.8, 1816.0], [40.9, 1816.0], [41.0, 1826.0], [41.1, 1826.0], [41.2, 1826.0], [41.3, 1826.0], [41.4, 1826.0], [41.5, 1826.0], [41.6, 1826.0], [41.7, 1826.0], [41.8, 1826.0], [41.9, 1826.0], [42.0, 1845.0], [42.1, 1845.0], [42.2, 1845.0], [42.3, 1845.0], [42.4, 1845.0], [42.5, 1845.0], [42.6, 1845.0], [42.7, 1845.0], [42.8, 1845.0], [42.9, 1845.0], [43.0, 1857.0], [43.1, 1857.0], [43.2, 1857.0], [43.3, 1857.0], [43.4, 1857.0], [43.5, 1857.0], [43.6, 1857.0], [43.7, 1857.0], [43.8, 1857.0], [43.9, 1857.0], [44.0, 1862.0], [44.1, 1862.0], [44.2, 1862.0], [44.3, 1862.0], [44.4, 1862.0], [44.5, 1862.0], [44.6, 1862.0], [44.7, 1862.0], [44.8, 1862.0], [44.9, 1862.0], [45.0, 1906.0], [45.1, 1906.0], [45.2, 1906.0], [45.3, 1906.0], [45.4, 1906.0], [45.5, 1906.0], [45.6, 1906.0], [45.7, 1906.0], [45.8, 1906.0], [45.9, 1906.0], [46.0, 1924.0], [46.1, 1924.0], [46.2, 1924.0], [46.3, 1924.0], [46.4, 1924.0], [46.5, 1924.0], [46.6, 1924.0], [46.7, 1924.0], [46.8, 1924.0], [46.9, 1924.0], [47.0, 1953.0], [47.1, 1953.0], [47.2, 1953.0], [47.3, 1953.0], [47.4, 1953.0], [47.5, 1953.0], [47.6, 1953.0], [47.7, 1953.0], [47.8, 1953.0], [47.9, 1953.0], [48.0, 1965.0], [48.1, 1965.0], [48.2, 1965.0], [48.3, 1965.0], [48.4, 1965.0], [48.5, 1965.0], [48.6, 1965.0], [48.7, 1965.0], [48.8, 1965.0], [48.9, 1965.0], [49.0, 1966.0], [49.1, 1966.0], [49.2, 1966.0], [49.3, 1966.0], [49.4, 1966.0], [49.5, 1966.0], [49.6, 1966.0], [49.7, 1966.0], [49.8, 1966.0], [49.9, 1966.0], [50.0, 1968.0], [50.1, 1968.0], [50.2, 1968.0], [50.3, 1968.0], [50.4, 1968.0], [50.5, 1968.0], [50.6, 1968.0], [50.7, 1968.0], [50.8, 1968.0], [50.9, 1968.0], [51.0, 1969.0], [51.1, 1969.0], [51.2, 1969.0], [51.3, 1969.0], [51.4, 1969.0], [51.5, 1969.0], [51.6, 1969.0], [51.7, 1969.0], [51.8, 1969.0], [51.9, 1969.0], [52.0, 1970.0], [52.1, 1970.0], [52.2, 1970.0], [52.3, 1970.0], [52.4, 1970.0], [52.5, 1970.0], [52.6, 1970.0], [52.7, 1970.0], [52.8, 1970.0], [52.9, 1970.0], [53.0, 1981.0], [53.1, 1981.0], [53.2, 1981.0], [53.3, 1981.0], [53.4, 1981.0], [53.5, 1981.0], [53.6, 1981.0], [53.7, 1981.0], [53.8, 1981.0], [53.9, 1981.0], [54.0, 2002.0], [54.1, 2002.0], [54.2, 2002.0], [54.3, 2002.0], [54.4, 2002.0], [54.5, 2002.0], [54.6, 2002.0], [54.7, 2002.0], [54.8, 2002.0], [54.9, 2002.0], [55.0, 2022.0], [55.1, 2022.0], [55.2, 2022.0], [55.3, 2022.0], [55.4, 2022.0], [55.5, 2022.0], [55.6, 2022.0], [55.7, 2022.0], [55.8, 2022.0], [55.9, 2022.0], [56.0, 10573.0], [56.1, 10573.0], [56.2, 10573.0], [56.3, 10573.0], [56.4, 10573.0], [56.5, 10573.0], [56.6, 10573.0], [56.7, 10573.0], [56.8, 10573.0], [56.9, 10573.0], [57.0, 10576.0], [57.1, 10576.0], [57.2, 10576.0], [57.3, 10576.0], [57.4, 10576.0], [57.5, 10576.0], [57.6, 10576.0], [57.7, 10576.0], [57.8, 10576.0], [57.9, 10576.0], [58.0, 10645.0], [58.1, 10645.0], [58.2, 10645.0], [58.3, 10645.0], [58.4, 10645.0], [58.5, 10645.0], [58.6, 10645.0], [58.7, 10645.0], [58.8, 10645.0], [58.9, 10645.0], [59.0, 10650.0], [59.1, 10650.0], [59.2, 10650.0], [59.3, 10650.0], [59.4, 10650.0], [59.5, 10650.0], [59.6, 10650.0], [59.7, 10650.0], [59.8, 10650.0], [59.9, 10650.0], [60.0, 10654.0], [60.1, 10654.0], [60.2, 10654.0], [60.3, 10654.0], [60.4, 10654.0], [60.5, 10654.0], [60.6, 10654.0], [60.7, 10654.0], [60.8, 10654.0], [60.9, 10654.0], [61.0, 10663.0], [61.1, 10663.0], [61.2, 10663.0], [61.3, 10663.0], [61.4, 10663.0], [61.5, 10663.0], [61.6, 10663.0], [61.7, 10663.0], [61.8, 10663.0], [61.9, 10663.0], [62.0, 10703.0], [62.1, 10703.0], [62.2, 10703.0], [62.3, 10703.0], [62.4, 10703.0], [62.5, 10703.0], [62.6, 10703.0], [62.7, 10703.0], [62.8, 10703.0], [62.9, 10703.0], [63.0, 10707.0], [63.1, 10707.0], [63.2, 10707.0], [63.3, 10707.0], [63.4, 10707.0], [63.5, 10707.0], [63.6, 10707.0], [63.7, 10707.0], [63.8, 10707.0], [63.9, 10707.0], [64.0, 10722.0], [64.1, 10722.0], [64.2, 10722.0], [64.3, 10722.0], [64.4, 10722.0], [64.5, 10722.0], [64.6, 10722.0], [64.7, 10722.0], [64.8, 10722.0], [64.9, 10722.0], [65.0, 47094.0], [65.1, 47094.0], [65.2, 47094.0], [65.3, 47094.0], [65.4, 47094.0], [65.5, 47094.0], [65.6, 47094.0], [65.7, 47094.0], [65.8, 47094.0], [65.9, 47094.0], [66.0, 47110.0], [66.1, 47110.0], [66.2, 47110.0], [66.3, 47110.0], [66.4, 47110.0], [66.5, 47110.0], [66.6, 47110.0], [66.7, 47110.0], [66.8, 47110.0], [66.9, 47110.0], [67.0, 47113.0], [67.1, 47113.0], [67.2, 47113.0], [67.3, 47113.0], [67.4, 47113.0], [67.5, 47113.0], [67.6, 47113.0], [67.7, 47113.0], [67.8, 47113.0], [67.9, 47113.0], [68.0, 47169.0], [68.1, 47169.0], [68.2, 47169.0], [68.3, 47169.0], [68.4, 47169.0], [68.5, 47169.0], [68.6, 47169.0], [68.7, 47169.0], [68.8, 47169.0], [68.9, 47169.0], [69.0, 47184.0], [69.1, 47184.0], [69.2, 47184.0], [69.3, 47184.0], [69.4, 47184.0], [69.5, 47184.0], [69.6, 47184.0], [69.7, 47184.0], [69.8, 47184.0], [69.9, 47184.0], [70.0, 47239.0], [70.1, 47239.0], [70.2, 47239.0], [70.3, 47239.0], [70.4, 47239.0], [70.5, 47239.0], [70.6, 47239.0], [70.7, 47239.0], [70.8, 47239.0], [70.9, 47239.0], [71.0, 47288.0], [71.1, 47288.0], [71.2, 47288.0], [71.3, 47288.0], [71.4, 47288.0], [71.5, 47288.0], [71.6, 47288.0], [71.7, 47288.0], [71.8, 47288.0], [71.9, 47288.0], [72.0, 47290.0], [72.1, 47290.0], [72.2, 47290.0], [72.3, 47290.0], [72.4, 47290.0], [72.5, 47290.0], [72.6, 47290.0], [72.7, 47290.0], [72.8, 47290.0], [72.9, 47290.0], [73.0, 47294.0], [73.1, 47294.0], [73.2, 47294.0], [73.3, 47294.0], [73.4, 47294.0], [73.5, 47294.0], [73.6, 47294.0], [73.7, 47294.0], [73.8, 47294.0], [73.9, 47294.0], [74.0, 47328.0], [74.1, 47328.0], [74.2, 47328.0], [74.3, 47328.0], [74.4, 47328.0], [74.5, 47328.0], [74.6, 47328.0], [74.7, 47328.0], [74.8, 47328.0], [74.9, 47328.0], [75.0, 47384.0], [75.1, 47384.0], [75.2, 47384.0], [75.3, 47384.0], [75.4, 47384.0], [75.5, 47384.0], [75.6, 47384.0], [75.7, 47384.0], [75.8, 47384.0], [75.9, 47384.0], [76.0, 47405.0], [76.1, 47405.0], [76.2, 47405.0], [76.3, 47405.0], [76.4, 47405.0], [76.5, 47405.0], [76.6, 47405.0], [76.7, 47405.0], [76.8, 47405.0], [76.9, 47405.0], [77.0, 47406.0], [77.1, 47406.0], [77.2, 47406.0], [77.3, 47406.0], [77.4, 47406.0], [77.5, 47406.0], [77.6, 47406.0], [77.7, 47406.0], [77.8, 47406.0], [77.9, 47406.0], [78.0, 47421.0], [78.1, 47421.0], [78.2, 47421.0], [78.3, 47421.0], [78.4, 47421.0], [78.5, 47421.0], [78.6, 47421.0], [78.7, 47421.0], [78.8, 47421.0], [78.9, 47421.0], [79.0, 47449.0], [79.1, 47449.0], [79.2, 47449.0], [79.3, 47449.0], [79.4, 47449.0], [79.5, 47449.0], [79.6, 47449.0], [79.7, 47449.0], [79.8, 47449.0], [79.9, 47449.0], [80.0, 47469.0], [80.1, 47469.0], [80.2, 47469.0], [80.3, 47469.0], [80.4, 47469.0], [80.5, 47469.0], [80.6, 47469.0], [80.7, 47469.0], [80.8, 47469.0], [80.9, 47469.0], [81.0, 47476.0], [81.1, 47476.0], [81.2, 47476.0], [81.3, 47476.0], [81.4, 47476.0], [81.5, 47476.0], [81.6, 47476.0], [81.7, 47476.0], [81.8, 47476.0], [81.9, 47476.0], [82.0, 47519.0], [82.1, 47519.0], [82.2, 47519.0], [82.3, 47519.0], [82.4, 47519.0], [82.5, 47519.0], [82.6, 47519.0], [82.7, 47519.0], [82.8, 47519.0], [82.9, 47519.0], [83.0, 47603.0], [83.1, 47603.0], [83.2, 47603.0], [83.3, 47603.0], [83.4, 47603.0], [83.5, 47603.0], [83.6, 47603.0], [83.7, 47603.0], [83.8, 47603.0], [83.9, 47603.0], [84.0, 47605.0], [84.1, 47605.0], [84.2, 47605.0], [84.3, 47605.0], [84.4, 47605.0], [84.5, 47605.0], [84.6, 47605.0], [84.7, 47605.0], [84.8, 47605.0], [84.9, 47605.0], [85.0, 47633.0], [85.1, 47633.0], [85.2, 47633.0], [85.3, 47633.0], [85.4, 47633.0], [85.5, 47633.0], [85.6, 47633.0], [85.7, 47633.0], [85.8, 47633.0], [85.9, 47633.0], [86.0, 47634.0], [86.1, 47634.0], [86.2, 47634.0], [86.3, 47634.0], [86.4, 47634.0], [86.5, 47634.0], [86.6, 47634.0], [86.7, 47634.0], [86.8, 47634.0], [86.9, 47634.0], [87.0, 47634.0], [87.1, 47634.0], [87.2, 47634.0], [87.3, 47634.0], [87.4, 47634.0], [87.5, 47634.0], [87.6, 47634.0], [87.7, 47634.0], [87.8, 47634.0], [87.9, 47634.0], [88.0, 47691.0], [88.1, 47691.0], [88.2, 47691.0], [88.3, 47691.0], [88.4, 47691.0], [88.5, 47691.0], [88.6, 47691.0], [88.7, 47691.0], [88.8, 47691.0], [88.9, 47691.0], [89.0, 47728.0], [89.1, 47728.0], [89.2, 47728.0], [89.3, 47728.0], [89.4, 47728.0], [89.5, 47728.0], [89.6, 47728.0], [89.7, 47728.0], [89.8, 47728.0], [89.9, 47728.0], [90.0, 47748.0], [90.1, 47748.0], [90.2, 47748.0], [90.3, 47748.0], [90.4, 47748.0], [90.5, 47748.0], [90.6, 47748.0], [90.7, 47748.0], [90.8, 47748.0], [90.9, 47748.0], [91.0, 47792.0], [91.1, 47792.0], [91.2, 47792.0], [91.3, 47792.0], [91.4, 47792.0], [91.5, 47792.0], [91.6, 47792.0], [91.7, 47792.0], [91.8, 47792.0], [91.9, 47792.0], [92.0, 47831.0], [92.1, 47831.0], [92.2, 47831.0], [92.3, 47831.0], [92.4, 47831.0], [92.5, 47831.0], [92.6, 47831.0], [92.7, 47831.0], [92.8, 47831.0], [92.9, 47831.0], [93.0, 47837.0], [93.1, 47837.0], [93.2, 47837.0], [93.3, 47837.0], [93.4, 47837.0], [93.5, 47837.0], [93.6, 47837.0], [93.7, 47837.0], [93.8, 47837.0], [93.9, 47837.0], [94.0, 47850.0], [94.1, 47850.0], [94.2, 47850.0], [94.3, 47850.0], [94.4, 47850.0], [94.5, 47850.0], [94.6, 47850.0], [94.7, 47850.0], [94.8, 47850.0], [94.9, 47850.0], [95.0, 47885.0], [95.1, 47885.0], [95.2, 47885.0], [95.3, 47885.0], [95.4, 47885.0], [95.5, 47885.0], [95.6, 47885.0], [95.7, 47885.0], [95.8, 47885.0], [95.9, 47885.0], [96.0, 47895.0], [96.1, 47895.0], [96.2, 47895.0], [96.3, 47895.0], [96.4, 47895.0], [96.5, 47895.0], [96.6, 47895.0], [96.7, 47895.0], [96.8, 47895.0], [96.9, 47895.0], [97.0, 47895.0], [97.1, 47895.0], [97.2, 47895.0], [97.3, 47895.0], [97.4, 47895.0], [97.5, 47895.0], [97.6, 47895.0], [97.7, 47895.0], [97.8, 47895.0], [97.9, 47895.0], [98.0, 47955.0], [98.1, 47955.0], [98.2, 47955.0], [98.3, 47955.0], [98.4, 47955.0], [98.5, 47955.0], [98.6, 47955.0], [98.7, 47955.0], [98.8, 47955.0], [98.9, 47955.0], [99.0, 48043.0], [99.1, 48043.0], [99.2, 48043.0], [99.3, 48043.0], [99.4, 48043.0], [99.5, 48043.0], [99.6, 48043.0], [99.7, 48043.0], [99.8, 48043.0], [99.9, 48043.0]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 100.0, "series": [{"data": [[0.0, 100.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[30700.0, 8.0], [30600.0, 7.0], [31700.0, 2.0], [30800.0, 5.0], [37200.0, 5.0], [37000.0, 1.0], [37700.0, 1.0], [37400.0, 2.0], [41200.0, 1.0], [43200.0, 1.0], [47100.0, 7.0], [46900.0, 9.0], [47000.0, 7.0], [46700.0, 1.0], [46200.0, 2.0], [47200.0, 6.0], [47700.0, 4.0], [47800.0, 2.0], [47600.0, 3.0], [47900.0, 2.0], [47300.0, 3.0], [47400.0, 1.0], [48100.0, 1.0], [47500.0, 1.0], [49900.0, 1.0], [51100.0, 1.0], [49300.0, 1.0], [52800.0, 2.0], [51700.0, 1.0], [52100.0, 1.0], [52200.0, 1.0], [52400.0, 1.0], [54200.0, 2.0], [53400.0, 1.0], [53500.0, 1.0], [53900.0, 1.0], [80400.0, 1.0], [80900.0, 1.0], [81200.0, 1.0], [81400.0, 1.0]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[2100.0, 4.0], [2200.0, 1.0], [2300.0, 1.0], [2400.0, 4.0], [2500.0, 5.0], [2600.0, 22.0], [2700.0, 4.0], [12000.0, 2.0], [12100.0, 4.0], [12200.0, 3.0], [49100.0, 1.0], [49300.0, 10.0], [49200.0, 8.0], [49400.0, 11.0], [49500.0, 5.0], [1400.0, 5.0], [1500.0, 2.0], [1600.0, 3.0], [1800.0, 4.0], [1900.0, 1.0]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[2100.0, 2.0], [600.0, 7.0], [700.0, 9.0], [200.0, 4.0], [800.0, 3.0], [900.0, 1.0], [1000.0, 1.0], [300.0, 1.0], [1200.0, 1.0], [1300.0, 9.0], [1400.0, 10.0], [1500.0, 6.0], [100.0, 5.0], [400.0, 5.0], [1600.0, 7.0], [1700.0, 7.0], [1800.0, 4.0], [1900.0, 7.0], [500.0, 5.0], [2000.0, 6.0]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[10500.0, 2.0], [10700.0, 3.0], [10600.0, 4.0], [1100.0, 5.0], [1200.0, 12.0], [1300.0, 8.0], [1400.0, 5.0], [1500.0, 1.0], [1600.0, 6.0], [1700.0, 3.0], [1800.0, 5.0], [1900.0, 9.0], [2000.0, 2.0], [47000.0, 1.0], [47100.0, 4.0], [47600.0, 6.0], [47700.0, 3.0], [47200.0, 4.0], [47400.0, 6.0], [47900.0, 1.0], [47500.0, 1.0], [48000.0, 1.0], [47300.0, 2.0], [47800.0, 6.0]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 81400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 81.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 158.0, "series": [{"data": [[0.0, 115.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 81.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 158.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 146.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 51.76315789473685, "minX": 1.57347522E12, "maxY": 98.69658119658119, "series": [{"data": [[1.57347522E12, 98.69658119658119], [1.57347528E12, 51.76315789473685]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347528E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.1099999999999997, "minX": 0.0, "maxY": 81021.5, "series": [{"data": [[0.0, 1.1099999999999997]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[0.0, 1.1099999999999997]], "isOverall": false, "label": "character_request-0-Aggregated", "isController": false}, {"data": [[33.0, 30727.8], [32.0, 30653.0], [37.0, 30676.0], [39.0, 41695.43749999999], [38.0, 30790.0], [41.0, 81021.5], [43.0, 49935.0], [58.0, 45884.57142857143], [65.0, 47244.0], [64.0, 47200.0], [71.0, 46967.0], [70.0, 47303.0], [69.0, 46983.0], [68.0, 47502.0], [75.0, 47611.333333333336], [73.0, 47300.0], [78.0, 47782.0], [76.0, 47067.0], [83.0, 47151.0], [82.0, 47146.0], [81.0, 47016.0], [87.0, 47674.0], [86.0, 47514.0], [84.0, 47099.0], [89.0, 47207.0], [88.0, 47602.0], [95.0, 37136.5], [93.0, 37277.0], [92.0, 42199.833333333336], [98.0, 47455.5], [97.0, 44083.333333333336], [96.0, 42248.5], [100.0, 44350.2], [15.0, 53799.75], [19.0, 52804.0], [23.0, 30775.0], [26.0, 30619.0], [29.0, 30775.5], [30.0, 30752.5]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[61.62999999999998, 44723.3]], "isOverall": false, "label": "character_request-Aggregated", "isController": false}, {"data": [[58.0, 49438.0], [65.0, 49433.25], [64.0, 49248.5], [71.0, 49335.0], [74.0, 49245.0], [76.0, 49216.0], [82.0, 49497.0], [81.0, 49380.25], [87.0, 49434.0], [90.0, 49434.5], [92.0, 49419.71428571429], [98.0, 49316.0], [97.0, 49238.0], [100.0, 3681.0615384615385]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[93.02000000000002, 19676.55]], "isOverall": false, "label": "login_request-Aggregated", "isController": false}, {"data": [[58.0, 1910.6666666666667], [65.0, 1681.75], [64.0, 1931.5], [71.0, 1899.3333333333333], [74.0, 2005.0], [76.0, 2102.0], [82.0, 1703.0], [81.0, 1891.25], [87.0, 1854.5], [90.0, 1858.0], [92.0, 1788.0], [98.0, 1830.0], [97.0, 1943.0], [100.0, 879.5384615384615]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[93.02000000000002, 1216.4200000000005]], "isOverall": false, "label": "login_request-0-Aggregated", "isController": false}, {"data": [[58.0, 47527.0], [65.0, 47750.75], [64.0, 47316.5], [71.0, 47435.333333333336], [74.0, 47239.0], [76.0, 47113.0], [82.0, 47793.0], [81.0, 47488.75], [87.0, 47579.5], [90.0, 47576.5], [92.0, 47631.28571428572], [98.0, 47485.333333333336], [97.0, 47294.0], [100.0, 2801.0461538461536]], "isOverall": false, "label": "login_request-1", "isController": false}, {"data": [[93.02000000000002, 18459.649999999998]], "isOverall": false, "label": "login_request-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 212.66666666666666, "minX": 1.57347522E12, "maxY": 1.5081517183333334E7, "series": [{"data": [[1.57347522E12, 1380451.9], [1.57347528E12, 1.5081517183333334E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57347522E12, 1062.25], [1.57347528E12, 212.66666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347528E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.1020408163265303, "minX": 1.57347522E12, "maxY": 49382.45714285714, "series": [{"data": [[1.57347522E12, 1.5], [1.57347528E12, 1.1020408163265303]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[1.57347522E12, 31744.5], [1.57347528E12, 44988.17346938778]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[1.57347522E12, 3681.0615384615385], [1.57347528E12, 49382.45714285714]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[1.57347522E12, 1216.4200000000005]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[1.57347522E12, 2801.0461538461536], [1.57347528E12, 47539.91428571428]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347528E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57347522E12, "maxY": 5790.0, "series": [{"data": [[1.57347522E12, 0.0], [1.57347528E12, 0.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[1.57347522E12, 5790.0], [1.57347528E12, 5277.561224489794]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[1.57347522E12, 879.4461538461537], [1.57347528E12, 1841.9428571428568]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[1.57347522E12, 1216.32]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[1.57347522E12, 2800.5384615384614], [1.57347528E12, 0.0]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347528E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57347522E12, "maxY": 18.83076923076923, "series": [{"data": [[1.57347522E12, 0.0], [1.57347528E12, 0.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[1.57347522E12, 0.0], [1.57347528E12, 0.8061224489795915]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[1.57347522E12, 18.83076923076923], [1.57347528E12, 0.45714285714285713]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[1.57347522E12, 12.400000000000007]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[1.57347522E12, 0.0], [1.57347528E12, 0.08571428571428573]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347528E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57347522E12, "maxY": 81405.0, "series": [{"data": [[1.57347522E12, 31759.0], [1.57347528E12, 81405.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57347522E12, 1.0], [1.57347528E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57347522E12, 2716.0], [1.57347528E12, 52461.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57347522E12, 24897.300000000112], [1.57347528E12, 81382.53]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57347522E12, 11051.5], [1.57347528E12, 54196.95]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347528E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 49935.0, "series": [{"data": [[4.0, 11308.0], [2.0, 7.0], [8.0, 26084.0], [37.0, 744.0], [78.0, 1613.5], [83.0, 2005.0], [40.0, 0.0], [180.0, 0.0], [6.0, 40468.5], [14.0, 5540.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 49935.0], [40.0, 30764.5], [180.0, 47603.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 180.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 49934.0, "series": [{"data": [[4.0, 2995.5], [2.0, 0.0], [8.0, 8318.5], [37.0, 707.0], [78.0, 1447.0], [83.0, 1387.0], [40.0, 0.0], [180.0, 0.0], [6.0, 23349.0], [14.0, 953.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 49934.0], [40.0, 0.0], [180.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 180.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.216666666666667, "minX": 1.57347522E12, "maxY": 6.116666666666666, "series": [{"data": [[1.57347522E12, 6.116666666666666], [1.57347528E12, 2.216666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347528E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.57347522E12, "maxY": 2.4166666666666665, "series": [{"data": [[1.57347522E12, 2.2333333333333334], [1.57347528E12, 2.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.57347522E12, 1.6666666666666667]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.57347528E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.57347528E12, 2.4166666666666665]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347528E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.57347522E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57347522E12, 1.0833333333333333]], "isOverall": false, "label": "login_request-1-success", "isController": false}, {"data": [[1.57347528E12, 0.5833333333333334]], "isOverall": false, "label": "login_request-1-failure", "isController": false}, {"data": [[1.57347522E12, 0.03333333333333333], [1.57347528E12, 0.36666666666666664]], "isOverall": false, "label": "character_request-success", "isController": false}, {"data": [[1.57347528E12, 1.2666666666666666]], "isOverall": false, "label": "character_request-failure", "isController": false}, {"data": [[1.57347522E12, 1.0833333333333333]], "isOverall": false, "label": "login_request-success", "isController": false}, {"data": [[1.57347528E12, 0.5833333333333334]], "isOverall": false, "label": "login_request-failure", "isController": false}, {"data": [[1.57347522E12, 0.03333333333333333], [1.57347528E12, 1.6333333333333333]], "isOverall": false, "label": "character_request-0-success", "isController": false}, {"data": [[1.57347522E12, 1.6666666666666667]], "isOverall": false, "label": "login_request-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347528E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.57347522E12, "maxY": 3.9, "series": [{"data": [[1.57347522E12, 3.9], [1.57347528E12, 2.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.57347528E12, 2.433333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347528E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

