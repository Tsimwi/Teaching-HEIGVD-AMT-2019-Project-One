/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2308.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 2.0], [98.6, 2.0], [98.7, 2.0], [98.8, 2.0], [98.9, 2.0], [99.0, 27.0], [99.1, 27.0], [99.2, 27.0], [99.3, 27.0], [99.4, 27.0], [99.5, 27.0], [99.6, 27.0], [99.7, 27.0], [99.8, 27.0], [99.9, 27.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[0.0, 481.0], [0.1, 481.0], [0.2, 481.0], [0.3, 481.0], [0.4, 481.0], [0.5, 481.0], [0.6, 481.0], [0.7, 481.0], [0.8, 481.0], [0.9, 481.0], [1.0, 516.0], [1.1, 516.0], [1.2, 516.0], [1.3, 516.0], [1.4, 516.0], [1.5, 516.0], [1.6, 516.0], [1.7, 516.0], [1.8, 516.0], [1.9, 516.0], [2.0, 530.0], [2.1, 530.0], [2.2, 530.0], [2.3, 530.0], [2.4, 530.0], [2.5, 530.0], [2.6, 530.0], [2.7, 530.0], [2.8, 530.0], [2.9, 530.0], [3.0, 531.0], [3.1, 531.0], [3.2, 531.0], [3.3, 531.0], [3.4, 531.0], [3.5, 531.0], [3.6, 531.0], [3.7, 531.0], [3.8, 531.0], [3.9, 531.0], [4.0, 532.0], [4.1, 532.0], [4.2, 532.0], [4.3, 532.0], [4.4, 532.0], [4.5, 532.0], [4.6, 532.0], [4.7, 532.0], [4.8, 532.0], [4.9, 532.0], [5.0, 552.0], [5.1, 552.0], [5.2, 552.0], [5.3, 552.0], [5.4, 552.0], [5.5, 552.0], [5.6, 552.0], [5.7, 552.0], [5.8, 552.0], [5.9, 552.0], [6.0, 562.0], [6.1, 562.0], [6.2, 562.0], [6.3, 562.0], [6.4, 562.0], [6.5, 562.0], [6.6, 562.0], [6.7, 562.0], [6.8, 562.0], [6.9, 562.0], [7.0, 567.0], [7.1, 567.0], [7.2, 567.0], [7.3, 567.0], [7.4, 567.0], [7.5, 567.0], [7.6, 567.0], [7.7, 567.0], [7.8, 567.0], [7.9, 567.0], [8.0, 598.0], [8.1, 598.0], [8.2, 598.0], [8.3, 598.0], [8.4, 598.0], [8.5, 598.0], [8.6, 598.0], [8.7, 598.0], [8.8, 598.0], [8.9, 598.0], [9.0, 606.0], [9.1, 606.0], [9.2, 606.0], [9.3, 606.0], [9.4, 606.0], [9.5, 606.0], [9.6, 606.0], [9.7, 606.0], [9.8, 606.0], [9.9, 606.0], [10.0, 622.0], [10.1, 622.0], [10.2, 622.0], [10.3, 622.0], [10.4, 622.0], [10.5, 622.0], [10.6, 622.0], [10.7, 622.0], [10.8, 622.0], [10.9, 622.0], [11.0, 632.0], [11.1, 632.0], [11.2, 632.0], [11.3, 632.0], [11.4, 632.0], [11.5, 632.0], [11.6, 632.0], [11.7, 632.0], [11.8, 632.0], [11.9, 632.0], [12.0, 642.0], [12.1, 642.0], [12.2, 642.0], [12.3, 642.0], [12.4, 642.0], [12.5, 642.0], [12.6, 642.0], [12.7, 642.0], [12.8, 642.0], [12.9, 642.0], [13.0, 644.0], [13.1, 644.0], [13.2, 644.0], [13.3, 644.0], [13.4, 644.0], [13.5, 644.0], [13.6, 644.0], [13.7, 644.0], [13.8, 644.0], [13.9, 644.0], [14.0, 656.0], [14.1, 656.0], [14.2, 656.0], [14.3, 656.0], [14.4, 656.0], [14.5, 656.0], [14.6, 656.0], [14.7, 656.0], [14.8, 656.0], [14.9, 656.0], [15.0, 670.0], [15.1, 670.0], [15.2, 670.0], [15.3, 670.0], [15.4, 670.0], [15.5, 670.0], [15.6, 670.0], [15.7, 670.0], [15.8, 670.0], [15.9, 670.0], [16.0, 707.0], [16.1, 707.0], [16.2, 707.0], [16.3, 707.0], [16.4, 707.0], [16.5, 707.0], [16.6, 707.0], [16.7, 707.0], [16.8, 707.0], [16.9, 707.0], [17.0, 708.0], [17.1, 708.0], [17.2, 708.0], [17.3, 708.0], [17.4, 708.0], [17.5, 708.0], [17.6, 708.0], [17.7, 708.0], [17.8, 708.0], [17.9, 708.0], [18.0, 720.0], [18.1, 720.0], [18.2, 720.0], [18.3, 720.0], [18.4, 720.0], [18.5, 720.0], [18.6, 720.0], [18.7, 720.0], [18.8, 720.0], [18.9, 720.0], [19.0, 724.0], [19.1, 724.0], [19.2, 724.0], [19.3, 724.0], [19.4, 724.0], [19.5, 724.0], [19.6, 724.0], [19.7, 724.0], [19.8, 724.0], [19.9, 724.0], [20.0, 744.0], [20.1, 744.0], [20.2, 744.0], [20.3, 744.0], [20.4, 744.0], [20.5, 744.0], [20.6, 744.0], [20.7, 744.0], [20.8, 744.0], [20.9, 744.0], [21.0, 750.0], [21.1, 750.0], [21.2, 750.0], [21.3, 750.0], [21.4, 750.0], [21.5, 750.0], [21.6, 750.0], [21.7, 750.0], [21.8, 750.0], [21.9, 750.0], [22.0, 751.0], [22.1, 751.0], [22.2, 751.0], [22.3, 751.0], [22.4, 751.0], [22.5, 751.0], [22.6, 751.0], [22.7, 751.0], [22.8, 751.0], [22.9, 751.0], [23.0, 773.0], [23.1, 773.0], [23.2, 773.0], [23.3, 773.0], [23.4, 773.0], [23.5, 773.0], [23.6, 773.0], [23.7, 773.0], [23.8, 773.0], [23.9, 773.0], [24.0, 807.0], [24.1, 807.0], [24.2, 807.0], [24.3, 807.0], [24.4, 807.0], [24.5, 807.0], [24.6, 807.0], [24.7, 807.0], [24.8, 807.0], [24.9, 807.0], [25.0, 814.0], [25.1, 814.0], [25.2, 814.0], [25.3, 814.0], [25.4, 814.0], [25.5, 814.0], [25.6, 814.0], [25.7, 814.0], [25.8, 814.0], [25.9, 814.0], [26.0, 825.0], [26.1, 825.0], [26.2, 825.0], [26.3, 825.0], [26.4, 825.0], [26.5, 825.0], [26.6, 825.0], [26.7, 825.0], [26.8, 825.0], [26.9, 825.0], [27.0, 855.0], [27.1, 855.0], [27.2, 855.0], [27.3, 855.0], [27.4, 855.0], [27.5, 855.0], [27.6, 855.0], [27.7, 855.0], [27.8, 855.0], [27.9, 855.0], [28.0, 869.0], [28.1, 869.0], [28.2, 869.0], [28.3, 869.0], [28.4, 869.0], [28.5, 869.0], [28.6, 869.0], [28.7, 869.0], [28.8, 869.0], [28.9, 869.0], [29.0, 875.0], [29.1, 875.0], [29.2, 875.0], [29.3, 875.0], [29.4, 875.0], [29.5, 875.0], [29.6, 875.0], [29.7, 875.0], [29.8, 875.0], [29.9, 875.0], [30.0, 891.0], [30.1, 891.0], [30.2, 891.0], [30.3, 891.0], [30.4, 891.0], [30.5, 891.0], [30.6, 891.0], [30.7, 891.0], [30.8, 891.0], [30.9, 891.0], [31.0, 905.0], [31.1, 905.0], [31.2, 905.0], [31.3, 905.0], [31.4, 905.0], [31.5, 905.0], [31.6, 905.0], [31.7, 905.0], [31.8, 905.0], [31.9, 905.0], [32.0, 909.0], [32.1, 909.0], [32.2, 909.0], [32.3, 909.0], [32.4, 909.0], [32.5, 909.0], [32.6, 909.0], [32.7, 909.0], [32.8, 909.0], [32.9, 909.0], [33.0, 985.0], [33.1, 985.0], [33.2, 985.0], [33.3, 985.0], [33.4, 985.0], [33.5, 985.0], [33.6, 985.0], [33.7, 985.0], [33.8, 985.0], [33.9, 985.0], [34.0, 987.0], [34.1, 987.0], [34.2, 987.0], [34.3, 987.0], [34.4, 987.0], [34.5, 987.0], [34.6, 987.0], [34.7, 987.0], [34.8, 987.0], [34.9, 987.0], [35.0, 1000.0], [35.1, 1000.0], [35.2, 1000.0], [35.3, 1000.0], [35.4, 1000.0], [35.5, 1000.0], [35.6, 1000.0], [35.7, 1000.0], [35.8, 1000.0], [35.9, 1000.0], [36.0, 1042.0], [36.1, 1042.0], [36.2, 1042.0], [36.3, 1042.0], [36.4, 1042.0], [36.5, 1042.0], [36.6, 1042.0], [36.7, 1042.0], [36.8, 1042.0], [36.9, 1042.0], [37.0, 1045.0], [37.1, 1045.0], [37.2, 1045.0], [37.3, 1045.0], [37.4, 1045.0], [37.5, 1045.0], [37.6, 1045.0], [37.7, 1045.0], [37.8, 1045.0], [37.9, 1045.0], [38.0, 1086.0], [38.1, 1086.0], [38.2, 1086.0], [38.3, 1086.0], [38.4, 1086.0], [38.5, 1086.0], [38.6, 1086.0], [38.7, 1086.0], [38.8, 1086.0], [38.9, 1086.0], [39.0, 1133.0], [39.1, 1133.0], [39.2, 1133.0], [39.3, 1133.0], [39.4, 1133.0], [39.5, 1133.0], [39.6, 1133.0], [39.7, 1133.0], [39.8, 1133.0], [39.9, 1133.0], [40.0, 1157.0], [40.1, 1157.0], [40.2, 1157.0], [40.3, 1157.0], [40.4, 1157.0], [40.5, 1157.0], [40.6, 1157.0], [40.7, 1157.0], [40.8, 1157.0], [40.9, 1157.0], [41.0, 1194.0], [41.1, 1194.0], [41.2, 1194.0], [41.3, 1194.0], [41.4, 1194.0], [41.5, 1194.0], [41.6, 1194.0], [41.7, 1194.0], [41.8, 1194.0], [41.9, 1194.0], [42.0, 1211.0], [42.1, 1211.0], [42.2, 1211.0], [42.3, 1211.0], [42.4, 1211.0], [42.5, 1211.0], [42.6, 1211.0], [42.7, 1211.0], [42.8, 1211.0], [42.9, 1211.0], [43.0, 1294.0], [43.1, 1294.0], [43.2, 1294.0], [43.3, 1294.0], [43.4, 1294.0], [43.5, 1294.0], [43.6, 1294.0], [43.7, 1294.0], [43.8, 1294.0], [43.9, 1294.0], [44.0, 1304.0], [44.1, 1304.0], [44.2, 1304.0], [44.3, 1304.0], [44.4, 1304.0], [44.5, 1304.0], [44.6, 1304.0], [44.7, 1304.0], [44.8, 1304.0], [44.9, 1304.0], [45.0, 1321.0], [45.1, 1321.0], [45.2, 1321.0], [45.3, 1321.0], [45.4, 1321.0], [45.5, 1321.0], [45.6, 1321.0], [45.7, 1321.0], [45.8, 1321.0], [45.9, 1321.0], [46.0, 1353.0], [46.1, 1353.0], [46.2, 1353.0], [46.3, 1353.0], [46.4, 1353.0], [46.5, 1353.0], [46.6, 1353.0], [46.7, 1353.0], [46.8, 1353.0], [46.9, 1353.0], [47.0, 1389.0], [47.1, 1389.0], [47.2, 1389.0], [47.3, 1389.0], [47.4, 1389.0], [47.5, 1389.0], [47.6, 1389.0], [47.7, 1389.0], [47.8, 1389.0], [47.9, 1389.0], [48.0, 1400.0], [48.1, 1400.0], [48.2, 1400.0], [48.3, 1400.0], [48.4, 1400.0], [48.5, 1400.0], [48.6, 1400.0], [48.7, 1400.0], [48.8, 1400.0], [48.9, 1400.0], [49.0, 1420.0], [49.1, 1420.0], [49.2, 1420.0], [49.3, 1420.0], [49.4, 1420.0], [49.5, 1420.0], [49.6, 1420.0], [49.7, 1420.0], [49.8, 1420.0], [49.9, 1420.0], [50.0, 1458.0], [50.1, 1458.0], [50.2, 1458.0], [50.3, 1458.0], [50.4, 1458.0], [50.5, 1458.0], [50.6, 1458.0], [50.7, 1458.0], [50.8, 1458.0], [50.9, 1458.0], [51.0, 1472.0], [51.1, 1472.0], [51.2, 1472.0], [51.3, 1472.0], [51.4, 1472.0], [51.5, 1472.0], [51.6, 1472.0], [51.7, 1472.0], [51.8, 1472.0], [51.9, 1472.0], [52.0, 1516.0], [52.1, 1516.0], [52.2, 1516.0], [52.3, 1516.0], [52.4, 1516.0], [52.5, 1516.0], [52.6, 1516.0], [52.7, 1516.0], [52.8, 1516.0], [52.9, 1516.0], [53.0, 1529.0], [53.1, 1529.0], [53.2, 1529.0], [53.3, 1529.0], [53.4, 1529.0], [53.5, 1529.0], [53.6, 1529.0], [53.7, 1529.0], [53.8, 1529.0], [53.9, 1529.0], [54.0, 1566.0], [54.1, 1566.0], [54.2, 1566.0], [54.3, 1566.0], [54.4, 1566.0], [54.5, 1566.0], [54.6, 1566.0], [54.7, 1566.0], [54.8, 1566.0], [54.9, 1566.0], [55.0, 1586.0], [55.1, 1586.0], [55.2, 1586.0], [55.3, 1586.0], [55.4, 1586.0], [55.5, 1586.0], [55.6, 1586.0], [55.7, 1586.0], [55.8, 1586.0], [55.9, 1586.0], [56.0, 1611.0], [56.1, 1611.0], [56.2, 1611.0], [56.3, 1611.0], [56.4, 1611.0], [56.5, 1611.0], [56.6, 1611.0], [56.7, 1611.0], [56.8, 1611.0], [56.9, 1611.0], [57.0, 1626.0], [57.1, 1626.0], [57.2, 1626.0], [57.3, 1626.0], [57.4, 1626.0], [57.5, 1626.0], [57.6, 1626.0], [57.7, 1626.0], [57.8, 1626.0], [57.9, 1626.0], [58.0, 1670.0], [58.1, 1670.0], [58.2, 1670.0], [58.3, 1670.0], [58.4, 1670.0], [58.5, 1670.0], [58.6, 1670.0], [58.7, 1670.0], [58.8, 1670.0], [58.9, 1670.0], [59.0, 1671.0], [59.1, 1671.0], [59.2, 1671.0], [59.3, 1671.0], [59.4, 1671.0], [59.5, 1671.0], [59.6, 1671.0], [59.7, 1671.0], [59.8, 1671.0], [59.9, 1671.0], [60.0, 1700.0], [60.1, 1700.0], [60.2, 1700.0], [60.3, 1700.0], [60.4, 1700.0], [60.5, 1700.0], [60.6, 1700.0], [60.7, 1700.0], [60.8, 1700.0], [60.9, 1700.0], [61.0, 1738.0], [61.1, 1738.0], [61.2, 1738.0], [61.3, 1738.0], [61.4, 1738.0], [61.5, 1738.0], [61.6, 1738.0], [61.7, 1738.0], [61.8, 1738.0], [61.9, 1738.0], [62.0, 1744.0], [62.1, 1744.0], [62.2, 1744.0], [62.3, 1744.0], [62.4, 1744.0], [62.5, 1744.0], [62.6, 1744.0], [62.7, 1744.0], [62.8, 1744.0], [62.9, 1744.0], [63.0, 1758.0], [63.1, 1758.0], [63.2, 1758.0], [63.3, 1758.0], [63.4, 1758.0], [63.5, 1758.0], [63.6, 1758.0], [63.7, 1758.0], [63.8, 1758.0], [63.9, 1758.0], [64.0, 1813.0], [64.1, 1813.0], [64.2, 1813.0], [64.3, 1813.0], [64.4, 1813.0], [64.5, 1813.0], [64.6, 1813.0], [64.7, 1813.0], [64.8, 1813.0], [64.9, 1813.0], [65.0, 1847.0], [65.1, 1847.0], [65.2, 1847.0], [65.3, 1847.0], [65.4, 1847.0], [65.5, 1847.0], [65.6, 1847.0], [65.7, 1847.0], [65.8, 1847.0], [65.9, 1847.0], [66.0, 1859.0], [66.1, 1859.0], [66.2, 1859.0], [66.3, 1859.0], [66.4, 1859.0], [66.5, 1859.0], [66.6, 1859.0], [66.7, 1859.0], [66.8, 1859.0], [66.9, 1859.0], [67.0, 1885.0], [67.1, 1885.0], [67.2, 1885.0], [67.3, 1885.0], [67.4, 1885.0], [67.5, 1885.0], [67.6, 1885.0], [67.7, 1885.0], [67.8, 1885.0], [67.9, 1885.0], [68.0, 1914.0], [68.1, 1914.0], [68.2, 1914.0], [68.3, 1914.0], [68.4, 1914.0], [68.5, 1914.0], [68.6, 1914.0], [68.7, 1914.0], [68.8, 1914.0], [68.9, 1914.0], [69.0, 1927.0], [69.1, 1927.0], [69.2, 1927.0], [69.3, 1927.0], [69.4, 1927.0], [69.5, 1927.0], [69.6, 1927.0], [69.7, 1927.0], [69.8, 1927.0], [69.9, 1927.0], [70.0, 1956.0], [70.1, 1956.0], [70.2, 1956.0], [70.3, 1956.0], [70.4, 1956.0], [70.5, 1956.0], [70.6, 1956.0], [70.7, 1956.0], [70.8, 1956.0], [70.9, 1956.0], [71.0, 1982.0], [71.1, 1982.0], [71.2, 1982.0], [71.3, 1982.0], [71.4, 1982.0], [71.5, 1982.0], [71.6, 1982.0], [71.7, 1982.0], [71.8, 1982.0], [71.9, 1982.0], [72.0, 1996.0], [72.1, 1996.0], [72.2, 1996.0], [72.3, 1996.0], [72.4, 1996.0], [72.5, 1996.0], [72.6, 1996.0], [72.7, 1996.0], [72.8, 1996.0], [72.9, 1996.0], [73.0, 2010.0], [73.1, 2010.0], [73.2, 2010.0], [73.3, 2010.0], [73.4, 2010.0], [73.5, 2010.0], [73.6, 2010.0], [73.7, 2010.0], [73.8, 2010.0], [73.9, 2010.0], [74.0, 2022.0], [74.1, 2022.0], [74.2, 2022.0], [74.3, 2022.0], [74.4, 2022.0], [74.5, 2022.0], [74.6, 2022.0], [74.7, 2022.0], [74.8, 2022.0], [74.9, 2022.0], [75.0, 2037.0], [75.1, 2037.0], [75.2, 2037.0], [75.3, 2037.0], [75.4, 2037.0], [75.5, 2037.0], [75.6, 2037.0], [75.7, 2037.0], [75.8, 2037.0], [75.9, 2037.0], [76.0, 2041.0], [76.1, 2041.0], [76.2, 2041.0], [76.3, 2041.0], [76.4, 2041.0], [76.5, 2041.0], [76.6, 2041.0], [76.7, 2041.0], [76.8, 2041.0], [76.9, 2041.0], [77.0, 2071.0], [77.1, 2071.0], [77.2, 2071.0], [77.3, 2071.0], [77.4, 2071.0], [77.5, 2071.0], [77.6, 2071.0], [77.7, 2071.0], [77.8, 2071.0], [77.9, 2071.0], [78.0, 2094.0], [78.1, 2094.0], [78.2, 2094.0], [78.3, 2094.0], [78.4, 2094.0], [78.5, 2094.0], [78.6, 2094.0], [78.7, 2094.0], [78.8, 2094.0], [78.9, 2094.0], [79.0, 2103.0], [79.1, 2103.0], [79.2, 2103.0], [79.3, 2103.0], [79.4, 2103.0], [79.5, 2103.0], [79.6, 2103.0], [79.7, 2103.0], [79.8, 2103.0], [79.9, 2103.0], [80.0, 2105.0], [80.1, 2105.0], [80.2, 2105.0], [80.3, 2105.0], [80.4, 2105.0], [80.5, 2105.0], [80.6, 2105.0], [80.7, 2105.0], [80.8, 2105.0], [80.9, 2105.0], [81.0, 2112.0], [81.1, 2112.0], [81.2, 2112.0], [81.3, 2112.0], [81.4, 2112.0], [81.5, 2112.0], [81.6, 2112.0], [81.7, 2112.0], [81.8, 2112.0], [81.9, 2112.0], [82.0, 2118.0], [82.1, 2118.0], [82.2, 2118.0], [82.3, 2118.0], [82.4, 2118.0], [82.5, 2118.0], [82.6, 2118.0], [82.7, 2118.0], [82.8, 2118.0], [82.9, 2118.0], [83.0, 2119.0], [83.1, 2119.0], [83.2, 2119.0], [83.3, 2119.0], [83.4, 2119.0], [83.5, 2119.0], [83.6, 2119.0], [83.7, 2119.0], [83.8, 2119.0], [83.9, 2119.0], [84.0, 2136.0], [84.1, 2136.0], [84.2, 2136.0], [84.3, 2136.0], [84.4, 2136.0], [84.5, 2136.0], [84.6, 2136.0], [84.7, 2136.0], [84.8, 2136.0], [84.9, 2136.0], [85.0, 2136.0], [85.1, 2136.0], [85.2, 2136.0], [85.3, 2136.0], [85.4, 2136.0], [85.5, 2136.0], [85.6, 2136.0], [85.7, 2136.0], [85.8, 2136.0], [85.9, 2136.0], [86.0, 2145.0], [86.1, 2145.0], [86.2, 2145.0], [86.3, 2145.0], [86.4, 2145.0], [86.5, 2145.0], [86.6, 2145.0], [86.7, 2145.0], [86.8, 2145.0], [86.9, 2145.0], [87.0, 2147.0], [87.1, 2147.0], [87.2, 2147.0], [87.3, 2147.0], [87.4, 2147.0], [87.5, 2147.0], [87.6, 2147.0], [87.7, 2147.0], [87.8, 2147.0], [87.9, 2147.0], [88.0, 2149.0], [88.1, 2149.0], [88.2, 2149.0], [88.3, 2149.0], [88.4, 2149.0], [88.5, 2149.0], [88.6, 2149.0], [88.7, 2149.0], [88.8, 2149.0], [88.9, 2149.0], [89.0, 2171.0], [89.1, 2171.0], [89.2, 2171.0], [89.3, 2171.0], [89.4, 2171.0], [89.5, 2171.0], [89.6, 2171.0], [89.7, 2171.0], [89.8, 2171.0], [89.9, 2171.0], [90.0, 2177.0], [90.1, 2177.0], [90.2, 2177.0], [90.3, 2177.0], [90.4, 2177.0], [90.5, 2177.0], [90.6, 2177.0], [90.7, 2177.0], [90.8, 2177.0], [90.9, 2177.0], [91.0, 2187.0], [91.1, 2187.0], [91.2, 2187.0], [91.3, 2187.0], [91.4, 2187.0], [91.5, 2187.0], [91.6, 2187.0], [91.7, 2187.0], [91.8, 2187.0], [91.9, 2187.0], [92.0, 2189.0], [92.1, 2189.0], [92.2, 2189.0], [92.3, 2189.0], [92.4, 2189.0], [92.5, 2189.0], [92.6, 2189.0], [92.7, 2189.0], [92.8, 2189.0], [92.9, 2189.0], [93.0, 2194.0], [93.1, 2194.0], [93.2, 2194.0], [93.3, 2194.0], [93.4, 2194.0], [93.5, 2194.0], [93.6, 2194.0], [93.7, 2194.0], [93.8, 2194.0], [93.9, 2194.0], [94.0, 2199.0], [94.1, 2199.0], [94.2, 2199.0], [94.3, 2199.0], [94.4, 2199.0], [94.5, 2199.0], [94.6, 2199.0], [94.7, 2199.0], [94.8, 2199.0], [94.9, 2199.0], [95.0, 2205.0], [95.1, 2205.0], [95.2, 2205.0], [95.3, 2205.0], [95.4, 2205.0], [95.5, 2205.0], [95.6, 2205.0], [95.7, 2205.0], [95.8, 2205.0], [95.9, 2205.0], [96.0, 2212.0], [96.1, 2212.0], [96.2, 2212.0], [96.3, 2212.0], [96.4, 2212.0], [96.5, 2212.0], [96.6, 2212.0], [96.7, 2212.0], [96.8, 2212.0], [96.9, 2212.0], [97.0, 2231.0], [97.1, 2231.0], [97.2, 2231.0], [97.3, 2231.0], [97.4, 2231.0], [97.5, 2231.0], [97.6, 2231.0], [97.7, 2231.0], [97.8, 2231.0], [97.9, 2231.0], [98.0, 2241.0], [98.1, 2241.0], [98.2, 2241.0], [98.3, 2241.0], [98.4, 2241.0], [98.5, 2241.0], [98.6, 2241.0], [98.7, 2241.0], [98.8, 2241.0], [98.9, 2241.0], [99.0, 2308.0], [99.1, 2308.0], [99.2, 2308.0], [99.3, 2308.0], [99.4, 2308.0], [99.5, 2308.0], [99.6, 2308.0], [99.7, 2308.0], [99.8, 2308.0], [99.9, 2308.0]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[0.0, 1161.0], [0.1, 1161.0], [0.2, 1161.0], [0.3, 1161.0], [0.4, 1161.0], [0.5, 1161.0], [0.6, 1161.0], [0.7, 1161.0], [0.8, 1161.0], [0.9, 1161.0], [1.0, 1177.0], [1.1, 1177.0], [1.2, 1177.0], [1.3, 1177.0], [1.4, 1177.0], [1.5, 1177.0], [1.6, 1177.0], [1.7, 1177.0], [1.8, 1177.0], [1.9, 1177.0], [2.0, 1207.0], [2.1, 1207.0], [2.2, 1207.0], [2.3, 1207.0], [2.4, 1207.0], [2.5, 1207.0], [2.6, 1207.0], [2.7, 1207.0], [2.8, 1207.0], [2.9, 1207.0], [3.0, 1216.0], [3.1, 1216.0], [3.2, 1216.0], [3.3, 1216.0], [3.4, 1216.0], [3.5, 1216.0], [3.6, 1216.0], [3.7, 1216.0], [3.8, 1216.0], [3.9, 1216.0], [4.0, 1265.0], [4.1, 1265.0], [4.2, 1265.0], [4.3, 1265.0], [4.4, 1265.0], [4.5, 1265.0], [4.6, 1265.0], [4.7, 1265.0], [4.8, 1265.0], [4.9, 1265.0], [5.0, 1385.0], [5.1, 1385.0], [5.2, 1385.0], [5.3, 1385.0], [5.4, 1385.0], [5.5, 1385.0], [5.6, 1385.0], [5.7, 1385.0], [5.8, 1385.0], [5.9, 1385.0], [6.0, 1392.0], [6.1, 1392.0], [6.2, 1392.0], [6.3, 1392.0], [6.4, 1392.0], [6.5, 1392.0], [6.6, 1392.0], [6.7, 1392.0], [6.8, 1392.0], [6.9, 1392.0], [7.0, 1403.0], [7.1, 1403.0], [7.2, 1403.0], [7.3, 1403.0], [7.4, 1403.0], [7.5, 1403.0], [7.6, 1403.0], [7.7, 1403.0], [7.8, 1403.0], [7.9, 1403.0], [8.0, 1437.0], [8.1, 1437.0], [8.2, 1437.0], [8.3, 1437.0], [8.4, 1437.0], [8.5, 1437.0], [8.6, 1437.0], [8.7, 1437.0], [8.8, 1437.0], [8.9, 1437.0], [9.0, 1454.0], [9.1, 1454.0], [9.2, 1454.0], [9.3, 1454.0], [9.4, 1454.0], [9.5, 1454.0], [9.6, 1454.0], [9.7, 1454.0], [9.8, 1454.0], [9.9, 1454.0], [10.0, 1542.0], [10.1, 1542.0], [10.2, 1542.0], [10.3, 1542.0], [10.4, 1542.0], [10.5, 1542.0], [10.6, 1542.0], [10.7, 1542.0], [10.8, 1542.0], [10.9, 1542.0], [11.0, 1624.0], [11.1, 1624.0], [11.2, 1624.0], [11.3, 1624.0], [11.4, 1624.0], [11.5, 1624.0], [11.6, 1624.0], [11.7, 1624.0], [11.8, 1624.0], [11.9, 1624.0], [12.0, 1627.0], [12.1, 1627.0], [12.2, 1627.0], [12.3, 1627.0], [12.4, 1627.0], [12.5, 1627.0], [12.6, 1627.0], [12.7, 1627.0], [12.8, 1627.0], [12.9, 1627.0], [13.0, 1648.0], [13.1, 1648.0], [13.2, 1648.0], [13.3, 1648.0], [13.4, 1648.0], [13.5, 1648.0], [13.6, 1648.0], [13.7, 1648.0], [13.8, 1648.0], [13.9, 1648.0], [14.0, 1650.0], [14.1, 1650.0], [14.2, 1650.0], [14.3, 1650.0], [14.4, 1650.0], [14.5, 1650.0], [14.6, 1650.0], [14.7, 1650.0], [14.8, 1650.0], [14.9, 1650.0], [15.0, 1715.0], [15.1, 1715.0], [15.2, 1715.0], [15.3, 1715.0], [15.4, 1715.0], [15.5, 1715.0], [15.6, 1715.0], [15.7, 1715.0], [15.8, 1715.0], [15.9, 1715.0], [16.0, 1716.0], [16.1, 1716.0], [16.2, 1716.0], [16.3, 1716.0], [16.4, 1716.0], [16.5, 1716.0], [16.6, 1716.0], [16.7, 1716.0], [16.8, 1716.0], [16.9, 1716.0], [17.0, 1720.0], [17.1, 1720.0], [17.2, 1720.0], [17.3, 1720.0], [17.4, 1720.0], [17.5, 1720.0], [17.6, 1720.0], [17.7, 1720.0], [17.8, 1720.0], [17.9, 1720.0], [18.0, 1720.0], [18.1, 1720.0], [18.2, 1720.0], [18.3, 1720.0], [18.4, 1720.0], [18.5, 1720.0], [18.6, 1720.0], [18.7, 1720.0], [18.8, 1720.0], [18.9, 1720.0], [19.0, 1734.0], [19.1, 1734.0], [19.2, 1734.0], [19.3, 1734.0], [19.4, 1734.0], [19.5, 1734.0], [19.6, 1734.0], [19.7, 1734.0], [19.8, 1734.0], [19.9, 1734.0], [20.0, 1734.0], [20.1, 1734.0], [20.2, 1734.0], [20.3, 1734.0], [20.4, 1734.0], [20.5, 1734.0], [20.6, 1734.0], [20.7, 1734.0], [20.8, 1734.0], [20.9, 1734.0], [21.0, 1750.0], [21.1, 1750.0], [21.2, 1750.0], [21.3, 1750.0], [21.4, 1750.0], [21.5, 1750.0], [21.6, 1750.0], [21.7, 1750.0], [21.8, 1750.0], [21.9, 1750.0], [22.0, 1754.0], [22.1, 1754.0], [22.2, 1754.0], [22.3, 1754.0], [22.4, 1754.0], [22.5, 1754.0], [22.6, 1754.0], [22.7, 1754.0], [22.8, 1754.0], [22.9, 1754.0], [23.0, 1757.0], [23.1, 1757.0], [23.2, 1757.0], [23.3, 1757.0], [23.4, 1757.0], [23.5, 1757.0], [23.6, 1757.0], [23.7, 1757.0], [23.8, 1757.0], [23.9, 1757.0], [24.0, 1763.0], [24.1, 1763.0], [24.2, 1763.0], [24.3, 1763.0], [24.4, 1763.0], [24.5, 1763.0], [24.6, 1763.0], [24.7, 1763.0], [24.8, 1763.0], [24.9, 1763.0], [25.0, 1766.0], [25.1, 1766.0], [25.2, 1766.0], [25.3, 1766.0], [25.4, 1766.0], [25.5, 1766.0], [25.6, 1766.0], [25.7, 1766.0], [25.8, 1766.0], [25.9, 1766.0], [26.0, 1772.0], [26.1, 1772.0], [26.2, 1772.0], [26.3, 1772.0], [26.4, 1772.0], [26.5, 1772.0], [26.6, 1772.0], [26.7, 1772.0], [26.8, 1772.0], [26.9, 1772.0], [27.0, 1776.0], [27.1, 1776.0], [27.2, 1776.0], [27.3, 1776.0], [27.4, 1776.0], [27.5, 1776.0], [27.6, 1776.0], [27.7, 1776.0], [27.8, 1776.0], [27.9, 1776.0], [28.0, 1780.0], [28.1, 1780.0], [28.2, 1780.0], [28.3, 1780.0], [28.4, 1780.0], [28.5, 1780.0], [28.6, 1780.0], [28.7, 1780.0], [28.8, 1780.0], [28.9, 1780.0], [29.0, 1788.0], [29.1, 1788.0], [29.2, 1788.0], [29.3, 1788.0], [29.4, 1788.0], [29.5, 1788.0], [29.6, 1788.0], [29.7, 1788.0], [29.8, 1788.0], [29.9, 1788.0], [30.0, 1796.0], [30.1, 1796.0], [30.2, 1796.0], [30.3, 1796.0], [30.4, 1796.0], [30.5, 1796.0], [30.6, 1796.0], [30.7, 1796.0], [30.8, 1796.0], [30.9, 1796.0], [31.0, 1800.0], [31.1, 1800.0], [31.2, 1800.0], [31.3, 1800.0], [31.4, 1800.0], [31.5, 1800.0], [31.6, 1800.0], [31.7, 1800.0], [31.8, 1800.0], [31.9, 1800.0], [32.0, 1803.0], [32.1, 1803.0], [32.2, 1803.0], [32.3, 1803.0], [32.4, 1803.0], [32.5, 1803.0], [32.6, 1803.0], [32.7, 1803.0], [32.8, 1803.0], [32.9, 1803.0], [33.0, 1806.0], [33.1, 1806.0], [33.2, 1806.0], [33.3, 1806.0], [33.4, 1806.0], [33.5, 1806.0], [33.6, 1806.0], [33.7, 1806.0], [33.8, 1806.0], [33.9, 1806.0], [34.0, 1814.0], [34.1, 1814.0], [34.2, 1814.0], [34.3, 1814.0], [34.4, 1814.0], [34.5, 1814.0], [34.6, 1814.0], [34.7, 1814.0], [34.8, 1814.0], [34.9, 1814.0], [35.0, 1815.0], [35.1, 1815.0], [35.2, 1815.0], [35.3, 1815.0], [35.4, 1815.0], [35.5, 1815.0], [35.6, 1815.0], [35.7, 1815.0], [35.8, 1815.0], [35.9, 1815.0], [36.0, 1823.0], [36.1, 1823.0], [36.2, 1823.0], [36.3, 1823.0], [36.4, 1823.0], [36.5, 1823.0], [36.6, 1823.0], [36.7, 1823.0], [36.8, 1823.0], [36.9, 1823.0], [37.0, 1823.0], [37.1, 1823.0], [37.2, 1823.0], [37.3, 1823.0], [37.4, 1823.0], [37.5, 1823.0], [37.6, 1823.0], [37.7, 1823.0], [37.8, 1823.0], [37.9, 1823.0], [38.0, 1824.0], [38.1, 1824.0], [38.2, 1824.0], [38.3, 1824.0], [38.4, 1824.0], [38.5, 1824.0], [38.6, 1824.0], [38.7, 1824.0], [38.8, 1824.0], [38.9, 1824.0], [39.0, 1824.0], [39.1, 1824.0], [39.2, 1824.0], [39.3, 1824.0], [39.4, 1824.0], [39.5, 1824.0], [39.6, 1824.0], [39.7, 1824.0], [39.8, 1824.0], [39.9, 1824.0], [40.0, 1826.0], [40.1, 1826.0], [40.2, 1826.0], [40.3, 1826.0], [40.4, 1826.0], [40.5, 1826.0], [40.6, 1826.0], [40.7, 1826.0], [40.8, 1826.0], [40.9, 1826.0], [41.0, 1828.0], [41.1, 1828.0], [41.2, 1828.0], [41.3, 1828.0], [41.4, 1828.0], [41.5, 1828.0], [41.6, 1828.0], [41.7, 1828.0], [41.8, 1828.0], [41.9, 1828.0], [42.0, 1831.0], [42.1, 1831.0], [42.2, 1831.0], [42.3, 1831.0], [42.4, 1831.0], [42.5, 1831.0], [42.6, 1831.0], [42.7, 1831.0], [42.8, 1831.0], [42.9, 1831.0], [43.0, 1833.0], [43.1, 1833.0], [43.2, 1833.0], [43.3, 1833.0], [43.4, 1833.0], [43.5, 1833.0], [43.6, 1833.0], [43.7, 1833.0], [43.8, 1833.0], [43.9, 1833.0], [44.0, 1838.0], [44.1, 1838.0], [44.2, 1838.0], [44.3, 1838.0], [44.4, 1838.0], [44.5, 1838.0], [44.6, 1838.0], [44.7, 1838.0], [44.8, 1838.0], [44.9, 1838.0], [45.0, 1839.0], [45.1, 1839.0], [45.2, 1839.0], [45.3, 1839.0], [45.4, 1839.0], [45.5, 1839.0], [45.6, 1839.0], [45.7, 1839.0], [45.8, 1839.0], [45.9, 1839.0], [46.0, 1844.0], [46.1, 1844.0], [46.2, 1844.0], [46.3, 1844.0], [46.4, 1844.0], [46.5, 1844.0], [46.6, 1844.0], [46.7, 1844.0], [46.8, 1844.0], [46.9, 1844.0], [47.0, 1848.0], [47.1, 1848.0], [47.2, 1848.0], [47.3, 1848.0], [47.4, 1848.0], [47.5, 1848.0], [47.6, 1848.0], [47.7, 1848.0], [47.8, 1848.0], [47.9, 1848.0], [48.0, 1849.0], [48.1, 1849.0], [48.2, 1849.0], [48.3, 1849.0], [48.4, 1849.0], [48.5, 1849.0], [48.6, 1849.0], [48.7, 1849.0], [48.8, 1849.0], [48.9, 1849.0], [49.0, 1851.0], [49.1, 1851.0], [49.2, 1851.0], [49.3, 1851.0], [49.4, 1851.0], [49.5, 1851.0], [49.6, 1851.0], [49.7, 1851.0], [49.8, 1851.0], [49.9, 1851.0], [50.0, 1852.0], [50.1, 1852.0], [50.2, 1852.0], [50.3, 1852.0], [50.4, 1852.0], [50.5, 1852.0], [50.6, 1852.0], [50.7, 1852.0], [50.8, 1852.0], [50.9, 1852.0], [51.0, 1853.0], [51.1, 1853.0], [51.2, 1853.0], [51.3, 1853.0], [51.4, 1853.0], [51.5, 1853.0], [51.6, 1853.0], [51.7, 1853.0], [51.8, 1853.0], [51.9, 1853.0], [52.0, 1859.0], [52.1, 1859.0], [52.2, 1859.0], [52.3, 1859.0], [52.4, 1859.0], [52.5, 1859.0], [52.6, 1859.0], [52.7, 1859.0], [52.8, 1859.0], [52.9, 1859.0], [53.0, 1867.0], [53.1, 1867.0], [53.2, 1867.0], [53.3, 1867.0], [53.4, 1867.0], [53.5, 1867.0], [53.6, 1867.0], [53.7, 1867.0], [53.8, 1867.0], [53.9, 1867.0], [54.0, 1868.0], [54.1, 1868.0], [54.2, 1868.0], [54.3, 1868.0], [54.4, 1868.0], [54.5, 1868.0], [54.6, 1868.0], [54.7, 1868.0], [54.8, 1868.0], [54.9, 1868.0], [55.0, 1872.0], [55.1, 1872.0], [55.2, 1872.0], [55.3, 1872.0], [55.4, 1872.0], [55.5, 1872.0], [55.6, 1872.0], [55.7, 1872.0], [55.8, 1872.0], [55.9, 1872.0], [56.0, 1872.0], [56.1, 1872.0], [56.2, 1872.0], [56.3, 1872.0], [56.4, 1872.0], [56.5, 1872.0], [56.6, 1872.0], [56.7, 1872.0], [56.8, 1872.0], [56.9, 1872.0], [57.0, 1873.0], [57.1, 1873.0], [57.2, 1873.0], [57.3, 1873.0], [57.4, 1873.0], [57.5, 1873.0], [57.6, 1873.0], [57.7, 1873.0], [57.8, 1873.0], [57.9, 1873.0], [58.0, 1875.0], [58.1, 1875.0], [58.2, 1875.0], [58.3, 1875.0], [58.4, 1875.0], [58.5, 1875.0], [58.6, 1875.0], [58.7, 1875.0], [58.8, 1875.0], [58.9, 1875.0], [59.0, 1875.0], [59.1, 1875.0], [59.2, 1875.0], [59.3, 1875.0], [59.4, 1875.0], [59.5, 1875.0], [59.6, 1875.0], [59.7, 1875.0], [59.8, 1875.0], [59.9, 1875.0], [60.0, 1877.0], [60.1, 1877.0], [60.2, 1877.0], [60.3, 1877.0], [60.4, 1877.0], [60.5, 1877.0], [60.6, 1877.0], [60.7, 1877.0], [60.8, 1877.0], [60.9, 1877.0], [61.0, 1889.0], [61.1, 1889.0], [61.2, 1889.0], [61.3, 1889.0], [61.4, 1889.0], [61.5, 1889.0], [61.6, 1889.0], [61.7, 1889.0], [61.8, 1889.0], [61.9, 1889.0], [62.0, 1894.0], [62.1, 1894.0], [62.2, 1894.0], [62.3, 1894.0], [62.4, 1894.0], [62.5, 1894.0], [62.6, 1894.0], [62.7, 1894.0], [62.8, 1894.0], [62.9, 1894.0], [63.0, 1894.0], [63.1, 1894.0], [63.2, 1894.0], [63.3, 1894.0], [63.4, 1894.0], [63.5, 1894.0], [63.6, 1894.0], [63.7, 1894.0], [63.8, 1894.0], [63.9, 1894.0], [64.0, 1894.0], [64.1, 1894.0], [64.2, 1894.0], [64.3, 1894.0], [64.4, 1894.0], [64.5, 1894.0], [64.6, 1894.0], [64.7, 1894.0], [64.8, 1894.0], [64.9, 1894.0], [65.0, 1897.0], [65.1, 1897.0], [65.2, 1897.0], [65.3, 1897.0], [65.4, 1897.0], [65.5, 1897.0], [65.6, 1897.0], [65.7, 1897.0], [65.8, 1897.0], [65.9, 1897.0], [66.0, 1910.0], [66.1, 1910.0], [66.2, 1910.0], [66.3, 1910.0], [66.4, 1910.0], [66.5, 1910.0], [66.6, 1910.0], [66.7, 1910.0], [66.8, 1910.0], [66.9, 1910.0], [67.0, 1913.0], [67.1, 1913.0], [67.2, 1913.0], [67.3, 1913.0], [67.4, 1913.0], [67.5, 1913.0], [67.6, 1913.0], [67.7, 1913.0], [67.8, 1913.0], [67.9, 1913.0], [68.0, 1929.0], [68.1, 1929.0], [68.2, 1929.0], [68.3, 1929.0], [68.4, 1929.0], [68.5, 1929.0], [68.6, 1929.0], [68.7, 1929.0], [68.8, 1929.0], [68.9, 1929.0], [69.0, 1933.0], [69.1, 1933.0], [69.2, 1933.0], [69.3, 1933.0], [69.4, 1933.0], [69.5, 1933.0], [69.6, 1933.0], [69.7, 1933.0], [69.8, 1933.0], [69.9, 1933.0], [70.0, 1934.0], [70.1, 1934.0], [70.2, 1934.0], [70.3, 1934.0], [70.4, 1934.0], [70.5, 1934.0], [70.6, 1934.0], [70.7, 1934.0], [70.8, 1934.0], [70.9, 1934.0], [71.0, 1950.0], [71.1, 1950.0], [71.2, 1950.0], [71.3, 1950.0], [71.4, 1950.0], [71.5, 1950.0], [71.6, 1950.0], [71.7, 1950.0], [71.8, 1950.0], [71.9, 1950.0], [72.0, 1960.0], [72.1, 1960.0], [72.2, 1960.0], [72.3, 1960.0], [72.4, 1960.0], [72.5, 1960.0], [72.6, 1960.0], [72.7, 1960.0], [72.8, 1960.0], [72.9, 1960.0], [73.0, 1960.0], [73.1, 1960.0], [73.2, 1960.0], [73.3, 1960.0], [73.4, 1960.0], [73.5, 1960.0], [73.6, 1960.0], [73.7, 1960.0], [73.8, 1960.0], [73.9, 1960.0], [74.0, 1961.0], [74.1, 1961.0], [74.2, 1961.0], [74.3, 1961.0], [74.4, 1961.0], [74.5, 1961.0], [74.6, 1961.0], [74.7, 1961.0], [74.8, 1961.0], [74.9, 1961.0], [75.0, 1963.0], [75.1, 1963.0], [75.2, 1963.0], [75.3, 1963.0], [75.4, 1963.0], [75.5, 1963.0], [75.6, 1963.0], [75.7, 1963.0], [75.8, 1963.0], [75.9, 1963.0], [76.0, 1974.0], [76.1, 1974.0], [76.2, 1974.0], [76.3, 1974.0], [76.4, 1974.0], [76.5, 1974.0], [76.6, 1974.0], [76.7, 1974.0], [76.8, 1974.0], [76.9, 1974.0], [77.0, 1974.0], [77.1, 1974.0], [77.2, 1974.0], [77.3, 1974.0], [77.4, 1974.0], [77.5, 1974.0], [77.6, 1974.0], [77.7, 1974.0], [77.8, 1974.0], [77.9, 1974.0], [78.0, 1979.0], [78.1, 1979.0], [78.2, 1979.0], [78.3, 1979.0], [78.4, 1979.0], [78.5, 1979.0], [78.6, 1979.0], [78.7, 1979.0], [78.8, 1979.0], [78.9, 1979.0], [79.0, 1983.0], [79.1, 1983.0], [79.2, 1983.0], [79.3, 1983.0], [79.4, 1983.0], [79.5, 1983.0], [79.6, 1983.0], [79.7, 1983.0], [79.8, 1983.0], [79.9, 1983.0], [80.0, 1984.0], [80.1, 1984.0], [80.2, 1984.0], [80.3, 1984.0], [80.4, 1984.0], [80.5, 1984.0], [80.6, 1984.0], [80.7, 1984.0], [80.8, 1984.0], [80.9, 1984.0], [81.0, 1996.0], [81.1, 1996.0], [81.2, 1996.0], [81.3, 1996.0], [81.4, 1996.0], [81.5, 1996.0], [81.6, 1996.0], [81.7, 1996.0], [81.8, 1996.0], [81.9, 1996.0], [82.0, 1996.0], [82.1, 1996.0], [82.2, 1996.0], [82.3, 1996.0], [82.4, 1996.0], [82.5, 1996.0], [82.6, 1996.0], [82.7, 1996.0], [82.8, 1996.0], [82.9, 1996.0], [83.0, 1997.0], [83.1, 1997.0], [83.2, 1997.0], [83.3, 1997.0], [83.4, 1997.0], [83.5, 1997.0], [83.6, 1997.0], [83.7, 1997.0], [83.8, 1997.0], [83.9, 1997.0], [84.0, 1999.0], [84.1, 1999.0], [84.2, 1999.0], [84.3, 1999.0], [84.4, 1999.0], [84.5, 1999.0], [84.6, 1999.0], [84.7, 1999.0], [84.8, 1999.0], [84.9, 1999.0], [85.0, 2000.0], [85.1, 2000.0], [85.2, 2000.0], [85.3, 2000.0], [85.4, 2000.0], [85.5, 2000.0], [85.6, 2000.0], [85.7, 2000.0], [85.8, 2000.0], [85.9, 2000.0], [86.0, 2017.0], [86.1, 2017.0], [86.2, 2017.0], [86.3, 2017.0], [86.4, 2017.0], [86.5, 2017.0], [86.6, 2017.0], [86.7, 2017.0], [86.8, 2017.0], [86.9, 2017.0], [87.0, 2017.0], [87.1, 2017.0], [87.2, 2017.0], [87.3, 2017.0], [87.4, 2017.0], [87.5, 2017.0], [87.6, 2017.0], [87.7, 2017.0], [87.8, 2017.0], [87.9, 2017.0], [88.0, 2018.0], [88.1, 2018.0], [88.2, 2018.0], [88.3, 2018.0], [88.4, 2018.0], [88.5, 2018.0], [88.6, 2018.0], [88.7, 2018.0], [88.8, 2018.0], [88.9, 2018.0], [89.0, 2019.0], [89.1, 2019.0], [89.2, 2019.0], [89.3, 2019.0], [89.4, 2019.0], [89.5, 2019.0], [89.6, 2019.0], [89.7, 2019.0], [89.8, 2019.0], [89.9, 2019.0], [90.0, 2020.0], [90.1, 2020.0], [90.2, 2020.0], [90.3, 2020.0], [90.4, 2020.0], [90.5, 2020.0], [90.6, 2020.0], [90.7, 2020.0], [90.8, 2020.0], [90.9, 2020.0], [91.0, 2021.0], [91.1, 2021.0], [91.2, 2021.0], [91.3, 2021.0], [91.4, 2021.0], [91.5, 2021.0], [91.6, 2021.0], [91.7, 2021.0], [91.8, 2021.0], [91.9, 2021.0], [92.0, 2022.0], [92.1, 2022.0], [92.2, 2022.0], [92.3, 2022.0], [92.4, 2022.0], [92.5, 2022.0], [92.6, 2022.0], [92.7, 2022.0], [92.8, 2022.0], [92.9, 2022.0], [93.0, 2022.0], [93.1, 2022.0], [93.2, 2022.0], [93.3, 2022.0], [93.4, 2022.0], [93.5, 2022.0], [93.6, 2022.0], [93.7, 2022.0], [93.8, 2022.0], [93.9, 2022.0], [94.0, 2024.0], [94.1, 2024.0], [94.2, 2024.0], [94.3, 2024.0], [94.4, 2024.0], [94.5, 2024.0], [94.6, 2024.0], [94.7, 2024.0], [94.8, 2024.0], [94.9, 2024.0], [95.0, 2025.0], [95.1, 2025.0], [95.2, 2025.0], [95.3, 2025.0], [95.4, 2025.0], [95.5, 2025.0], [95.6, 2025.0], [95.7, 2025.0], [95.8, 2025.0], [95.9, 2025.0], [96.0, 2028.0], [96.1, 2028.0], [96.2, 2028.0], [96.3, 2028.0], [96.4, 2028.0], [96.5, 2028.0], [96.6, 2028.0], [96.7, 2028.0], [96.8, 2028.0], [96.9, 2028.0], [97.0, 2030.0], [97.1, 2030.0], [97.2, 2030.0], [97.3, 2030.0], [97.4, 2030.0], [97.5, 2030.0], [97.6, 2030.0], [97.7, 2030.0], [97.8, 2030.0], [97.9, 2030.0], [98.0, 2034.0], [98.1, 2034.0], [98.2, 2034.0], [98.3, 2034.0], [98.4, 2034.0], [98.5, 2034.0], [98.6, 2034.0], [98.7, 2034.0], [98.8, 2034.0], [98.9, 2034.0], [99.0, 2036.0], [99.1, 2036.0], [99.2, 2036.0], [99.3, 2036.0], [99.4, 2036.0], [99.5, 2036.0], [99.6, 2036.0], [99.7, 2036.0], [99.8, 2036.0], [99.9, 2036.0]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[0.0, 171.0], [0.1, 171.0], [0.2, 171.0], [0.3, 171.0], [0.4, 171.0], [0.5, 171.0], [0.6, 171.0], [0.7, 171.0], [0.8, 171.0], [0.9, 171.0], [1.0, 173.0], [1.1, 173.0], [1.2, 173.0], [1.3, 173.0], [1.4, 173.0], [1.5, 173.0], [1.6, 173.0], [1.7, 173.0], [1.8, 173.0], [1.9, 173.0], [2.0, 186.0], [2.1, 186.0], [2.2, 186.0], [2.3, 186.0], [2.4, 186.0], [2.5, 186.0], [2.6, 186.0], [2.7, 186.0], [2.8, 186.0], [2.9, 186.0], [3.0, 200.0], [3.1, 200.0], [3.2, 200.0], [3.3, 200.0], [3.4, 200.0], [3.5, 200.0], [3.6, 200.0], [3.7, 200.0], [3.8, 200.0], [3.9, 200.0], [4.0, 215.0], [4.1, 215.0], [4.2, 215.0], [4.3, 215.0], [4.4, 215.0], [4.5, 215.0], [4.6, 215.0], [4.7, 215.0], [4.8, 215.0], [4.9, 215.0], [5.0, 282.0], [5.1, 282.0], [5.2, 282.0], [5.3, 282.0], [5.4, 282.0], [5.5, 282.0], [5.6, 282.0], [5.7, 282.0], [5.8, 282.0], [5.9, 282.0], [6.0, 287.0], [6.1, 287.0], [6.2, 287.0], [6.3, 287.0], [6.4, 287.0], [6.5, 287.0], [6.6, 287.0], [6.7, 287.0], [6.8, 287.0], [6.9, 287.0], [7.0, 291.0], [7.1, 291.0], [7.2, 291.0], [7.3, 291.0], [7.4, 291.0], [7.5, 291.0], [7.6, 291.0], [7.7, 291.0], [7.8, 291.0], [7.9, 291.0], [8.0, 306.0], [8.1, 306.0], [8.2, 306.0], [8.3, 306.0], [8.4, 306.0], [8.5, 306.0], [8.6, 306.0], [8.7, 306.0], [8.8, 306.0], [8.9, 306.0], [9.0, 317.0], [9.1, 317.0], [9.2, 317.0], [9.3, 317.0], [9.4, 317.0], [9.5, 317.0], [9.6, 317.0], [9.7, 317.0], [9.8, 317.0], [9.9, 317.0], [10.0, 380.0], [10.1, 380.0], [10.2, 380.0], [10.3, 380.0], [10.4, 380.0], [10.5, 380.0], [10.6, 380.0], [10.7, 380.0], [10.8, 380.0], [10.9, 380.0], [11.0, 400.0], [11.1, 400.0], [11.2, 400.0], [11.3, 400.0], [11.4, 400.0], [11.5, 400.0], [11.6, 400.0], [11.7, 400.0], [11.8, 400.0], [11.9, 400.0], [12.0, 401.0], [12.1, 401.0], [12.2, 401.0], [12.3, 401.0], [12.4, 401.0], [12.5, 401.0], [12.6, 401.0], [12.7, 401.0], [12.8, 401.0], [12.9, 401.0], [13.0, 417.0], [13.1, 417.0], [13.2, 417.0], [13.3, 417.0], [13.4, 417.0], [13.5, 417.0], [13.6, 417.0], [13.7, 417.0], [13.8, 417.0], [13.9, 417.0], [14.0, 424.0], [14.1, 424.0], [14.2, 424.0], [14.3, 424.0], [14.4, 424.0], [14.5, 424.0], [14.6, 424.0], [14.7, 424.0], [14.8, 424.0], [14.9, 424.0], [15.0, 482.0], [15.1, 482.0], [15.2, 482.0], [15.3, 482.0], [15.4, 482.0], [15.5, 482.0], [15.6, 482.0], [15.7, 482.0], [15.8, 482.0], [15.9, 482.0], [16.0, 495.0], [16.1, 495.0], [16.2, 495.0], [16.3, 495.0], [16.4, 495.0], [16.5, 495.0], [16.6, 495.0], [16.7, 495.0], [16.8, 495.0], [16.9, 495.0], [17.0, 499.0], [17.1, 499.0], [17.2, 499.0], [17.3, 499.0], [17.4, 499.0], [17.5, 499.0], [17.6, 499.0], [17.7, 499.0], [17.8, 499.0], [17.9, 499.0], [18.0, 523.0], [18.1, 523.0], [18.2, 523.0], [18.3, 523.0], [18.4, 523.0], [18.5, 523.0], [18.6, 523.0], [18.7, 523.0], [18.8, 523.0], [18.9, 523.0], [19.0, 524.0], [19.1, 524.0], [19.2, 524.0], [19.3, 524.0], [19.4, 524.0], [19.5, 524.0], [19.6, 524.0], [19.7, 524.0], [19.8, 524.0], [19.9, 524.0], [20.0, 530.0], [20.1, 530.0], [20.2, 530.0], [20.3, 530.0], [20.4, 530.0], [20.5, 530.0], [20.6, 530.0], [20.7, 530.0], [20.8, 530.0], [20.9, 530.0], [21.0, 585.0], [21.1, 585.0], [21.2, 585.0], [21.3, 585.0], [21.4, 585.0], [21.5, 585.0], [21.6, 585.0], [21.7, 585.0], [21.8, 585.0], [21.9, 585.0], [22.0, 587.0], [22.1, 587.0], [22.2, 587.0], [22.3, 587.0], [22.4, 587.0], [22.5, 587.0], [22.6, 587.0], [22.7, 587.0], [22.8, 587.0], [22.9, 587.0], [23.0, 618.0], [23.1, 618.0], [23.2, 618.0], [23.3, 618.0], [23.4, 618.0], [23.5, 618.0], [23.6, 618.0], [23.7, 618.0], [23.8, 618.0], [23.9, 618.0], [24.0, 618.0], [24.1, 618.0], [24.2, 618.0], [24.3, 618.0], [24.4, 618.0], [24.5, 618.0], [24.6, 618.0], [24.7, 618.0], [24.8, 618.0], [24.9, 618.0], [25.0, 638.0], [25.1, 638.0], [25.2, 638.0], [25.3, 638.0], [25.4, 638.0], [25.5, 638.0], [25.6, 638.0], [25.7, 638.0], [25.8, 638.0], [25.9, 638.0], [26.0, 678.0], [26.1, 678.0], [26.2, 678.0], [26.3, 678.0], [26.4, 678.0], [26.5, 678.0], [26.6, 678.0], [26.7, 678.0], [26.8, 678.0], [26.9, 678.0], [27.0, 700.0], [27.1, 700.0], [27.2, 700.0], [27.3, 700.0], [27.4, 700.0], [27.5, 700.0], [27.6, 700.0], [27.7, 700.0], [27.8, 700.0], [27.9, 700.0], [28.0, 706.0], [28.1, 706.0], [28.2, 706.0], [28.3, 706.0], [28.4, 706.0], [28.5, 706.0], [28.6, 706.0], [28.7, 706.0], [28.8, 706.0], [28.9, 706.0], [29.0, 731.0], [29.1, 731.0], [29.2, 731.0], [29.3, 731.0], [29.4, 731.0], [29.5, 731.0], [29.6, 731.0], [29.7, 731.0], [29.8, 731.0], [29.9, 731.0], [30.0, 755.0], [30.1, 755.0], [30.2, 755.0], [30.3, 755.0], [30.4, 755.0], [30.5, 755.0], [30.6, 755.0], [30.7, 755.0], [30.8, 755.0], [30.9, 755.0], [31.0, 781.0], [31.1, 781.0], [31.2, 781.0], [31.3, 781.0], [31.4, 781.0], [31.5, 781.0], [31.6, 781.0], [31.7, 781.0], [31.8, 781.0], [31.9, 781.0], [32.0, 805.0], [32.1, 805.0], [32.2, 805.0], [32.3, 805.0], [32.4, 805.0], [32.5, 805.0], [32.6, 805.0], [32.7, 805.0], [32.8, 805.0], [32.9, 805.0], [33.0, 821.0], [33.1, 821.0], [33.2, 821.0], [33.3, 821.0], [33.4, 821.0], [33.5, 821.0], [33.6, 821.0], [33.7, 821.0], [33.8, 821.0], [33.9, 821.0], [34.0, 822.0], [34.1, 822.0], [34.2, 822.0], [34.3, 822.0], [34.4, 822.0], [34.5, 822.0], [34.6, 822.0], [34.7, 822.0], [34.8, 822.0], [34.9, 822.0], [35.0, 831.0], [35.1, 831.0], [35.2, 831.0], [35.3, 831.0], [35.4, 831.0], [35.5, 831.0], [35.6, 831.0], [35.7, 831.0], [35.8, 831.0], [35.9, 831.0], [36.0, 867.0], [36.1, 867.0], [36.2, 867.0], [36.3, 867.0], [36.4, 867.0], [36.5, 867.0], [36.6, 867.0], [36.7, 867.0], [36.8, 867.0], [36.9, 867.0], [37.0, 897.0], [37.1, 897.0], [37.2, 897.0], [37.3, 897.0], [37.4, 897.0], [37.5, 897.0], [37.6, 897.0], [37.7, 897.0], [37.8, 897.0], [37.9, 897.0], [38.0, 907.0], [38.1, 907.0], [38.2, 907.0], [38.3, 907.0], [38.4, 907.0], [38.5, 907.0], [38.6, 907.0], [38.7, 907.0], [38.8, 907.0], [38.9, 907.0], [39.0, 918.0], [39.1, 918.0], [39.2, 918.0], [39.3, 918.0], [39.4, 918.0], [39.5, 918.0], [39.6, 918.0], [39.7, 918.0], [39.8, 918.0], [39.9, 918.0], [40.0, 938.0], [40.1, 938.0], [40.2, 938.0], [40.3, 938.0], [40.4, 938.0], [40.5, 938.0], [40.6, 938.0], [40.7, 938.0], [40.8, 938.0], [40.9, 938.0], [41.0, 943.0], [41.1, 943.0], [41.2, 943.0], [41.3, 943.0], [41.4, 943.0], [41.5, 943.0], [41.6, 943.0], [41.7, 943.0], [41.8, 943.0], [41.9, 943.0], [42.0, 944.0], [42.1, 944.0], [42.2, 944.0], [42.3, 944.0], [42.4, 944.0], [42.5, 944.0], [42.6, 944.0], [42.7, 944.0], [42.8, 944.0], [42.9, 944.0], [43.0, 949.0], [43.1, 949.0], [43.2, 949.0], [43.3, 949.0], [43.4, 949.0], [43.5, 949.0], [43.6, 949.0], [43.7, 949.0], [43.8, 949.0], [43.9, 949.0], [44.0, 953.0], [44.1, 953.0], [44.2, 953.0], [44.3, 953.0], [44.4, 953.0], [44.5, 953.0], [44.6, 953.0], [44.7, 953.0], [44.8, 953.0], [44.9, 953.0], [45.0, 978.0], [45.1, 978.0], [45.2, 978.0], [45.3, 978.0], [45.4, 978.0], [45.5, 978.0], [45.6, 978.0], [45.7, 978.0], [45.8, 978.0], [45.9, 978.0], [46.0, 996.0], [46.1, 996.0], [46.2, 996.0], [46.3, 996.0], [46.4, 996.0], [46.5, 996.0], [46.6, 996.0], [46.7, 996.0], [46.8, 996.0], [46.9, 996.0], [47.0, 997.0], [47.1, 997.0], [47.2, 997.0], [47.3, 997.0], [47.4, 997.0], [47.5, 997.0], [47.6, 997.0], [47.7, 997.0], [47.8, 997.0], [47.9, 997.0], [48.0, 1008.0], [48.1, 1008.0], [48.2, 1008.0], [48.3, 1008.0], [48.4, 1008.0], [48.5, 1008.0], [48.6, 1008.0], [48.7, 1008.0], [48.8, 1008.0], [48.9, 1008.0], [49.0, 1012.0], [49.1, 1012.0], [49.2, 1012.0], [49.3, 1012.0], [49.4, 1012.0], [49.5, 1012.0], [49.6, 1012.0], [49.7, 1012.0], [49.8, 1012.0], [49.9, 1012.0], [50.0, 1036.0], [50.1, 1036.0], [50.2, 1036.0], [50.3, 1036.0], [50.4, 1036.0], [50.5, 1036.0], [50.6, 1036.0], [50.7, 1036.0], [50.8, 1036.0], [50.9, 1036.0], [51.0, 1044.0], [51.1, 1044.0], [51.2, 1044.0], [51.3, 1044.0], [51.4, 1044.0], [51.5, 1044.0], [51.6, 1044.0], [51.7, 1044.0], [51.8, 1044.0], [51.9, 1044.0], [52.0, 1047.0], [52.1, 1047.0], [52.2, 1047.0], [52.3, 1047.0], [52.4, 1047.0], [52.5, 1047.0], [52.6, 1047.0], [52.7, 1047.0], [52.8, 1047.0], [52.9, 1047.0], [53.0, 1052.0], [53.1, 1052.0], [53.2, 1052.0], [53.3, 1052.0], [53.4, 1052.0], [53.5, 1052.0], [53.6, 1052.0], [53.7, 1052.0], [53.8, 1052.0], [53.9, 1052.0], [54.0, 1058.0], [54.1, 1058.0], [54.2, 1058.0], [54.3, 1058.0], [54.4, 1058.0], [54.5, 1058.0], [54.6, 1058.0], [54.7, 1058.0], [54.8, 1058.0], [54.9, 1058.0], [55.0, 1068.0], [55.1, 1068.0], [55.2, 1068.0], [55.3, 1068.0], [55.4, 1068.0], [55.5, 1068.0], [55.6, 1068.0], [55.7, 1068.0], [55.8, 1068.0], [55.9, 1068.0], [56.0, 1069.0], [56.1, 1069.0], [56.2, 1069.0], [56.3, 1069.0], [56.4, 1069.0], [56.5, 1069.0], [56.6, 1069.0], [56.7, 1069.0], [56.8, 1069.0], [56.9, 1069.0], [57.0, 1087.0], [57.1, 1087.0], [57.2, 1087.0], [57.3, 1087.0], [57.4, 1087.0], [57.5, 1087.0], [57.6, 1087.0], [57.7, 1087.0], [57.8, 1087.0], [57.9, 1087.0], [58.0, 1100.0], [58.1, 1100.0], [58.2, 1100.0], [58.3, 1100.0], [58.4, 1100.0], [58.5, 1100.0], [58.6, 1100.0], [58.7, 1100.0], [58.8, 1100.0], [58.9, 1100.0], [59.0, 1112.0], [59.1, 1112.0], [59.2, 1112.0], [59.3, 1112.0], [59.4, 1112.0], [59.5, 1112.0], [59.6, 1112.0], [59.7, 1112.0], [59.8, 1112.0], [59.9, 1112.0], [60.0, 1117.0], [60.1, 1117.0], [60.2, 1117.0], [60.3, 1117.0], [60.4, 1117.0], [60.5, 1117.0], [60.6, 1117.0], [60.7, 1117.0], [60.8, 1117.0], [60.9, 1117.0], [61.0, 1125.0], [61.1, 1125.0], [61.2, 1125.0], [61.3, 1125.0], [61.4, 1125.0], [61.5, 1125.0], [61.6, 1125.0], [61.7, 1125.0], [61.8, 1125.0], [61.9, 1125.0], [62.0, 1145.0], [62.1, 1145.0], [62.2, 1145.0], [62.3, 1145.0], [62.4, 1145.0], [62.5, 1145.0], [62.6, 1145.0], [62.7, 1145.0], [62.8, 1145.0], [62.9, 1145.0], [63.0, 1148.0], [63.1, 1148.0], [63.2, 1148.0], [63.3, 1148.0], [63.4, 1148.0], [63.5, 1148.0], [63.6, 1148.0], [63.7, 1148.0], [63.8, 1148.0], [63.9, 1148.0], [64.0, 1151.0], [64.1, 1151.0], [64.2, 1151.0], [64.3, 1151.0], [64.4, 1151.0], [64.5, 1151.0], [64.6, 1151.0], [64.7, 1151.0], [64.8, 1151.0], [64.9, 1151.0], [65.0, 1170.0], [65.1, 1170.0], [65.2, 1170.0], [65.3, 1170.0], [65.4, 1170.0], [65.5, 1170.0], [65.6, 1170.0], [65.7, 1170.0], [65.8, 1170.0], [65.9, 1170.0], [66.0, 1174.0], [66.1, 1174.0], [66.2, 1174.0], [66.3, 1174.0], [66.4, 1174.0], [66.5, 1174.0], [66.6, 1174.0], [66.7, 1174.0], [66.8, 1174.0], [66.9, 1174.0], [67.0, 1179.0], [67.1, 1179.0], [67.2, 1179.0], [67.3, 1179.0], [67.4, 1179.0], [67.5, 1179.0], [67.6, 1179.0], [67.7, 1179.0], [67.8, 1179.0], [67.9, 1179.0], [68.0, 1181.0], [68.1, 1181.0], [68.2, 1181.0], [68.3, 1181.0], [68.4, 1181.0], [68.5, 1181.0], [68.6, 1181.0], [68.7, 1181.0], [68.8, 1181.0], [68.9, 1181.0], [69.0, 1182.0], [69.1, 1182.0], [69.2, 1182.0], [69.3, 1182.0], [69.4, 1182.0], [69.5, 1182.0], [69.6, 1182.0], [69.7, 1182.0], [69.8, 1182.0], [69.9, 1182.0], [70.0, 1208.0], [70.1, 1208.0], [70.2, 1208.0], [70.3, 1208.0], [70.4, 1208.0], [70.5, 1208.0], [70.6, 1208.0], [70.7, 1208.0], [70.8, 1208.0], [70.9, 1208.0], [71.0, 1212.0], [71.1, 1212.0], [71.2, 1212.0], [71.3, 1212.0], [71.4, 1212.0], [71.5, 1212.0], [71.6, 1212.0], [71.7, 1212.0], [71.8, 1212.0], [71.9, 1212.0], [72.0, 1221.0], [72.1, 1221.0], [72.2, 1221.0], [72.3, 1221.0], [72.4, 1221.0], [72.5, 1221.0], [72.6, 1221.0], [72.7, 1221.0], [72.8, 1221.0], [72.9, 1221.0], [73.0, 1223.0], [73.1, 1223.0], [73.2, 1223.0], [73.3, 1223.0], [73.4, 1223.0], [73.5, 1223.0], [73.6, 1223.0], [73.7, 1223.0], [73.8, 1223.0], [73.9, 1223.0], [74.0, 1243.0], [74.1, 1243.0], [74.2, 1243.0], [74.3, 1243.0], [74.4, 1243.0], [74.5, 1243.0], [74.6, 1243.0], [74.7, 1243.0], [74.8, 1243.0], [74.9, 1243.0], [75.0, 1255.0], [75.1, 1255.0], [75.2, 1255.0], [75.3, 1255.0], [75.4, 1255.0], [75.5, 1255.0], [75.6, 1255.0], [75.7, 1255.0], [75.8, 1255.0], [75.9, 1255.0], [76.0, 1259.0], [76.1, 1259.0], [76.2, 1259.0], [76.3, 1259.0], [76.4, 1259.0], [76.5, 1259.0], [76.6, 1259.0], [76.7, 1259.0], [76.8, 1259.0], [76.9, 1259.0], [77.0, 1260.0], [77.1, 1260.0], [77.2, 1260.0], [77.3, 1260.0], [77.4, 1260.0], [77.5, 1260.0], [77.6, 1260.0], [77.7, 1260.0], [77.8, 1260.0], [77.9, 1260.0], [78.0, 1266.0], [78.1, 1266.0], [78.2, 1266.0], [78.3, 1266.0], [78.4, 1266.0], [78.5, 1266.0], [78.6, 1266.0], [78.7, 1266.0], [78.8, 1266.0], [78.9, 1266.0], [79.0, 1295.0], [79.1, 1295.0], [79.2, 1295.0], [79.3, 1295.0], [79.4, 1295.0], [79.5, 1295.0], [79.6, 1295.0], [79.7, 1295.0], [79.8, 1295.0], [79.9, 1295.0], [80.0, 1309.0], [80.1, 1309.0], [80.2, 1309.0], [80.3, 1309.0], [80.4, 1309.0], [80.5, 1309.0], [80.6, 1309.0], [80.7, 1309.0], [80.8, 1309.0], [80.9, 1309.0], [81.0, 1316.0], [81.1, 1316.0], [81.2, 1316.0], [81.3, 1316.0], [81.4, 1316.0], [81.5, 1316.0], [81.6, 1316.0], [81.7, 1316.0], [81.8, 1316.0], [81.9, 1316.0], [82.0, 1332.0], [82.1, 1332.0], [82.2, 1332.0], [82.3, 1332.0], [82.4, 1332.0], [82.5, 1332.0], [82.6, 1332.0], [82.7, 1332.0], [82.8, 1332.0], [82.9, 1332.0], [83.0, 1340.0], [83.1, 1340.0], [83.2, 1340.0], [83.3, 1340.0], [83.4, 1340.0], [83.5, 1340.0], [83.6, 1340.0], [83.7, 1340.0], [83.8, 1340.0], [83.9, 1340.0], [84.0, 1344.0], [84.1, 1344.0], [84.2, 1344.0], [84.3, 1344.0], [84.4, 1344.0], [84.5, 1344.0], [84.6, 1344.0], [84.7, 1344.0], [84.8, 1344.0], [84.9, 1344.0], [85.0, 1346.0], [85.1, 1346.0], [85.2, 1346.0], [85.3, 1346.0], [85.4, 1346.0], [85.5, 1346.0], [85.6, 1346.0], [85.7, 1346.0], [85.8, 1346.0], [85.9, 1346.0], [86.0, 1364.0], [86.1, 1364.0], [86.2, 1364.0], [86.3, 1364.0], [86.4, 1364.0], [86.5, 1364.0], [86.6, 1364.0], [86.7, 1364.0], [86.8, 1364.0], [86.9, 1364.0], [87.0, 1370.0], [87.1, 1370.0], [87.2, 1370.0], [87.3, 1370.0], [87.4, 1370.0], [87.5, 1370.0], [87.6, 1370.0], [87.7, 1370.0], [87.8, 1370.0], [87.9, 1370.0], [88.0, 1372.0], [88.1, 1372.0], [88.2, 1372.0], [88.3, 1372.0], [88.4, 1372.0], [88.5, 1372.0], [88.6, 1372.0], [88.7, 1372.0], [88.8, 1372.0], [88.9, 1372.0], [89.0, 1391.0], [89.1, 1391.0], [89.2, 1391.0], [89.3, 1391.0], [89.4, 1391.0], [89.5, 1391.0], [89.6, 1391.0], [89.7, 1391.0], [89.8, 1391.0], [89.9, 1391.0], [90.0, 1403.0], [90.1, 1403.0], [90.2, 1403.0], [90.3, 1403.0], [90.4, 1403.0], [90.5, 1403.0], [90.6, 1403.0], [90.7, 1403.0], [90.8, 1403.0], [90.9, 1403.0], [91.0, 1411.0], [91.1, 1411.0], [91.2, 1411.0], [91.3, 1411.0], [91.4, 1411.0], [91.5, 1411.0], [91.6, 1411.0], [91.7, 1411.0], [91.8, 1411.0], [91.9, 1411.0], [92.0, 1418.0], [92.1, 1418.0], [92.2, 1418.0], [92.3, 1418.0], [92.4, 1418.0], [92.5, 1418.0], [92.6, 1418.0], [92.7, 1418.0], [92.8, 1418.0], [92.9, 1418.0], [93.0, 1422.0], [93.1, 1422.0], [93.2, 1422.0], [93.3, 1422.0], [93.4, 1422.0], [93.5, 1422.0], [93.6, 1422.0], [93.7, 1422.0], [93.8, 1422.0], [93.9, 1422.0], [94.0, 1439.0], [94.1, 1439.0], [94.2, 1439.0], [94.3, 1439.0], [94.4, 1439.0], [94.5, 1439.0], [94.6, 1439.0], [94.7, 1439.0], [94.8, 1439.0], [94.9, 1439.0], [95.0, 1440.0], [95.1, 1440.0], [95.2, 1440.0], [95.3, 1440.0], [95.4, 1440.0], [95.5, 1440.0], [95.6, 1440.0], [95.7, 1440.0], [95.8, 1440.0], [95.9, 1440.0], [96.0, 1452.0], [96.1, 1452.0], [96.2, 1452.0], [96.3, 1452.0], [96.4, 1452.0], [96.5, 1452.0], [96.6, 1452.0], [96.7, 1452.0], [96.8, 1452.0], [96.9, 1452.0], [97.0, 1485.0], [97.1, 1485.0], [97.2, 1485.0], [97.3, 1485.0], [97.4, 1485.0], [97.5, 1485.0], [97.6, 1485.0], [97.7, 1485.0], [97.8, 1485.0], [97.9, 1485.0], [98.0, 1485.0], [98.1, 1485.0], [98.2, 1485.0], [98.3, 1485.0], [98.4, 1485.0], [98.5, 1485.0], [98.6, 1485.0], [98.7, 1485.0], [98.8, 1485.0], [98.9, 1485.0], [99.0, 1499.0], [99.1, 1499.0], [99.2, 1499.0], [99.3, 1499.0], [99.4, 1499.0], [99.5, 1499.0], [99.6, 1499.0], [99.7, 1499.0], [99.8, 1499.0], [99.9, 1499.0]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[0.0, 379.0], [0.1, 379.0], [0.2, 379.0], [0.3, 379.0], [0.4, 379.0], [0.5, 379.0], [0.6, 379.0], [0.7, 379.0], [0.8, 379.0], [0.9, 379.0], [1.0, 390.0], [1.1, 390.0], [1.2, 390.0], [1.3, 390.0], [1.4, 390.0], [1.5, 390.0], [1.6, 390.0], [1.7, 390.0], [1.8, 390.0], [1.9, 390.0], [2.0, 402.0], [2.1, 402.0], [2.2, 402.0], [2.3, 402.0], [2.4, 402.0], [2.5, 402.0], [2.6, 402.0], [2.7, 402.0], [2.8, 402.0], [2.9, 402.0], [3.0, 408.0], [3.1, 408.0], [3.2, 408.0], [3.3, 408.0], [3.4, 408.0], [3.5, 408.0], [3.6, 408.0], [3.7, 408.0], [3.8, 408.0], [3.9, 408.0], [4.0, 408.0], [4.1, 408.0], [4.2, 408.0], [4.3, 408.0], [4.4, 408.0], [4.5, 408.0], [4.6, 408.0], [4.7, 408.0], [4.8, 408.0], [4.9, 408.0], [5.0, 409.0], [5.1, 409.0], [5.2, 409.0], [5.3, 409.0], [5.4, 409.0], [5.5, 409.0], [5.6, 409.0], [5.7, 409.0], [5.8, 409.0], [5.9, 409.0], [6.0, 409.0], [6.1, 409.0], [6.2, 409.0], [6.3, 409.0], [6.4, 409.0], [6.5, 409.0], [6.6, 409.0], [6.7, 409.0], [6.8, 409.0], [6.9, 409.0], [7.0, 420.0], [7.1, 420.0], [7.2, 420.0], [7.3, 420.0], [7.4, 420.0], [7.5, 420.0], [7.6, 420.0], [7.7, 420.0], [7.8, 420.0], [7.9, 420.0], [8.0, 421.0], [8.1, 421.0], [8.2, 421.0], [8.3, 421.0], [8.4, 421.0], [8.5, 421.0], [8.6, 421.0], [8.7, 421.0], [8.8, 421.0], [8.9, 421.0], [9.0, 454.0], [9.1, 454.0], [9.2, 454.0], [9.3, 454.0], [9.4, 454.0], [9.5, 454.0], [9.6, 454.0], [9.7, 454.0], [9.8, 454.0], [9.9, 454.0], [10.0, 455.0], [10.1, 455.0], [10.2, 455.0], [10.3, 455.0], [10.4, 455.0], [10.5, 455.0], [10.6, 455.0], [10.7, 455.0], [10.8, 455.0], [10.9, 455.0], [11.0, 455.0], [11.1, 455.0], [11.2, 455.0], [11.3, 455.0], [11.4, 455.0], [11.5, 455.0], [11.6, 455.0], [11.7, 455.0], [11.8, 455.0], [11.9, 455.0], [12.0, 456.0], [12.1, 456.0], [12.2, 456.0], [12.3, 456.0], [12.4, 456.0], [12.5, 456.0], [12.6, 456.0], [12.7, 456.0], [12.8, 456.0], [12.9, 456.0], [13.0, 456.0], [13.1, 456.0], [13.2, 456.0], [13.3, 456.0], [13.4, 456.0], [13.5, 456.0], [13.6, 456.0], [13.7, 456.0], [13.8, 456.0], [13.9, 456.0], [14.0, 457.0], [14.1, 457.0], [14.2, 457.0], [14.3, 457.0], [14.4, 457.0], [14.5, 457.0], [14.6, 457.0], [14.7, 457.0], [14.8, 457.0], [14.9, 457.0], [15.0, 460.0], [15.1, 460.0], [15.2, 460.0], [15.3, 460.0], [15.4, 460.0], [15.5, 460.0], [15.6, 460.0], [15.7, 460.0], [15.8, 460.0], [15.9, 460.0], [16.0, 461.0], [16.1, 461.0], [16.2, 461.0], [16.3, 461.0], [16.4, 461.0], [16.5, 461.0], [16.6, 461.0], [16.7, 461.0], [16.8, 461.0], [16.9, 461.0], [17.0, 476.0], [17.1, 476.0], [17.2, 476.0], [17.3, 476.0], [17.4, 476.0], [17.5, 476.0], [17.6, 476.0], [17.7, 476.0], [17.8, 476.0], [17.9, 476.0], [18.0, 480.0], [18.1, 480.0], [18.2, 480.0], [18.3, 480.0], [18.4, 480.0], [18.5, 480.0], [18.6, 480.0], [18.7, 480.0], [18.8, 480.0], [18.9, 480.0], [19.0, 483.0], [19.1, 483.0], [19.2, 483.0], [19.3, 483.0], [19.4, 483.0], [19.5, 483.0], [19.6, 483.0], [19.7, 483.0], [19.8, 483.0], [19.9, 483.0], [20.0, 483.0], [20.1, 483.0], [20.2, 483.0], [20.3, 483.0], [20.4, 483.0], [20.5, 483.0], [20.6, 483.0], [20.7, 483.0], [20.8, 483.0], [20.9, 483.0], [21.0, 487.0], [21.1, 487.0], [21.2, 487.0], [21.3, 487.0], [21.4, 487.0], [21.5, 487.0], [21.6, 487.0], [21.7, 487.0], [21.8, 487.0], [21.9, 487.0], [22.0, 490.0], [22.1, 490.0], [22.2, 490.0], [22.3, 490.0], [22.4, 490.0], [22.5, 490.0], [22.6, 490.0], [22.7, 490.0], [22.8, 490.0], [22.9, 490.0], [23.0, 497.0], [23.1, 497.0], [23.2, 497.0], [23.3, 497.0], [23.4, 497.0], [23.5, 497.0], [23.6, 497.0], [23.7, 497.0], [23.8, 497.0], [23.9, 497.0], [24.0, 502.0], [24.1, 502.0], [24.2, 502.0], [24.3, 502.0], [24.4, 502.0], [24.5, 502.0], [24.6, 502.0], [24.7, 502.0], [24.8, 502.0], [24.9, 502.0], [25.0, 503.0], [25.1, 503.0], [25.2, 503.0], [25.3, 503.0], [25.4, 503.0], [25.5, 503.0], [25.6, 503.0], [25.7, 503.0], [25.8, 503.0], [25.9, 503.0], [26.0, 525.0], [26.1, 525.0], [26.2, 525.0], [26.3, 525.0], [26.4, 525.0], [26.5, 525.0], [26.6, 525.0], [26.7, 525.0], [26.8, 525.0], [26.9, 525.0], [27.0, 529.0], [27.1, 529.0], [27.2, 529.0], [27.3, 529.0], [27.4, 529.0], [27.5, 529.0], [27.6, 529.0], [27.7, 529.0], [27.8, 529.0], [27.9, 529.0], [28.0, 531.0], [28.1, 531.0], [28.2, 531.0], [28.3, 531.0], [28.4, 531.0], [28.5, 531.0], [28.6, 531.0], [28.7, 531.0], [28.8, 531.0], [28.9, 531.0], [29.0, 551.0], [29.1, 551.0], [29.2, 551.0], [29.3, 551.0], [29.4, 551.0], [29.5, 551.0], [29.6, 551.0], [29.7, 551.0], [29.8, 551.0], [29.9, 551.0], [30.0, 595.0], [30.1, 595.0], [30.2, 595.0], [30.3, 595.0], [30.4, 595.0], [30.5, 595.0], [30.6, 595.0], [30.7, 595.0], [30.8, 595.0], [30.9, 595.0], [31.0, 601.0], [31.1, 601.0], [31.2, 601.0], [31.3, 601.0], [31.4, 601.0], [31.5, 601.0], [31.6, 601.0], [31.7, 601.0], [31.8, 601.0], [31.9, 601.0], [32.0, 618.0], [32.1, 618.0], [32.2, 618.0], [32.3, 618.0], [32.4, 618.0], [32.5, 618.0], [32.6, 618.0], [32.7, 618.0], [32.8, 618.0], [32.9, 618.0], [33.0, 623.0], [33.1, 623.0], [33.2, 623.0], [33.3, 623.0], [33.4, 623.0], [33.5, 623.0], [33.6, 623.0], [33.7, 623.0], [33.8, 623.0], [33.9, 623.0], [34.0, 649.0], [34.1, 649.0], [34.2, 649.0], [34.3, 649.0], [34.4, 649.0], [34.5, 649.0], [34.6, 649.0], [34.7, 649.0], [34.8, 649.0], [34.9, 649.0], [35.0, 666.0], [35.1, 666.0], [35.2, 666.0], [35.3, 666.0], [35.4, 666.0], [35.5, 666.0], [35.6, 666.0], [35.7, 666.0], [35.8, 666.0], [35.9, 666.0], [36.0, 682.0], [36.1, 682.0], [36.2, 682.0], [36.3, 682.0], [36.4, 682.0], [36.5, 682.0], [36.6, 682.0], [36.7, 682.0], [36.8, 682.0], [36.9, 682.0], [37.0, 693.0], [37.1, 693.0], [37.2, 693.0], [37.3, 693.0], [37.4, 693.0], [37.5, 693.0], [37.6, 693.0], [37.7, 693.0], [37.8, 693.0], [37.9, 693.0], [38.0, 719.0], [38.1, 719.0], [38.2, 719.0], [38.3, 719.0], [38.4, 719.0], [38.5, 719.0], [38.6, 719.0], [38.7, 719.0], [38.8, 719.0], [38.9, 719.0], [39.0, 747.0], [39.1, 747.0], [39.2, 747.0], [39.3, 747.0], [39.4, 747.0], [39.5, 747.0], [39.6, 747.0], [39.7, 747.0], [39.8, 747.0], [39.9, 747.0], [40.0, 756.0], [40.1, 756.0], [40.2, 756.0], [40.3, 756.0], [40.4, 756.0], [40.5, 756.0], [40.6, 756.0], [40.7, 756.0], [40.8, 756.0], [40.9, 756.0], [41.0, 772.0], [41.1, 772.0], [41.2, 772.0], [41.3, 772.0], [41.4, 772.0], [41.5, 772.0], [41.6, 772.0], [41.7, 772.0], [41.8, 772.0], [41.9, 772.0], [42.0, 785.0], [42.1, 785.0], [42.2, 785.0], [42.3, 785.0], [42.4, 785.0], [42.5, 785.0], [42.6, 785.0], [42.7, 785.0], [42.8, 785.0], [42.9, 785.0], [43.0, 807.0], [43.1, 807.0], [43.2, 807.0], [43.3, 807.0], [43.4, 807.0], [43.5, 807.0], [43.6, 807.0], [43.7, 807.0], [43.8, 807.0], [43.9, 807.0], [44.0, 841.0], [44.1, 841.0], [44.2, 841.0], [44.3, 841.0], [44.4, 841.0], [44.5, 841.0], [44.6, 841.0], [44.7, 841.0], [44.8, 841.0], [44.9, 841.0], [45.0, 841.0], [45.1, 841.0], [45.2, 841.0], [45.3, 841.0], [45.4, 841.0], [45.5, 841.0], [45.6, 841.0], [45.7, 841.0], [45.8, 841.0], [45.9, 841.0], [46.0, 869.0], [46.1, 869.0], [46.2, 869.0], [46.3, 869.0], [46.4, 869.0], [46.5, 869.0], [46.6, 869.0], [46.7, 869.0], [46.8, 869.0], [46.9, 869.0], [47.0, 871.0], [47.1, 871.0], [47.2, 871.0], [47.3, 871.0], [47.4, 871.0], [47.5, 871.0], [47.6, 871.0], [47.7, 871.0], [47.8, 871.0], [47.9, 871.0], [48.0, 887.0], [48.1, 887.0], [48.2, 887.0], [48.3, 887.0], [48.4, 887.0], [48.5, 887.0], [48.6, 887.0], [48.7, 887.0], [48.8, 887.0], [48.9, 887.0], [49.0, 925.0], [49.1, 925.0], [49.2, 925.0], [49.3, 925.0], [49.4, 925.0], [49.5, 925.0], [49.6, 925.0], [49.7, 925.0], [49.8, 925.0], [49.9, 925.0], [50.0, 937.0], [50.1, 937.0], [50.2, 937.0], [50.3, 937.0], [50.4, 937.0], [50.5, 937.0], [50.6, 937.0], [50.7, 937.0], [50.8, 937.0], [50.9, 937.0], [51.0, 962.0], [51.1, 962.0], [51.2, 962.0], [51.3, 962.0], [51.4, 962.0], [51.5, 962.0], [51.6, 962.0], [51.7, 962.0], [51.8, 962.0], [51.9, 962.0], [52.0, 964.0], [52.1, 964.0], [52.2, 964.0], [52.3, 964.0], [52.4, 964.0], [52.5, 964.0], [52.6, 964.0], [52.7, 964.0], [52.8, 964.0], [52.9, 964.0], [53.0, 983.0], [53.1, 983.0], [53.2, 983.0], [53.3, 983.0], [53.4, 983.0], [53.5, 983.0], [53.6, 983.0], [53.7, 983.0], [53.8, 983.0], [53.9, 983.0], [54.0, 985.0], [54.1, 985.0], [54.2, 985.0], [54.3, 985.0], [54.4, 985.0], [54.5, 985.0], [54.6, 985.0], [54.7, 985.0], [54.8, 985.0], [54.9, 985.0], [55.0, 1001.0], [55.1, 1001.0], [55.2, 1001.0], [55.3, 1001.0], [55.4, 1001.0], [55.5, 1001.0], [55.6, 1001.0], [55.7, 1001.0], [55.8, 1001.0], [55.9, 1001.0], [56.0, 1008.0], [56.1, 1008.0], [56.2, 1008.0], [56.3, 1008.0], [56.4, 1008.0], [56.5, 1008.0], [56.6, 1008.0], [56.7, 1008.0], [56.8, 1008.0], [56.9, 1008.0], [57.0, 1015.0], [57.1, 1015.0], [57.2, 1015.0], [57.3, 1015.0], [57.4, 1015.0], [57.5, 1015.0], [57.6, 1015.0], [57.7, 1015.0], [57.8, 1015.0], [57.9, 1015.0], [58.0, 1019.0], [58.1, 1019.0], [58.2, 1019.0], [58.3, 1019.0], [58.4, 1019.0], [58.5, 1019.0], [58.6, 1019.0], [58.7, 1019.0], [58.8, 1019.0], [58.9, 1019.0], [59.0, 1020.0], [59.1, 1020.0], [59.2, 1020.0], [59.3, 1020.0], [59.4, 1020.0], [59.5, 1020.0], [59.6, 1020.0], [59.7, 1020.0], [59.8, 1020.0], [59.9, 1020.0], [60.0, 1039.0], [60.1, 1039.0], [60.2, 1039.0], [60.3, 1039.0], [60.4, 1039.0], [60.5, 1039.0], [60.6, 1039.0], [60.7, 1039.0], [60.8, 1039.0], [60.9, 1039.0], [61.0, 1043.0], [61.1, 1043.0], [61.2, 1043.0], [61.3, 1043.0], [61.4, 1043.0], [61.5, 1043.0], [61.6, 1043.0], [61.7, 1043.0], [61.8, 1043.0], [61.9, 1043.0], [62.0, 1049.0], [62.1, 1049.0], [62.2, 1049.0], [62.3, 1049.0], [62.4, 1049.0], [62.5, 1049.0], [62.6, 1049.0], [62.7, 1049.0], [62.8, 1049.0], [62.9, 1049.0], [63.0, 1079.0], [63.1, 1079.0], [63.2, 1079.0], [63.3, 1079.0], [63.4, 1079.0], [63.5, 1079.0], [63.6, 1079.0], [63.7, 1079.0], [63.8, 1079.0], [63.9, 1079.0], [64.0, 1085.0], [64.1, 1085.0], [64.2, 1085.0], [64.3, 1085.0], [64.4, 1085.0], [64.5, 1085.0], [64.6, 1085.0], [64.7, 1085.0], [64.8, 1085.0], [64.9, 1085.0], [65.0, 1097.0], [65.1, 1097.0], [65.2, 1097.0], [65.3, 1097.0], [65.4, 1097.0], [65.5, 1097.0], [65.6, 1097.0], [65.7, 1097.0], [65.8, 1097.0], [65.9, 1097.0], [66.0, 1110.0], [66.1, 1110.0], [66.2, 1110.0], [66.3, 1110.0], [66.4, 1110.0], [66.5, 1110.0], [66.6, 1110.0], [66.7, 1110.0], [66.8, 1110.0], [66.9, 1110.0], [67.0, 1112.0], [67.1, 1112.0], [67.2, 1112.0], [67.3, 1112.0], [67.4, 1112.0], [67.5, 1112.0], [67.6, 1112.0], [67.7, 1112.0], [67.8, 1112.0], [67.9, 1112.0], [68.0, 1113.0], [68.1, 1113.0], [68.2, 1113.0], [68.3, 1113.0], [68.4, 1113.0], [68.5, 1113.0], [68.6, 1113.0], [68.7, 1113.0], [68.8, 1113.0], [68.9, 1113.0], [69.0, 1116.0], [69.1, 1116.0], [69.2, 1116.0], [69.3, 1116.0], [69.4, 1116.0], [69.5, 1116.0], [69.6, 1116.0], [69.7, 1116.0], [69.8, 1116.0], [69.9, 1116.0], [70.0, 1119.0], [70.1, 1119.0], [70.2, 1119.0], [70.3, 1119.0], [70.4, 1119.0], [70.5, 1119.0], [70.6, 1119.0], [70.7, 1119.0], [70.8, 1119.0], [70.9, 1119.0], [71.0, 1130.0], [71.1, 1130.0], [71.2, 1130.0], [71.3, 1130.0], [71.4, 1130.0], [71.5, 1130.0], [71.6, 1130.0], [71.7, 1130.0], [71.8, 1130.0], [71.9, 1130.0], [72.0, 1136.0], [72.1, 1136.0], [72.2, 1136.0], [72.3, 1136.0], [72.4, 1136.0], [72.5, 1136.0], [72.6, 1136.0], [72.7, 1136.0], [72.8, 1136.0], [72.9, 1136.0], [73.0, 1162.0], [73.1, 1162.0], [73.2, 1162.0], [73.3, 1162.0], [73.4, 1162.0], [73.5, 1162.0], [73.6, 1162.0], [73.7, 1162.0], [73.8, 1162.0], [73.9, 1162.0], [74.0, 1163.0], [74.1, 1163.0], [74.2, 1163.0], [74.3, 1163.0], [74.4, 1163.0], [74.5, 1163.0], [74.6, 1163.0], [74.7, 1163.0], [74.8, 1163.0], [74.9, 1163.0], [75.0, 1168.0], [75.1, 1168.0], [75.2, 1168.0], [75.3, 1168.0], [75.4, 1168.0], [75.5, 1168.0], [75.6, 1168.0], [75.7, 1168.0], [75.8, 1168.0], [75.9, 1168.0], [76.0, 1194.0], [76.1, 1194.0], [76.2, 1194.0], [76.3, 1194.0], [76.4, 1194.0], [76.5, 1194.0], [76.6, 1194.0], [76.7, 1194.0], [76.8, 1194.0], [76.9, 1194.0], [77.0, 1198.0], [77.1, 1198.0], [77.2, 1198.0], [77.3, 1198.0], [77.4, 1198.0], [77.5, 1198.0], [77.6, 1198.0], [77.7, 1198.0], [77.8, 1198.0], [77.9, 1198.0], [78.0, 1200.0], [78.1, 1200.0], [78.2, 1200.0], [78.3, 1200.0], [78.4, 1200.0], [78.5, 1200.0], [78.6, 1200.0], [78.7, 1200.0], [78.8, 1200.0], [78.9, 1200.0], [79.0, 1223.0], [79.1, 1223.0], [79.2, 1223.0], [79.3, 1223.0], [79.4, 1223.0], [79.5, 1223.0], [79.6, 1223.0], [79.7, 1223.0], [79.8, 1223.0], [79.9, 1223.0], [80.0, 1224.0], [80.1, 1224.0], [80.2, 1224.0], [80.3, 1224.0], [80.4, 1224.0], [80.5, 1224.0], [80.6, 1224.0], [80.7, 1224.0], [80.8, 1224.0], [80.9, 1224.0], [81.0, 1227.0], [81.1, 1227.0], [81.2, 1227.0], [81.3, 1227.0], [81.4, 1227.0], [81.5, 1227.0], [81.6, 1227.0], [81.7, 1227.0], [81.8, 1227.0], [81.9, 1227.0], [82.0, 1232.0], [82.1, 1232.0], [82.2, 1232.0], [82.3, 1232.0], [82.4, 1232.0], [82.5, 1232.0], [82.6, 1232.0], [82.7, 1232.0], [82.8, 1232.0], [82.9, 1232.0], [83.0, 1238.0], [83.1, 1238.0], [83.2, 1238.0], [83.3, 1238.0], [83.4, 1238.0], [83.5, 1238.0], [83.6, 1238.0], [83.7, 1238.0], [83.8, 1238.0], [83.9, 1238.0], [84.0, 1262.0], [84.1, 1262.0], [84.2, 1262.0], [84.3, 1262.0], [84.4, 1262.0], [84.5, 1262.0], [84.6, 1262.0], [84.7, 1262.0], [84.8, 1262.0], [84.9, 1262.0], [85.0, 1275.0], [85.1, 1275.0], [85.2, 1275.0], [85.3, 1275.0], [85.4, 1275.0], [85.5, 1275.0], [85.6, 1275.0], [85.7, 1275.0], [85.8, 1275.0], [85.9, 1275.0], [86.0, 1285.0], [86.1, 1285.0], [86.2, 1285.0], [86.3, 1285.0], [86.4, 1285.0], [86.5, 1285.0], [86.6, 1285.0], [86.7, 1285.0], [86.8, 1285.0], [86.9, 1285.0], [87.0, 1293.0], [87.1, 1293.0], [87.2, 1293.0], [87.3, 1293.0], [87.4, 1293.0], [87.5, 1293.0], [87.6, 1293.0], [87.7, 1293.0], [87.8, 1293.0], [87.9, 1293.0], [88.0, 1295.0], [88.1, 1295.0], [88.2, 1295.0], [88.3, 1295.0], [88.4, 1295.0], [88.5, 1295.0], [88.6, 1295.0], [88.7, 1295.0], [88.8, 1295.0], [88.9, 1295.0], [89.0, 1322.0], [89.1, 1322.0], [89.2, 1322.0], [89.3, 1322.0], [89.4, 1322.0], [89.5, 1322.0], [89.6, 1322.0], [89.7, 1322.0], [89.8, 1322.0], [89.9, 1322.0], [90.0, 1322.0], [90.1, 1322.0], [90.2, 1322.0], [90.3, 1322.0], [90.4, 1322.0], [90.5, 1322.0], [90.6, 1322.0], [90.7, 1322.0], [90.8, 1322.0], [90.9, 1322.0], [91.0, 1327.0], [91.1, 1327.0], [91.2, 1327.0], [91.3, 1327.0], [91.4, 1327.0], [91.5, 1327.0], [91.6, 1327.0], [91.7, 1327.0], [91.8, 1327.0], [91.9, 1327.0], [92.0, 1328.0], [92.1, 1328.0], [92.2, 1328.0], [92.3, 1328.0], [92.4, 1328.0], [92.5, 1328.0], [92.6, 1328.0], [92.7, 1328.0], [92.8, 1328.0], [92.9, 1328.0], [93.0, 1333.0], [93.1, 1333.0], [93.2, 1333.0], [93.3, 1333.0], [93.4, 1333.0], [93.5, 1333.0], [93.6, 1333.0], [93.7, 1333.0], [93.8, 1333.0], [93.9, 1333.0], [94.0, 1345.0], [94.1, 1345.0], [94.2, 1345.0], [94.3, 1345.0], [94.4, 1345.0], [94.5, 1345.0], [94.6, 1345.0], [94.7, 1345.0], [94.8, 1345.0], [94.9, 1345.0], [95.0, 1373.0], [95.1, 1373.0], [95.2, 1373.0], [95.3, 1373.0], [95.4, 1373.0], [95.5, 1373.0], [95.6, 1373.0], [95.7, 1373.0], [95.8, 1373.0], [95.9, 1373.0], [96.0, 1377.0], [96.1, 1377.0], [96.2, 1377.0], [96.3, 1377.0], [96.4, 1377.0], [96.5, 1377.0], [96.6, 1377.0], [96.7, 1377.0], [96.8, 1377.0], [96.9, 1377.0], [97.0, 1379.0], [97.1, 1379.0], [97.2, 1379.0], [97.3, 1379.0], [97.4, 1379.0], [97.5, 1379.0], [97.6, 1379.0], [97.7, 1379.0], [97.8, 1379.0], [97.9, 1379.0], [98.0, 1389.0], [98.1, 1389.0], [98.2, 1389.0], [98.3, 1389.0], [98.4, 1389.0], [98.5, 1389.0], [98.6, 1389.0], [98.7, 1389.0], [98.8, 1389.0], [98.9, 1389.0], [99.0, 1391.0], [99.1, 1391.0], [99.2, 1391.0], [99.3, 1391.0], [99.4, 1391.0], [99.5, 1391.0], [99.6, 1391.0], [99.7, 1391.0], [99.8, 1391.0], [99.9, 1391.0]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 100.0, "series": [{"data": [[0.0, 100.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[2100.0, 16.0], [2200.0, 4.0], [2300.0, 1.0], [600.0, 7.0], [700.0, 8.0], [800.0, 7.0], [900.0, 4.0], [1000.0, 4.0], [1100.0, 3.0], [1200.0, 2.0], [1300.0, 4.0], [1400.0, 4.0], [1500.0, 4.0], [400.0, 1.0], [1600.0, 4.0], [1700.0, 4.0], [1800.0, 4.0], [1900.0, 5.0], [500.0, 8.0], [2000.0, 6.0]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[1100.0, 2.0], [1200.0, 3.0], [1300.0, 2.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 4.0], [1700.0, 16.0], [1800.0, 35.0], [1900.0, 19.0], [2000.0, 15.0]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[600.0, 4.0], [700.0, 5.0], [200.0, 5.0], [800.0, 6.0], [900.0, 10.0], [1000.0, 10.0], [1100.0, 12.0], [300.0, 3.0], [1200.0, 10.0], [1300.0, 10.0], [1400.0, 10.0], [100.0, 3.0], [400.0, 7.0], [500.0, 5.0]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[1100.0, 12.0], [1200.0, 11.0], [600.0, 7.0], [300.0, 2.0], [1300.0, 11.0], [700.0, 5.0], [800.0, 6.0], [400.0, 22.0], [900.0, 6.0], [1000.0, 11.0], [500.0, 7.0]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 138.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 219.0, "series": [{"data": [[0.0, 143.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 219.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 138.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 70.20600000000003, "minX": 1.57347558E12, "maxY": 70.20600000000003, "series": [{"data": [[1.57347558E12, 70.20600000000003]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347558E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.4299999999999998, "minX": 0.0, "maxY": 2308.0, "series": [{"data": [[0.0, 0.4299999999999998]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[0.0, 0.4299999999999998]], "isOverall": false, "label": "character_request-0-Aggregated", "isController": false}, {"data": [[2.0, 2136.0], [3.0, 2205.0], [4.0, 2199.0], [5.0, 2194.0], [6.0, 2212.0], [7.0, 2231.0], [8.0, 2187.0], [9.0, 2171.0], [10.0, 2136.0], [12.0, 2209.0], [13.0, 2118.0], [14.0, 2149.0], [15.0, 2112.0], [16.0, 2105.0], [17.0, 2189.0], [18.0, 2145.0], [19.0, 2119.0], [20.0, 2103.0], [21.0, 2094.0], [22.0, 2147.0], [23.0, 2071.0], [24.0, 2041.0], [25.0, 2010.0], [26.0, 1996.0], [27.0, 2037.0], [28.0, 2022.0], [30.0, 1969.0], [31.0, 1927.0], [33.0, 1885.0], [32.0, 1914.0], [35.0, 1853.0], [37.0, 1758.0], [36.0, 1813.0], [39.0, 1744.0], [38.0, 1738.0], [41.0, 1671.0], [40.0, 1700.0], [43.0, 1626.0], [42.0, 1670.0], [45.0, 1586.0], [44.0, 1611.0], [46.0, 1566.0], [49.0, 1472.0], [48.0, 1522.5], [51.0, 1420.0], [50.0, 1458.0], [53.0, 1389.0], [52.0, 1400.0], [55.0, 1321.0], [54.0, 1353.0], [57.0, 1294.0], [56.0, 1304.0], [59.0, 1194.0], [58.0, 1211.0], [61.0, 1133.0], [60.0, 1157.0], [63.0, 1045.0], [62.0, 1086.0], [67.0, 891.0], [66.0, 987.0], [65.0, 1000.0], [64.0, 1042.0], [71.0, 825.0], [70.0, 855.0], [69.0, 869.0], [68.0, 905.0], [75.0, 708.0], [74.0, 707.0], [73.0, 720.0], [72.0, 750.0], [79.0, 632.0], [78.0, 622.0], [77.0, 642.0], [76.0, 724.0], [83.0, 516.0], [82.0, 562.0], [81.0, 559.5], [87.0, 530.5], [85.0, 481.0], [84.0, 656.0], [88.0, 532.0], [95.0, 644.0], [98.0, 598.0], [100.0, 793.4], [1.0, 2308.0]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[51.14999999999998, 1409.72]], "isOverall": false, "label": "character_request-Aggregated", "isController": false}, {"data": [[98.0, 1891.5], [100.0, 1814.3265306122441]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[99.96, 1815.8699999999994]], "isOverall": false, "label": "login_request-Aggregated", "isController": false}, {"data": [[98.0, 1492.0], [100.0, 929.8673469387753]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[99.96, 941.1099999999998]], "isOverall": false, "label": "login_request-0-Aggregated", "isController": false}, {"data": [[98.0, 399.5], [100.0, 883.9999999999995]], "isOverall": false, "label": "login_request-1", "isController": false}, {"data": [[99.96, 874.3099999999996]], "isOverall": false, "label": "login_request-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1715.0, "minX": 1.57347558E12, "maxY": 45452.73333333333, "series": [{"data": [[1.57347558E12, 45452.73333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57347558E12, 1715.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347558E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.4299999999999998, "minX": 1.57347558E12, "maxY": 1815.8699999999994, "series": [{"data": [[1.57347558E12, 0.4299999999999998]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[1.57347558E12, 1409.72]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[1.57347558E12, 1815.8699999999994]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[1.57347558E12, 941.1099999999998]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[1.57347558E12, 874.3099999999996]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347558E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57347558E12, "maxY": 1388.3800000000003, "series": [{"data": [[1.57347558E12, 0.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[1.57347558E12, 1388.3800000000003]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[1.57347558E12, 941.06]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[1.57347558E12, 941.06]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[1.57347558E12, 874.0299999999999]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347558E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57347558E12, "maxY": 22.729999999999997, "series": [{"data": [[1.57347558E12, 0.0]], "isOverall": false, "label": "character_request-0", "isController": false}, {"data": [[1.57347558E12, 1.0300000000000002]], "isOverall": false, "label": "character_request", "isController": false}, {"data": [[1.57347558E12, 22.729999999999997]], "isOverall": false, "label": "login_request", "isController": false}, {"data": [[1.57347558E12, 22.729999999999997]], "isOverall": false, "label": "login_request-0", "isController": false}, {"data": [[1.57347558E12, 0.0]], "isOverall": false, "label": "login_request-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347558E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57347558E12, "maxY": 2308.0, "series": [{"data": [[1.57347558E12, 2308.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57347558E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57347558E12, 1981.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57347558E12, 2204.94]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57347558E12, 2036.95]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347558E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 258.5, "minX": 25.0, "maxY": 1322.0, "series": [{"data": [[75.0, 1087.0], [74.0, 661.0], [36.0, 1053.0], [25.0, 401.0], [232.0, 1322.0], [58.0, 258.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 232.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 256.0, "minX": 25.0, "maxY": 1050.5, "series": [{"data": [[75.0, 1007.0], [74.0, 659.0], [36.0, 1050.5], [25.0, 401.0], [232.0, 957.5], [58.0, 256.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 232.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.57347558E12, "maxY": 8.333333333333334, "series": [{"data": [[1.57347558E12, 8.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347558E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.57347558E12, "maxY": 6.666666666666667, "series": [{"data": [[1.57347558E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.57347558E12, 1.6666666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57347558E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.57347558E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.57347558E12, 1.6666666666666667]], "isOverall": false, "label": "login_request-1-success", "isController": false}, {"data": [[1.57347558E12, 1.6666666666666667]], "isOverall": false, "label": "character_request-success", "isController": false}, {"data": [[1.57347558E12, 1.6666666666666667]], "isOverall": false, "label": "login_request-success", "isController": false}, {"data": [[1.57347558E12, 1.6666666666666667]], "isOverall": false, "label": "character_request-0-success", "isController": false}, {"data": [[1.57347558E12, 1.6666666666666667]], "isOverall": false, "label": "login_request-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347558E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.57347558E12, "maxY": 8.333333333333334, "series": [{"data": [[1.57347558E12, 8.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57347558E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

